[{"D:\\Project\\ygocarder\\src\\index.js":"1","D:\\Project\\ygocarder\\src\\reportWebVitals.js":"2","D:\\Project\\ygocarder\\src\\App.tsx":"3","D:\\Project\\ygocarder\\src\\app.tsx":"4","D:\\Project\\ygocarder\\src\\model\\index.tsx":"5","D:\\Project\\ygocarder\\src\\component\\index.tsx":"6","D:\\Project\\ygocarder\\src\\util\\index.tsx":"7","D:\\Project\\ygocarder\\src\\model\\textbox.ts":"8","D:\\Project\\ygocarder\\src\\component\\textbox\\index.tsx":"9","D:\\Project\\ygocarder\\src\\component\\textbox\\title.tsx":"10","D:\\Project\\ygocarder\\src\\component\\loading\\index.tsx":"11"},{"size":510,"mtime":1610181286192,"results":"12","hashOfConfig":"13"},{"size":404,"mtime":1610181300618,"results":"14","hashOfConfig":"13"},{"size":356,"mtime":1609165206100,"results":"15","hashOfConfig":"16"},{"size":3619,"mtime":1610201431235,"results":"17","hashOfConfig":"13"},{"size":899,"mtime":1610204857721,"results":"18","hashOfConfig":"13"},{"size":36,"mtime":1610195068686,"results":"19","hashOfConfig":"13"},{"size":996,"mtime":1610246841109,"results":"20","hashOfConfig":"13"},{"size":71,"mtime":1610181846036,"results":"21","hashOfConfig":"13"},{"size":9076,"mtime":1610250075336,"results":"22","hashOfConfig":"13"},{"size":5343,"mtime":1610246936350,"results":"23","hashOfConfig":"13"},{"size":237,"mtime":1610249200959,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"tkh1wh",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"afpoqm",{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Project\\ygocarder\\src\\index.js",[],["50","51"],"D:\\Project\\ygocarder\\src\\reportWebVitals.js",[],"D:\\Project\\ygocarder\\src\\App.tsx",[],"D:\\Project\\ygocarder\\src\\app.tsx",["52","53"],"import React, { useEffect, useState } from 'react';\nimport './app.scss';\nimport 'antd/dist/antd.css';\nimport { Input, InputNumber, Select, Slider } from 'antd';\nimport { Card, defaultCard, ScaleValue } from './model';\nimport { debounce } from 'lodash';\nimport { TextBox } from './component';\nimport { scaleCalc } from './util';\n\nconst { TextArea } = Input;\n\nconst defaultZoomScaleRatio = 50;\nconst defaultScale: Record<string, ScaleValue> = {\n    zoom: {\n        scaleRatio: 1,\n        translatePercent: '0%',\n    },\n    effect: {\n        scaleRatio: 1,\n        translatePercent: '0%',\n    },\n};\nfunction App() {\n    const [currentCard, setCard] = useState<Card>(defaultCard);\n    const [zoomValue, setZoom] = useState({\n        scaleRatio: 1,\n        translatePercent: '0%',\n    });\n    const [scaleValue, setScaleValue] = useState({\n        effect: defaultScale,\n    });\n\n    const $onZoomChange = (value: number) => setZoom(scaleCalc(value, 100));\n    const onZoomChange = debounce($onZoomChange, 100);\n    const onEffectChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n        const value = e.target.value;\n\n        setCard(current => ({\n            ...current,\n            effect: value,\n        }));\n    };\n\n    useEffect(() => {\n        $onZoomChange(defaultZoomScaleRatio);\n    }, []);\n\n    const {\n        scaleRatio\n    } = zoomValue;\n    return (\n        <div className=\"app-container\">\n            <div className=\"card-filter-panel\">\n        Card filter here\n            </div>\n            <div className=\"card-info-panel\">\n                <Input key=\"name\" />\n                <Select key=\"attribute\">\n\n                </Select>\n                <InputNumber key=\"level-rank\" />\n                <Select key=\"st-icon\">\n\n                </Select>\n                <div key=\"pic\">\n          Pic?\n                </div>\n                <Input key=\"set-id\" />\n                <InputNumber key=\"pendulum-scale\" />\n                <TextArea key=\"pendulum-effect\" />\n                <div key=\"type\">\n                    <Select key=\"type-box-1\">\n\n                    </Select>\n                    <Select key=\"type-box-2\">\n\n                    </Select>\n                    <Select key=\"type-box-3\">\n\n                    </Select>\n                    <Select key=\"type-box-4\">\n\n                    </Select>\n                </div>\n                <TextArea key=\"effect\"\n                    placeholder=\"Card effect\"\n                    onChange={onEffectChange}\n                    rows={6}\n                />\n                <Input key=\"atk\" />\n                <Input key=\"def\" />\n                <InputNumber key=\"link-number\" />\n                <Input key=\"passcode\" />\n            </div>\n            <div className=\"card-preview-panel\">\n                <div className=\"control-board\">\n                    <div className=\"control-zoom\">\n                        <Slider\n                            min={1}\n                            max={100}\n                            defaultValue={defaultZoomScaleRatio}\n                            onChange={onZoomChange}\n                        />\n                        <span>{Math.round(zoomValue.scaleRatio * 100)}%</span>\n                    </div>\n                </div>\n                <div className=\"card-preview\" style={{\n                    '--zoom-ratio': zoomValue.scaleRatio,\n                    '--translate-percent': zoomValue.translatePercent,\n                } as any}>\n                    <TextBox name=\"effect\" zoom={scaleRatio} value={currentCard.effect} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n",["54","55"],"D:\\Project\\ygocarder\\src\\model\\index.tsx",[],"D:\\Project\\ygocarder\\src\\component\\index.tsx",[],"D:\\Project\\ygocarder\\src\\util\\index.tsx",[],"D:\\Project\\ygocarder\\src\\model\\textbox.ts",[],"D:\\Project\\ygocarder\\src\\component\\textbox\\index.tsx",[],"D:\\Project\\ygocarder\\src\\component\\textbox\\title.tsx",[],"D:\\Project\\ygocarder\\src\\component\\loading\\index.tsx",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":29,"column":12,"nodeType":"62","messageId":"63","endLine":29,"endColumn":22},{"ruleId":"60","severity":1,"message":"64","line":29,"column":24,"nodeType":"62","messageId":"63","endLine":29,"endColumn":37},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"@typescript-eslint/no-unused-vars","'scaleValue' is assigned a value but never used.","Identifier","unusedVar","'setScaleValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]