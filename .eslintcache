[{"D:\\Project\\ygocarder\\src\\index.js":"1","D:\\Project\\ygocarder\\src\\reportWebVitals.js":"2","D:\\Project\\ygocarder\\src\\App.tsx":"3","D:\\Project\\ygocarder\\src\\app.tsx":"4","D:\\Project\\ygocarder\\src\\model\\index.tsx":"5","D:\\Project\\ygocarder\\src\\component\\index.tsx":"6","D:\\Project\\ygocarder\\src\\util\\index.tsx":"7","D:\\Project\\ygocarder\\src\\model\\textbox.ts":"8","D:\\Project\\ygocarder\\src\\component\\textbox\\index.tsx":"9","D:\\Project\\ygocarder\\src\\component\\textbox\\title.tsx":"10","D:\\Project\\ygocarder\\src\\component\\loading\\index.tsx":"11","D:\\Project\\ygocarder\\src\\model\\monster.ts":"12","D:\\Project\\ygocarder\\src\\model\\trap.ts":"13","D:\\Project\\ygocarder\\src\\model\\spell.ts":"14","D:\\Project\\ygocarder\\src\\component\\star\\index.tsx":"15","D:\\Project\\ygocarder\\src\\component\\image\\index.tsx":"16","D:\\Project\\ygocarder\\src\\component\\card-picture\\index.tsx":"17","D:\\Project\\ygocarder\\src\\util\\categorize.tsx":"18","D:\\Project\\ygocarder\\src\\component\\type-ability\\index.tsx":"19","D:\\Project\\ygocarder\\src\\component\\link-marker\\index.tsx":"20","D:\\Project\\ygocarder\\src\\component\\textbox\\self-resize-box.tsx":"21"},{"size":510,"mtime":1610181286192,"results":"22","hashOfConfig":"23"},{"size":404,"mtime":1610181300618,"results":"24","hashOfConfig":"23"},{"size":356,"mtime":1609165206100,"results":"25","hashOfConfig":"26"},{"size":14125,"mtime":1613477651607,"results":"27","hashOfConfig":"23"},{"size":2261,"mtime":1613477826002,"results":"28","hashOfConfig":"23"},{"size":381,"mtime":1611242679439,"results":"29","hashOfConfig":"23"},{"size":1413,"mtime":1610721982283,"results":"30","hashOfConfig":"23"},{"size":71,"mtime":1610181846036,"results":"31","hashOfConfig":"23"},{"size":2127,"mtime":1613361667275,"results":"32","hashOfConfig":"23"},{"size":6314,"mtime":1611068843374,"results":"33","hashOfConfig":"23"},{"size":237,"mtime":1610249200959,"results":"34","hashOfConfig":"23"},{"size":1436,"mtime":1610634165017,"results":"35","hashOfConfig":"23"},{"size":271,"mtime":1610463328050,"results":"36","hashOfConfig":"23"},{"size":308,"mtime":1610463333395,"results":"37","hashOfConfig":"23"},{"size":1387,"mtime":1610727092318,"results":"38","hashOfConfig":"23"},{"size":1210,"mtime":1610722924188,"results":"39","hashOfConfig":"23"},{"size":5358,"mtime":1610764410747,"results":"40","hashOfConfig":"23"},{"size":260,"mtime":1610722964769,"results":"41","hashOfConfig":"23"},{"size":2556,"mtime":1611242655653,"results":"42","hashOfConfig":"23"},{"size":2338,"mtime":1610983505239,"results":"43","hashOfConfig":"23"},{"size":9879,"mtime":1613361326134,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"tkh1wh",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"afpoqm",{"filePath":"52","messages":"53","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"D:\\Project\\ygocarder\\src\\index.js",[],["92","93"],"D:\\Project\\ygocarder\\src\\reportWebVitals.js",[],"D:\\Project\\ygocarder\\src\\App.tsx",[],"D:\\Project\\ygocarder\\src\\app.tsx",["94","95","96","97","98","99","100","101"],"D:\\Project\\ygocarder\\src\\model\\index.tsx",[],"D:\\Project\\ygocarder\\src\\component\\index.tsx",[],["102","103"],"D:\\Project\\ygocarder\\src\\util\\index.tsx",["104"],"import { clamp } from 'ramda';\r\n\r\nexport const scaleCalc = (value: number, range = 1) => {\r\n    const normalizedValue = Math.max(0.01, value / range);\r\n    if (normalizedValue === 0) {\r\n        console.warn('Divided by Zero');\r\n        return {\r\n            scaleRatio: 1,\r\n            translatePercent: '-0%'\r\n        };\r\n    }\r\n    const newRatio = normalizedValue;\r\n    const newTranslatePercent = Math.round((1 - normalizedValue) / 2 / normalizedValue * 10000) / 100;\r\n\r\n    return {\r\n        scaleRatio: newRatio,\r\n        translatePercent: `${newTranslatePercent * -1}%`,\r\n    };\r\n};\r\n\r\nexport const compareFloat = (x: number | string, y: number | string) => {\r\n    const normalizedX = typeof x === 'string' ? parseFloat(x) : x;\r\n    const normalizedY = typeof y === 'string' ? parseFloat(y) : y;\r\n\r\n    return Math.round(normalizedX * 100000) - Math.round(normalizedY * 100000);\r\n};\r\n\r\nexport const px2pt = (value: number) => value * 3 / 4;\r\nexport const pt2px = (value: number) => value * 4 / 3;\r\n\r\nexport const quoteConvert = (text?: string) => {\r\n    let normalizedString = (text ?? '');\r\n    normalizedString = normalizedString.replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')\r\n        .replace(/'/g, '\\u2019')\r\n        .replace(/(^|[-\\u2014/[(\\u2018\\s])\"/g, '$1\\u201c')\r\n        .replace(/\"/g, '\\u201d')\r\n        .replace(/--/g, '\\u2014');\r\n    return normalizedString;\r\n};\r\n\r\nexport * from './categorize';","D:\\Project\\ygocarder\\src\\model\\textbox.ts",[],"D:\\Project\\ygocarder\\src\\component\\textbox\\index.tsx",[],"D:\\Project\\ygocarder\\src\\component\\textbox\\title.tsx",[],"D:\\Project\\ygocarder\\src\\component\\loading\\index.tsx",[],["105","106"],"D:\\Project\\ygocarder\\src\\model\\monster.ts",[],"D:\\Project\\ygocarder\\src\\model\\trap.ts",[],"D:\\Project\\ygocarder\\src\\model\\spell.ts",[],"D:\\Project\\ygocarder\\src\\component\\star\\index.tsx",[],"D:\\Project\\ygocarder\\src\\component\\image\\index.tsx",[],"D:\\Project\\ygocarder\\src\\component\\card-picture\\index.tsx",[],"D:\\Project\\ygocarder\\src\\util\\categorize.tsx",[],"D:\\Project\\ygocarder\\src\\component\\type-ability\\index.tsx",["107"],"import React from 'react';\r\nimport { TextBox, TextBoxTitle } from '../textbox';\r\nimport './type-ability.scss';\r\n\r\nconst TypeAbilitySpace = ({ type }: { type?: string }) => <span className={`type-ability-space ${type}-space`}> </span>;\r\nconst TypeAbilitySlash = ({ type }: { type?: string }) => <span className={`type-ability-slash ${type}-slash`}>/</span>;\r\nconst TypeAbilityBracket = ({\r\n    type,\r\n    children,\r\n}: { type?: string, children: React.ReactNode }) => <span className={`type-ability-bracket ${type}-bracket`}>{children}</span>;\r\n\r\nexport type TypeAbilityLine = {\r\n\tscaleRatio: number,\r\n\tsize: 'normal' | 'small',\r\n\ttypeAbility: string[],\r\n}\r\nexport const TypeAbilityLine = ({\r\n    scaleRatio,\r\n    size = 'normal',\r\n    typeAbility = [],\r\n}: TypeAbilityLine) => {\r\n    return <TextBoxTitle name=\"type-ability\" zoom={scaleRatio} value={`[ ${typeAbility.join(' / ')} ]`}\r\n        defaultMaxScaleRatio={1.075}\r\n        font={size === 'normal'\r\n            ? {\r\n                fontSize: 17.72,\r\n                lineHeight: 17.72 * 1.2,\r\n            }: {\r\n                fontSize: 16.41,\r\n                lineHeight: 16.41 * 1.2,\r\n            }}\r\n    >\r\n        <TypeAbilityBracket type={size}>[</TypeAbilityBracket>\r\n        <TypeAbilitySpace type=\"small\" />\r\n        {typeAbility\r\n            .reduce<string[]>((acc, cur) => {\r\n                if (acc.length === 0) acc.push(cur);\r\n                else {\r\n                    acc.push('/');\r\n                    acc.push(cur);\r\n                }\r\n                return acc;\r\n            }, [])\r\n            .map((entry, index) => {\r\n                if (entry === '/') return <React.Fragment key={`${index}slash`}>\r\n                    <TypeAbilitySpace type={size} />\r\n                    <TypeAbilitySlash type={size} />\r\n                    <TypeAbilitySpace type={size} />\r\n                </React.Fragment>;\r\n                const firstChar = entry[0];\r\n                const restChars = entry.slice(1);\r\n\r\n                return <span key={entry}>\r\n                    <span key={'first'} style={{\r\n                        fontSize: size === 'normal' ? '21pt' : '19.69pt',\r\n                    }}>\r\n                        {firstChar}\r\n                    </span>\r\n                    <span key={'second'} style={{\r\n                        textTransform: 'uppercase',\r\n                    }}>{restChars}</span>\r\n                </span>;\r\n            })}\r\n        <TypeAbilitySpace type=\"small\" />\r\n        <TypeAbilityBracket type={size}>]</TypeAbilityBracket>\r\n    </TextBoxTitle>;\r\n};","D:\\Project\\ygocarder\\src\\component\\link-marker\\index.tsx",[],"D:\\Project\\ygocarder\\src\\component\\textbox\\self-resize-box.tsx",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":8,"column":5,"nodeType":"114","messageId":"115","endLine":8,"endColumn":16},{"ruleId":"112","severity":1,"message":"116","line":11,"column":5,"nodeType":"114","messageId":"115","endLine":11,"endColumn":27},{"ruleId":"112","severity":1,"message":"117","line":19,"column":36,"nodeType":"114","messageId":"115","endLine":19,"endColumn":47},{"ruleId":"112","severity":1,"message":"118","line":19,"column":177,"nodeType":"114","messageId":"115","endLine":19,"endColumn":192},{"ruleId":"112","severity":1,"message":"119","line":26,"column":6,"nodeType":"114","messageId":"115","endLine":26,"endColumn":17},{"ruleId":"112","severity":1,"message":"120","line":107,"column":12,"nodeType":"114","messageId":"115","endLine":107,"endColumn":22},{"ruleId":"112","severity":1,"message":"121","line":107,"column":24,"nodeType":"114","messageId":"115","endLine":107,"endColumn":37},{"ruleId":"112","severity":1,"message":"122","line":165,"column":15,"nodeType":"114","messageId":"115","endLine":165,"endColumn":25},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"123","line":1,"column":10,"nodeType":"114","messageId":"115","endLine":1,"endColumn":15},{"ruleId":"108","replacedBy":"124"},{"ruleId":"110","replacedBy":"125"},{"ruleId":"112","severity":1,"message":"126","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":17},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"@typescript-eslint/no-unused-vars","'defaultCard' is defined but never used.","Identifier","unusedVar","'defaultMonsterCardType' is defined but never used.","'CardPicture' is defined but never used.","'TypeAbilityLine' is defined but never used.","'SelectValue' is defined but never used.","'scaleValue' is assigned a value but never used.","'setScaleValue' is assigned a value but never used.","'familyName' is assigned a value but never used.","'clamp' is defined but never used.",["127"],["128"],"'TextBox' is defined but never used.","no-global-assign","no-unsafe-negation"]