{"version":3,"sources":["model/index.tsx","util/categorize.tsx","util/condenser.ts","util/index.tsx","component/card-picture/index.tsx","component/link-marker/index.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/style-picker/index.tsx","page/input-panel/index.tsx","page/app-header/index.tsx","const/size.ts","const/position.ts","draw/text.ts","draw/util.ts","draw/predefine.ts","draw/type-ability.ts","draw/image.ts","app.tsx","reportWebVitals.js","index.js"],"names":["defaultTextStyle","fillStyle","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","globalAlpha","defaultMonster","atk","attribute","frame","subFamily","def","type_ability","effect","link_map","name","nameStyleType","nameStyle","passcode","foil","sticker","isPendulum","pendulum_effect","red_scale","blue_scale","picture","pictureCrop","x","y","width","height","aspect","unit","set_id","star","isFirstEdition","creator","frameType","color","backgroundColor","iconList","foilStyleMap","gold","platinum","foilList","textStyle","checkXyz","card","checkLink","checkMonster","getCardFrame","find","entry","toLowerCase","createCondenser","minThreshold","maxThreshold","min","max","median","lastEffective","iterateCount","magnitude","reverseSearch","finish","Math","searchDown","reset","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","randomCharacter","charSet","length","result","charactersLength","i","charAt","floor","random","randomSetID","randomPassword","splitEffect","isNormal","effectBody","effectMaterial","materialRegex","materialReplacement","exec","material","replace","effectFlavorCondition","flavorConditionRegex","flavorCondition","body","quoteConvert","text","normalizedString","ImageCropper","noRedrawNumber","defaultExternalSource","previewCanvasRef","children","ratio","defaultCropInfo","onSourceChange","onImageChange","useState","sourceType","setSourceType","internalSource","setInternalSource","externalSource","setExternalSource","imgRef","useRef","crop","setCrop","completedCrop","setCompletedCrop","onLoad","useCallback","img","current","useEffect","image","canvas","ctx","getContext","scaleX","naturalWidth","scaleY","naturalHeight","pixelRatio","window","devicePixelRatio","boundingWidth","ceil","getBoundingClientRect","boundingHeight","setTransform","imageSmoothingQuality","drawImage","className","Group","onChange","e","target","value","Button","addonBefore","placeholder","source","maxLength","type","accept","files","reader","FileReader","addEventListener","readAsDataURL","disabled","onClick","toBlob","blob","previewUrl","URL","createObjectURL","anchor","document","createElement","download","href","click","revokeObjectURL","generateDownload","style","src","onImageLoaded","cropData","onComplete","ruleOfThirds","LinkMarkChooser","defaultValue","choosenArrow","setChoosenArrow","rotateMap","literalChoosenArrow","JSON","stringify","Array","map","index","normalizedIndex","overlay","includes","cur","newMap","filter","push","transform","RadioButton","Radio","foilButton","fontWeight","toLocaleUpperCase","frameButton","attributeButton","alt","process","iconButton","starButton","stickerButton","CharPicker","targetId","onPick","setTarget","internalOnPick","char","inputTarget","getElementById","myField","myValue","selection","focus","createRange","position","selectionStart","startPos","endPos","selectionEnd","substring","insertAtCursor","onDrag","left","top","id","EllipsisOutlined","container","edge","draggable","throttleDrag","StylePicker","React","memo","defaultType","undebouncedOnChange","isExpand","setExpand","setType","setValue","isVisible","setVisible","debounce","setCustomValue","key","inputValue","curValue","newStyle","boxShadow","background","zIndex","checked","newType","CloseOutlined","hex","CaretUpOutlined","CaretDownOutlined","axis","styles","track","gridRow","thumb","xmax","xmin","ymax","ymin","size","TextArea","Input","onChangeFactory","mutateFunction","valueTransform","isArray","RandomButton","seeder","onGenerate","marginLeft","paddingLeft","borderLeft","SyncOutlined","CardInputPanel","currentCard","receivingCanvasRef","onCardChange","isMirrorScale","setMirrorScale","setCard","mutateFunc","onFoilChange","onAttributeChange","onSubFamilyChange","onNameChange","onStarChange","onPictureChange","onLinkMapChange","onRedScaleChange","onBlueScaleChange","onPendulumEffectChange","onEffectChange","onATKChange","onDEFChange","onTypeAbilityChange","onSetIDChange","onPasscodeChange","onStickerChange","onCreatorChange","isXyz","isLink","isMonster","join","displayTypeAbility","setDisplayTypeAbility","displayName","setDisplayName","displayEffect","setDisplayEffect","displayPendulumEffect","setDisplayPendulumEffect","onlineCharPicker","setOnlineCharPicker","ref","props","isST","onFocus","allowClear","ev","rows","split","trim","AppHeader","rel","overlayClassName","content","ExclamationCircleOutlined","monsterFontList","fontSize","lineHeight","lineCount","monsterSizeList","pendulumFontList","pendulumSizeList","stFontList","stSizeList","typeSizeMap","small","bracketSize","bracketSpace","bracketOffsetTop","upperCaseSize","upperCaseScale","lowerCaseSize","lowerCaseScale","spaceScale","spaceSize","frontSpace","behindSpace","iconSpace","medium","large","arrowPositionList","foilPosition","art","drawScale","baseline","digitList","totalWidth","forEach","digit","measureText","accLeft","fillText","drawEffect","isPendulumEffect","fontList","sizeList","normalizedContent","effectIndexSize","tolerantPerSentence","additionalLineCount","sentencizeText","bulletSymbol","specialSymbol","tokenizeR","RegExp","specialSymbolReg","condenser","effectiveRatio","maxLine","font","textAlign","switchFont","func","tempFont","largeSize","lineList","reduce","prev","curr","condenseRatio","hypoWidth","tokenizedText","currentLineCount","tokenSentence","cnt","tokenWidth","test","fullString","fullStringSplittedByBullet","isLast","drawBullet","beginPath","arc","PI","fill","lineWidth","strokeStyle","stroke","clearRect","actualWidth","scale","sigmoidRatio","splitter","spaceSeparatedText","nonSpaceWidth","spaceCount","spaceWidth","fillTextLeftWithSpacing","str","letterSpacingRatio","charList","curLeft","fillTextRightWithSpacing","curRight","c","drawCreatorText","symbol","maxWidth","splittedContent","splittedWidth","symbolWidth","totalCondensableWidth","returnBundle","measureWithSymbol","nextEdge","drawAD","$value","nextWidth","arr","curText","drawBracketTemplate","alignment","bracketChar","alignmentOffset","drawIconSpaceTemplate","drawBracketSpaceTemplate","drawTextTemplate","spaceChar","drawSlashTemplate","baseOffset","totalOffset","upperChar","imageCacheMap","drawFromSource","sx","sy","a","Promise","resolve","ready","normalizedX","normalizedY","Image","onload","onerror","drawFromSourceWithSize","dw","dh","App","isInitializing","setInitializing","error","setError","drawCanvasRef","frameCanvasRef","artCanvasRef","specialFrameCanvasRef","subFamilyCanvasRef","pendulumScaleCanvasRef","pendulumEffectCanvasRef","typeCanvasRef","effectCanvasRef","nameCanvasRef","attributeCanvasRef","ADCanvasRef","setIdRef","passcodeRef","firstEditionRef","creatorRef","stickerRef","pendulumSize","drawingPipeline","specialFrame","imageChangeCount","setImageChangeCount","cardType","hasFoil","previewCtx","foiledBorder","all","parseInt","counter","offset","normalizedSubFamily","toUpperCase","splittedText","contentWidth","drawName","draw1stEdition","drawTypeAbility","console","log","instructionList","reverse","typeCtx","WebFont","load","custom","families","urls","active","localCardVersion","localStorage","getItem","localCardData","parse","inactive","exportRef","currentPipeline","queuedPipeline","relevant","setItem","querySelector","setAttribute","onExport","exportProps","canvasRef","exportCtx","generateLayer","canvasLayer","layerData","toDataURL","layer","Object","values","callDraw","layerList","currentlayer","backgroundImage","cropInfo","LoadingOutlined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a3faf289.chunk.js","sourcesContent":["export type TextStyleType = 'auto' | 'custom';\nexport type TextStyle = typeof defaultTextStyle;\nexport const defaultTextStyle = {\n    fillStyle: '#000000',\n    shadowColor: '#000000',\n    shadowOffsetY: 0,\n    shadowOffsetX: 0,\n    shadowBlur: 0,\n    globalAlpha: 1,\n};\n\nexport type Card = typeof defaultCard;\nexport const defaultCard = {\n    atk: '100',\n    attribute: 'DARK',\n    frame: 'effect',\n    subFamily: 'Level',\n    def: '2000',\n    type_ability: ['Dragon', 'Pendulum', 'Effect'] as string[],\n    effect: `[\"Blue-Eyes White Dragon\" + \"Blue-Eyes White Dragon\" + \"Blue-Eyes White Dragon\"]\nYour opponent cannot target or destroy this card with card effects. Once per turn: You can target 1 card your opponent controls; destroy it.\n● If this card was Fusion Summoned using a monster whose original name is \"Blue-Eyes Alternative White Dragon\" as material, you can target up to 3 cards your opponent controls instead.\n● This card cannot attack the turn this effect is activated.\n(This card is always treated as \"Blue-Eyes Ultimate Dragon\")`,\n    link_map: ['1', '2', '3', '8', '9'] as string[],\n    name: 'B.F.A - U3 “Eden”',\n    nameStyleType: 'auto' as TextStyleType,\n    nameStyle: {\n        fillStyle: '#000000',\n        shadowColor: '#000000',\n        shadowOffsetY: 0,\n        shadowOffsetX: 0,\n        shadowBlur: 0,\n        globalAlpha: 1,\n    } as TextStyle,\n    passcode: '24907043',\n    foil: 'normal',\n    sticker: 'holo2',\n    isPendulum: true,\n    pendulum_effect: 'You can pay 1000 LP; add 1 \"Abyss Actor\" Pendulum Monster from your Deck to your hand, except \"Abyss Actor - Mellow Madonna\", also you cannot Special Summon monsters for the rest of this turn, except \"Abyss Actor\" Pendulum Monsters (even if this card leaves the field). You can only use this effect of \"Abyss Actor - Mellow Madonna\" once per turn.',\n    red_scale: '0',\n    blue_scale: '13',\n    picture: 'https://i.imgur.com/h5kXZeC.png',\n    pictureCrop: {\n        x: 0,\n        y: 0,\n        width: 100,\n        height: 100,\n        aspect: 1,\n        unit: 'px',\n    } as Partial<ReactCrop.Crop>,\n    set_id: 'ROTD-EN081',\n    star: 4,\n    isFirstEdition: true,\n    creator: '©2020 Studio Dice/SHUEISHA TV TOKYO, KONAMI',\n};\nexport const defaultMonster = defaultCard;\n\nexport const frameType = [\n    { name: 'normal', color: '#fff', backgroundColor: '#c49c5e' },\n    { name: 'effect', color: '#fff', backgroundColor: '#b96c49' },\n    { name: 'fusion', color: '#fff', backgroundColor: '#8948a4' },\n    { name: 'synchro', color: '#000', backgroundColor: '#efefef' },\n    { name: 'xyz', color: '#fff', backgroundColor: '#000' },\n    { name: 'link', color: '#fff', backgroundColor: '#0c8ac6' },\n    { name: 'ritual', color: '#fff', backgroundColor: '#5e85c9' },\n    { name: 'spell', color: '#fff', backgroundColor: '#1b8f83' },\n    { name: 'trap', color: '#fff', backgroundColor: '#c32a8c' },\n    { name: 'token', color: '#fff', backgroundColor: '#6f6c6b' },\n];\n\nexport const iconList = [\n    'NO ICON',\n    'FIELD',\n    'CONTINUOUS',\n    'QUICK-PLAY',\n    'RITUAL',\n    'COUNTER',\n];\n\nexport const foilStyleMap: Record<string, TextStyle> = {\n    gold: {\n        fillStyle: '#b88c43',\n        shadowColor: '#FCC400',\n        shadowOffsetY: 1,\n        shadowOffsetX: 0,\n        shadowBlur: 1,\n        globalAlpha: 1,\n    },\n    platinum: {\n        fillStyle: '#CCCCCC',\n        shadowColor: '#FFFFFF',\n        shadowOffsetY: 1,\n        shadowOffsetX: 0,\n        shadowBlur: 1,\n        globalAlpha: 1,\n    },\n};\nexport const foilList = [\n    { name: 'normal', color: '#747b95', textStyle: defaultTextStyle },\n    { name: 'gold', color: '#cfa65f' },\n    { name: 'platinum', color: '#b1b1b1' },\n];\n\nexport const stickerList = [\n    'gold',\n    'silver',\n    'beta',\n    'holo5',\n    'holo4',\n    'holo3',\n    'holo2',\n    'holo1',\n];\n\nexport const attributeList = [\n    { name: 'DARK', color: '#b41dda' },\n    { name: 'EARTH', color: '#8d8e8e' },\n    { name: 'FIRE', color: '#e51b23' },\n    { name: 'LIGHT', color: '#bfae32' },\n    { name: 'WATER', color: '#008ecd' },\n    { name: 'WIND', color: '#28ab35' },\n    { name: 'DIVINE', color: '#ef6300' },\n    { name: 'SPELL', color: '#1b8f83' },\n    { name: 'TRAP', color: '#c32a8c' },\n];","import { Card, frameType } from '../model';\n\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'normal' && checkMonster(card);\n};\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'xyz';\n};\nexport const checkLink = (card: Pick<Card, 'frame' | 'type_ability'>) => {\n    return card.frame === 'link' && checkMonster(card);\n};\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\n    return card.frame !== 'spell' && card.frame !== 'trap';\n};\n\nexport const getCardFrame = (frame: string) => {\n    return frameType.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\n};","export const createCondenser = (minThreshold = 0, maxThreshold = 1000) => {\n    let min = minThreshold;\n    let max = maxThreshold;\n    let median = max;\n    let lastEffective = median;\n    let iterateCount = 30;\n    let magnitude = 100;\n\n    const reverseSearch = () => {\n        if (magnitude === 1) finish();\n        else {\n            median += magnitude;\n            magnitude /= 10;\n            median -= magnitude;\n        }\n\n        return Math.min(median, max);\n    };\n\n    const searchDown = () => {\n        median -= magnitude;\n        iterateCount -= 1;\n\n        return median;\n    };\n\n    const reset = (minThreshold = min, maxThreshold = max) => {\n        min = minThreshold;\n        max = maxThreshold;\n        median = maxThreshold;\n        iterateCount = 30;\n        magnitude = 100;\n        lastEffective = maxThreshold;\n    };\n\n    const getMedian = () => median;\n    const setMedian = (newMedian: number) => median = newMedian;\n\t\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\n    const getLastEffective = () => lastEffective;\n    const applyLastEffective = () => {\n        median = lastEffective;\n        iterateCount = -1;\n        return median;\n    };\n\t\n    const getIterateCount = () => iterateCount;\n    const finish = () => iterateCount = -1;\n\n    return {\n        reset,\n        searchDown,\n        reverseSearch,\n        finish,\n        getMedian,\n        setMedian,\n        setLastEffective,\n        getLastEffective,\n        applyLastEffective,\n        getIterateCount,\n    };\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\n    let result           = '';\n    const charactersLength = charSet.length;\n    for ( let i = 0; i < length; i++) {\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n};\n\nexport const randomSetID = () => {\n    return `${randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)}-EN${randomCharacter('0123456789', 3)}`;\n};\n\nexport const randomPassword = () => {\n    return `${randomCharacter('0123456789', 8)}`;\n};\n\nexport const splitEffect = (effect: string, isNormal = false) => {\n    let effectBody = effect;\n\n    let effectMaterial = '';\n    const materialRegex = /^(\\[([^\\]]*)\\]\\s*)/m;\n    const materialReplacement = materialRegex.exec(effectBody)?.[1];\n    const material = materialRegex.exec(effectBody)?.[2];\n    if (material && materialReplacement) {\n        effectMaterial = material;\n        effectBody = effectBody.replace(materialReplacement, '');\n    } else effectMaterial = '';\n\n    let effectFlavorCondition = '';\n    const flavorConditionRegex = /(\\n^[\\r\\t\\f\\v \\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]*\\([\\w\\W]+\\))\\s*$/m;\n    const flavorCondition = flavorConditionRegex.exec(effect)?.[1];\n    if (flavorCondition && isNormal) {\n        effectFlavorCondition = flavorCondition;\n        effectBody = effectBody.replace(flavorCondition, '');\n    } else effectFlavorCondition = '';\n\n    return {\n        material: effectMaterial,\n        body: effectBody,\n        flavorCondition: effectFlavorCondition\n    };\n};\n\nexport const quoteConvert = (text?: string) => {\n    let normalizedString = (text ?? '');\n    normalizedString = normalizedString.replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')\n        .replace(/'/g, '\\u2019')\n        .replace(/(^|[-\\u2014/[(\\u2018\\s])\"/g, '$1\\u201c')\n        .replace(/\"/g, '\\u201d')\n        .replace(/--/g, '\\u2014');\n    return normalizedString;\n};\n\nexport * from './categorize';\nexport * from './condenser';","import { Button, Input, Radio } from 'antd';\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './card-picture.scss';\n\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\n    if (!crop || !canvas) return;\n    canvas.toBlob(\n        (blob) => {\n            const previewUrl = window.URL.createObjectURL(blob);\n\n            const anchor = document.createElement('a');\n            anchor.download = 'cropPreview.png';\n            anchor.href = URL.createObjectURL(blob);\n            anchor.click();\n\n            window.URL.revokeObjectURL(previewUrl);\n        },\n        'image/png',\n        1\n    );\n}\n\nexport type ImageCropper = {\n    noRedrawNumber?: number,\n\tdefaultExternalSource?: string,\n    previewCanvasRef?: HTMLCanvasElement | null,\n    children?: React.ReactNode,\n    ratio?: number,\n    defaultCropInfo: Partial<ReactCrop.Crop>,\n    onSourceChange?: (source: string) => void,\n    onImageChange?: (cropInfo: Partial<ReactCrop.Crop>) => void,\n}\nexport const ImageCropper = ({\n    noRedrawNumber = 0,\n    defaultExternalSource = '',\n    previewCanvasRef,\n    children,\n    ratio = 1,\n    defaultCropInfo,\n    onSourceChange = () => {},\n    onImageChange = () => {},\n}: ImageCropper) => {\n    const [sourceType, setSourceType] = useState('external');\n    const [internalSource, setInternalSource] = useState('');\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\n    const imgRef = useRef<HTMLImageElement | null>(null);\n    const [crop, setCrop] = useState<ReactCrop.Crop>(defaultCropInfo);\n    const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\n\n    const onSelectFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const reader = new FileReader();\n            reader.addEventListener('load', () => {\n                if (typeof reader.result === 'string') {\n                    setInternalSource(reader.result);\n                    setSourceType('internal');\n                }\n            });\n            reader.readAsDataURL(e.target.files[0]);\n        }\n    };\n\n    const onLoad = useCallback((img) => {\n        imgRef.current = img;\n    }, []);\n\t\n    const onExternalSourceChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const source = e.target.value;\n\n        onSourceChange(source);\n        setExternalSource(source);\n    };\n\n    useEffect(() => {\n        const image = imgRef.current;\n        const canvas = previewCanvasRef;\n        const crop = completedCrop;\n        if (!crop || !canvas || !image) return;\n\n        const ctx = canvas.getContext('2d');\n        if (!ctx) return;\n\n        const scaleX = image.naturalWidth / image.width;\n        const scaleY = image.naturalHeight / image.height;\n        const pixelRatio = window.devicePixelRatio;\n        const boundingWidth = Math.ceil(canvas.getBoundingClientRect().width);\n        const boundingHeight = Math.ceil(canvas.getBoundingClientRect().height);\n\n        canvas.width = (boundingWidth ?? 0) * pixelRatio;\n        canvas.height = (boundingHeight ?? 0) * pixelRatio;\n\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        ctx.imageSmoothingQuality = 'high';\n\n        ctx.drawImage(\n            image,\n            (crop.x ?? 0) * scaleX,\n            (crop.y ?? 0) * scaleY,\n            (crop.width ?? 0) * scaleX,\n            (crop.height ?? 0) * scaleY,\n            0,\n            0,\n            (boundingWidth ?? 0),\n            (boundingHeight ?? 0)\n        );\n        onImageChange(crop);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [completedCrop, previewCanvasRef, noRedrawNumber]);\n\n    return (\n        <div className=\"card-image-cropper\">\n            <div className=\"card-image-source-input\">\n                {children}\n                <Radio.Group onChange={e => setSourceType(e.target.value)} value={sourceType}>\n                    <Radio.Button value={'external'}>\n                        <Input key=\"key\"\n                            addonBefore=\"Link\" placeholder=\"https://my-online-image...\"\n                            value={externalSource}\n                            onChange={onExternalSourceChange} maxLength={256} />\n                    </Radio.Button>\n                    <Radio.Button value={'internal'}>\n                        <Input type=\"file\"  accept=\"image/*\" onChange={onSelectFile} />\n                        <div>\n                            {sourceType === 'internal' && <>\n                                <Button\n                                    className=\"download-button\"\n                                    disabled={!completedCrop?.width || !completedCrop?.height}\n                                    onClick={() => previewCanvasRef && generateDownload(previewCanvasRef, completedCrop)}\n                                >\n                                Download cropped image\n                                </Button>\n                                <span style={{ color: '#FF6F6F' }}>Offline images are not auto saved!</span>\n                            </>}\n                        </div>\n                    </Radio.Button>\n                </Radio.Group>\n            </div>\n            <div className=\"card-cropper\">\n                <ReactCrop key={sourceType}\n                    src={sourceType === 'internal' ? internalSource : externalSource}\n                    onImageLoaded={onLoad}\n                    crop={crop}\n                    onChange={cropData => setCrop({ ...cropData, aspect: ratio })}\n                    onComplete={cropData => setCompletedCrop(cropData)}\n                    ruleOfThirds={true}\n                />\n            </div>\n        </div>\n    );\n};\n","import { Tooltip } from 'antd';\nimport { useEffect, useState } from 'react';\nimport './link-marker.scss';\n\nexport type LinkMarkChooser = {\n    defaultValue?: string[],\n    onChange?: (value: string[]) => void,\n};\nexport const LinkMarkChooser = ({\n    defaultValue = [],\n    onChange = () => {},\n}: LinkMarkChooser) => {\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\n    const rotateMap = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\n\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\n    useEffect(() => {\n        onChange(choosenArrow);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [literalChoosenArrow]);\n\n    return <div className=\"link-marker-chooser\">\n        <div className=\"title\">\n            Link Arrows\n        </div>\n        <div className=\"container\">\n            {[...Array(9)].map((entry, index) => {\n                const normalizedIndex = `${index + 1}`;\n\n                if (normalizedIndex === '5') return <Tooltip key=\"5\" overlay=\"Reset\">\n                    <div className=\"link-marker-reset\" onClick={() => {\n                        setChoosenArrow([]);\n                    }}>R</div>\n                </Tooltip>;\n\n                return <div key={normalizedIndex}\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\n                    onClick={() => {\n                        setChoosenArrow(cur => {\n                            let newMap = [...cur];\n\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\n                            else newMap.push(normalizedIndex);\n\n                            return newMap;\n                        });\n                    }}\n                >\n                    <div className={`link-marker-icon link-marker-icon-${index + 1}`} style={{ transform: `rotate(${rotateMap[index]}deg)` }} />\n                </div>;\n            })}\n        </div>\n    </div>;\n};","import { Radio } from 'antd';\nimport { frameType, iconList, attributeList, stickerList, foilList } from '../../model';\nimport './input-panel.scss';\n\nconst { Button: RadioButton } = Radio;\n\nexport const foilButton = foilList.map(({ color, name }) => {\n    return <RadioButton key={name} value={name} style={{\n        color,\n        fontWeight: 'bold',\n    }}>\n        {name.toLocaleUpperCase()}\n    </RadioButton>;\n});\nexport const frameButton = frameType.map(({ color, name, backgroundColor }) => {\n    return <RadioButton key={name} value={name} style={{\n        backgroundColor,\n        color,\n    }}>\n        {name}\n    </RadioButton>;\n});\nexport const attributeButton = attributeList.map(({ name }) => <RadioButton key={name} value={name}>\n    <img alt={name} src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${name.toLowerCase()}.png`} />\n</RadioButton>);\nexport const iconButton = iconList.map(entry => <RadioButton key={entry} value={entry}>{entry}</RadioButton>);\nexport const starButton = [...Array(14)].map((e, index) => <RadioButton key={`${index}`} value={`${index}`}>{`${index}`}</RadioButton>);\nexport const stickerButton = stickerList.map(name => <RadioButton key={name} value={name}>\n    <img alt={name} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${name.toLowerCase()}.png`} />\n</RadioButton>);","import { useCallback, useEffect, useState } from 'react';\nimport Moveable from 'react-moveable';\nimport { EllipsisOutlined } from '@ant-design/icons';\nimport './char-picker.scss';\n\nfunction insertAtCursor(myField: HTMLTextAreaElement, myValue: string) {\n    //IE support\n    if ((document as any).selection) {\n        myField.focus();\n        const sel = (document as any).selection.createRange();\n        sel.text = myValue;\n\n        return {\n            value: myField.value,\n            position: 0,\n        };\n    }\n    //MOZILLA and others\n    else if (myField.selectionStart || myField.selectionStart === 0) {\n        const startPos = myField.selectionStart;\n        const endPos = myField.selectionEnd;\n        myField.value = myField.value.substring(0, startPos)\n            + myValue\n            + myField.value.substring(endPos, myField.value.length);\n        myField.selectionStart = startPos + myValue.length;\n        myField.selectionEnd = startPos + myValue.length;\n        myField.focus();\n\n        return {\n            value: myField.value,\n            position: startPos + myValue.length,\n        };\n    } else {\n        myField.value += myValue;\n\n        return {\n            value: myField.value,\n            position: 0,\n        };\n    }\n}\n\nexport type CharPicker = {\n    targetId: string,\n    onPick?: (value: string) => void,\n}\nexport const CharPicker = ({\n    targetId = '',\n    onPick = () => {},\n}: CharPicker) => {\n    const [target, setTarget] = useState<HTMLElement | null>(null);\n    const internalOnPick = (char: string) => {\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\n        if (inputTarget) {\n            const { value } = insertAtCursor(inputTarget, char);\n\n            onPick(value);\n        }\n    };\n\n    useEffect(() => {\n        setTarget(document.getElementById('char-picker'));\n    }, []);\n\n    const onDrag = useCallback(({\n        target,\n        left, top,\n        transform,\n    }) => {\n        target!.style.left = `${left}px`;\n        target!.style.top = `${top}px`;\n        target!.style.transform = transform;\n    }, []);\n\n    return <div className=\"char-picker-container\">\n        {<div id={'char-picker'} className=\"char-picker\">\n            <div className=\"handler\">\n                <EllipsisOutlined />\n            </div>\n            {[\n                '∞',\n                '☆',\n                '●',\n                '©',\n                '™',\n                'Ɐ',\n            ].map(entry => {\n                return <button key={entry} className=\"ant-btn\" onClick={() => internalOnPick(entry)}>{entry}</button>;\n            })}\n        </div>}\n        <Moveable\n            target={target}\n            container={null}\n\n            /* Resize event edges */\n            edge={false}\n\n            /* draggable */\n            draggable={true}\n            throttleDrag={0}\n            onDrag={onDrag}\n        />\n    </div>;\n};","import { Checkbox, InputNumber, Slider } from 'antd';\nimport React, { useRef, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport { CloseOutlined, CaretDownOutlined, CaretUpOutlined } from '@ant-design/icons';\nimport { TextStyle, TextStyleType } from '../../../model';\nimport PowerSlider from 'react-input-slider';\nimport './style-picker.scss';\nimport { debounce } from 'lodash';\n\nexport type StylePicker = {\n    defaultType: TextStyleType,\n\tdefaultValue: TextStyle,\n\tonChange: (type: TextStyleType, style: TextStyle) => void,\n}\nexport const StylePicker = React.memo(({\n    defaultType,\n    defaultValue,\n    onChange: undebouncedOnChange,\n}: StylePicker) => {\n    const [isExpand, setExpand] = useState(false);\n    const [type, setType] = useState(defaultType);\n    const [value, setValue] = useState(defaultValue);\n    const [isVisible, setVisible] = useState(false);\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\n\n    const setCustomValue = <ValueType extends any>(key: keyof TextStyle) => {\n        return (inputValue: ValueType) => {\n            setValue(curValue => {\n                const newStyle = { ...curValue, [key]: inputValue };\n\n                onChange('custom', newStyle);\n                return newStyle;\n            });\n        };\n    };\n\n    return <div className=\"style-picker\">\n        <div className=\"style-picker-preview\"\n            style={type === 'auto'\n                ? {}\n                : { boxShadow: `${value.shadowOffsetX}px ${value.shadowOffsetY}px ${value.shadowBlur}px 0 ${value.shadowColor}` }}\n            onClick={() => setVisible(cur => !cur)}\n        >\n            <div className=\"style-picker-display\" style={type === 'auto' ? { background: 'white' } : { background: value.fillStyle }}>\n                {type === 'auto' ? 'Auto' : <>&nbsp;</>}\n            </div>\n        </div>\n        {isVisible\n            ? <div className=\"style-picker-overlay\" style={{ position: 'absolute', zIndex: 2 }}>\n                <div className=\"style-picker-mask\" onClick={() => setVisible(false)} />\n                <div className=\"style-picker-auto\">\n                    <Checkbox value={'auto'} checked={type === 'auto'} onChange={() => {\n                        const newType = type === 'auto' ? 'custom' : 'auto';\n                        setType(newType);\n                        onChange(newType, value);\n                    }}>Auto</Checkbox>\n                    <CloseOutlined className=\"style-picker-close\" onClick={() => setVisible(false)} />\n                </div>\n                <div className={'custom-style-picker'}>\n                    <div className=\"custom-style-text\">\n                        {type === 'auto' && <div className=\"disable-overlay\" />}\n                        <h2>Text Color</h2>\n                        <CompactPicker color={value.fillStyle} onChange={color => {\n                            setType('custom');\n                            setValue(cur => {\n                                const newStyle = { ...cur, fillStyle: color.hex };\n\n                                onChange('custom', newStyle);\n                                return newStyle;\n                            });\n                        }} />\n                    </div>\n                    <h3 className=\"custom-style-expand\" onClick={e => {\n                        setExpand(cur => !cur);\n                        // e.stopPropagation();\n                        // e.preventDefault();\n                        // return false;\n                    }}>\n                        Shadow {isExpand ? <CaretUpOutlined /> : <CaretDownOutlined />}\n                    </h3>\n                    {isExpand && <div className=\"custom-style-shadow\">\n                        {type === 'auto' && <div className=\"disable-overlay\" />}\n                        <h2>Position</h2>\n                        <div className=\"shadow-position\">\n                            <PowerSlider axis=\"xy\"\n                                styles={{\n                                    track: {\n                                        backgroundColor: '#009ce0',\n                                        width: 100,\n                                        height: 100,\n                                        gridRow: 'span 3',\n                                        position: 'relative',\n                                    },\n                                    thumb: {\n                                        backgroundColor: '#91d5ff',\n                                        zIndex: 10,\n                                    },\n                                }}\n                                xmax={5} xmin={-5}\n                                ymax={5} ymin={-5}\n                                x={value.shadowOffsetX}\n                                y={value.shadowOffsetY}\n                                onChange={({ x, y }) => {\n                                    setValue(cur => {\n                                        const newStyle = { ...cur,\n                                            ...cur,\n                                            shadowOffsetX: x,\n                                            shadowOffsetY: y,\n                                        };\n\n                                        onChange('custom', newStyle);\n                                        return newStyle;\n                                    });\n                                }} />\n                            <div className=\"single-slider\">\n                                X Offset: <InputNumber size=\"small\" value={value.shadowOffsetX}\n                                    onChange={setCustomValue('shadowOffsetX')} />\n                            </div>\n                            <div className=\"single-slider\">\n                                Y Offset: <InputNumber size=\"small\" value={value.shadowOffsetY}\n                                    onChange={setCustomValue('shadowOffsetY')} />\n                            </div>\n                            <div className=\"single-slider\">\n                                Blur: <Slider value={value.shadowBlur} min={0} max={10} onChange={(value: number) => {\n                                    if (typeof value === 'number') setValue(cur => {\n                                        const newStyle = { ...cur, shadowBlur: value };\n\n                                        onChange('custom', newStyle);\n                                        return newStyle;\n                                    });\n                                }} />\n                            </div>\n                            <div />\n                        </div>\n                        <h2>Color</h2>\n                        <CompactPicker color={value.shadowColor} onChange={color => {\n                            setValue(cur => {\n                                const newStyle = { ...cur, shadowColor: color.hex };\n\n                                onChange('custom', newStyle);\n                                return newStyle;\n                            });\n                        }} />\n                    </div>}\n                </div>\n            </div>\n            : null}\n    </div>;\n}, () => true);","import React, { useRef, useState } from 'react';\nimport { Radio, Input, Checkbox, Tooltip } from 'antd';\nimport { Card, TextStyle, TextStyleType } from '../../model';\nimport { ImageCropper, LinkMarkChooser } from '../../component';\nimport { checkXyz, checkLink, checkMonster, randomPassword, randomSetID } from '../../util';\nimport { ExtractProps } from '../../type';\nimport { debounce } from 'lodash';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { foilButton, frameButton, starButton, iconButton, attributeButton, stickerButton } from './const';\nimport { CharPicker } from './char-picker';\nimport { StylePicker } from './style-picker';\nimport './input-panel.scss';\n\nconst { TextArea } = Input;\ntype RadioChangeEvent = Parameters<NonNullable<ExtractProps<typeof Radio>['onChange']>>[0];\n\nconst onChangeFactory = (\n    key: string,\n    mutateFunction: (func: (card: Card) => Card) => void,\n    valueTransform: (value: any) => any = (value) => value,\n) => {\n    return (e: any) => {\n        mutateFunction(current => ({\n            ...current,\n            [key]: valueTransform(typeof e === 'string' || Array.isArray(e) ? e : e?.target?.value),\n        }));\n    };\n};\n\ntype RandomButton = {\n    seeder: () => string,\n    onGenerate: (value: string) => void,\n}\nconst RandomButton = ({\n    seeder,\n    onGenerate,\n}: RandomButton) => {\n    return <span style={{ marginLeft: 10, paddingLeft: 10, borderLeft: '1px solid #222' }}>\n        <Tooltip overlay=\"Random\">\n            <SyncOutlined onClick={() => onGenerate(seeder())} />\n        </Tooltip>\n    </span>;\n};\n\nexport type CardInputPanelRef = {\n    getCroppedImageCanvasRef: () => HTMLCanvasElement | null\n}\nexport type CardInputPanel = {\n\tcurrentCard: Card,\n    receivingCanvasRef: HTMLCanvasElement | null,\n    defaultCropInfo: Partial<ReactCrop.Crop>,\n\tonCardChange: React.Dispatch<React.SetStateAction<Card>>,\n    onImageChange?: (cropInfo: Partial<ReactCrop.Crop>) => void,\n    children?: React.ReactNode,\n}\nexport const CardInputPanel = ({\n    currentCard,\n    receivingCanvasRef,\n    defaultCropInfo,\n    onCardChange,\n    onImageChange,\n    children,\n}: CardInputPanel) => {\n    const [isMirrorScale, setMirrorScale] = useState(true);\n    const setCard = (mutateFunc: (card: Card) => Card) => {\n        onCardChange(currentCard => mutateFunc(currentCard));\n    };\n    const onFoilChange = onChangeFactory('foil', setCard);\n    const onFrameChange = (e: RadioChangeEvent) => {\n        onCardChange(currentCard => {\n            const value = e?.target?.value;\n            const isST = value === 'spell' || value === 'trap';\n    \n            return {\n                ...currentCard,\n                frame: value,\n                isPendulum: value === 'link' || value === 'token' || isST ? false : currentCard.isPendulum,\n                subFamily: isST ? 'NO ICON' : currentCard.subFamily,\n            };\n        });\n    };\n    const onAttributeChange = onChangeFactory('attribute', setCard);\n    const onSubFamilyChange = onChangeFactory('subFamily', setCard);\n    const onNameChange = debounce(onChangeFactory('name', setCard), 250);\n    const onNameColorChange = (type: TextStyleType, value: TextStyle) => {\n        onCardChange(currentCard => {\n            return {\n                ...currentCard,\n                nameStyleType: type,\n                nameStyle: value,\n            };\n        });\n    };\n    const onStarChange = onChangeFactory('star', setCard);\n    const onIsPendulumChange = (e: any) => onCardChange(currentCard => {\n        return { ...currentCard, isPendulum: e.target.checked };\n    });\n    const onPictureChange = onChangeFactory('picture', setCard);\n    const onLinkMapChange = onChangeFactory('link_map', setCard);\n    const onRedScaleChange = onChangeFactory('red_scale', setCard);\n    const onBlueScaleChange = onChangeFactory('blue_scale', setCard);\n    const onPendulumEffectChange = debounce(onChangeFactory('pendulum_effect', setCard), 250);\n    const onEffectChange = debounce(onChangeFactory('effect', setCard), 250);\n    const onATKChange = onChangeFactory('atk', setCard);\n    const onDEFChange = onChangeFactory('def', setCard);\n    const onTypeAbilityChange = debounce((value: (string | number)[]) => {\n        setCard(current => ({\n            ...current,\n            type_ability: value.map(entry => `${entry}`),\n        }));\n    }, 250);\n    const onSetIDChange = onChangeFactory('set_id', setCard);\n    const onPasscodeChange = onChangeFactory('passcode', setCard);\n    const onStickerChange = onChangeFactory('sticker', setCard);\n    const onCreatorChange = onChangeFactory('creator', setCard);\n    const onFirstEditionChange = (e: any) => onCardChange(currentCard => {\n        return { ...currentCard, isFirstEdition: e.target.checked };\n    });\n\n    const {\n        frame, foil,\n        name, nameStyleType, nameStyle,\n        picture,\n        effect,\n        type_ability,\n        isPendulum, pendulum_effect, red_scale, blue_scale,\n        atk, def, link_map,\n        attribute,\n        subFamily,\n        star,\n        set_id,\n        passcode, isFirstEdition, creator, sticker,\n    } = currentCard;\n    const isXyz = checkXyz(currentCard);\n    const isLink = checkLink(currentCard);\n    const isMonster = checkMonster(currentCard);\n    const [displayTypeAbility, setDisplayTypeAbility] = useState(type_ability.join('/'));\n    const [displayName, setDisplayName] = useState(name);\n    const [displayEffect, setDisplayEffect] = useState(effect);\n    const [displayPendulumEffect, setDisplayPendulumEffect] = useState(pendulum_effect);\n    const [onlineCharPicker, setOnlineCharPicker] = useState('');\n    const ref = useRef();\n    \n\n    return <div className=\"card-info-panel\">\n        {children}\n        <CharPicker\n            targetId={onlineCharPicker}\n            onPick={value => {\n                if (ref.current) (ref.current as any)?.props?.onChange?.({\n                    target: { value }\n                });\n            }}\n        />\n        <Radio.Group className=\"foil-radio checkbox-train\" value={foil} onChange={onFoilChange}>\n            <label className=\"standalone-addon ant-input-group-addon\">\n                <span>Foil</span>\n            </label>\n            {foilButton}\n        </Radio.Group>\n        <Radio.Group className=\"frame-radio\" value={frame} onChange={onFrameChange}>\n            {frameButton}\n        </Radio.Group>\n        <hr />\n        <div className=\"card-header custom-gap\">\n            <Input\n                id=\"name\"\n                ref={onlineCharPicker === 'name' ? ref as any : null}\n                onFocus={() => setOnlineCharPicker('name')}\n                allowClear\n                addonBefore={<>Name <StylePicker defaultType={nameStyleType} defaultValue={nameStyle} onChange={onNameColorChange} /></>}\n                placeholder=\"Card Name\"\n                value={displayName}\n                className=\"name-input\"\n                onChange={ev => {\n                    onNameChange(ev);\n                    setDisplayName(ev.target.value);\n                }}\n            />\n            {isMonster\n                ? !isLink\n                    ? <Radio.Group className=\"checkbox-train\" value={`${star}`} onChange={onStarChange}>\n                        <label className=\"standalone-addon ant-input-group-addon\">\n                            <span>{isXyz ? 'Rank' : 'Level'}</span>\n                        </label>\n                        {starButton}\n                    </Radio.Group>\n                    : null\n                : <Radio.Group className=\"checkbox-train\" value={subFamily} onChange={onSubFamilyChange}>\n                    <label className=\"standalone-addon ant-input-group-addon\">\n                        <span>Icon</span>\n                    </label>\n                    {iconButton}\n                </Radio.Group>}\n            <Radio.Group className=\"checkbox-image-train checkbox-train\" value={attribute} onChange={onAttributeChange}>\n                <label className=\"standalone-addon ant-input-group-addon\">\n                    <span>Attribute</span>\n                </label>\n                {attributeButton}\n            </Radio.Group>\n        </div>\n        <div key=\"pic\" className=\"main-info\">\n            <div className=\"main-info-first\">\n                <Input\n                    id=\"set-id\"\n                    ref={onlineCharPicker === 'set-id' ? ref as any : null}\n                    onFocus={() => setOnlineCharPicker('set-id')}\n                    allowClear\n                    className=\"set-id-input\"\n                    addonBefore={<>Set ID<RandomButton seeder={randomSetID} onGenerate={onSetIDChange} /></>}\n                    onChange={onSetIDChange}\n                    placeholder=\"Set ID\"\n                    value={set_id}\n                />\n                {(isMonster && frame !== 'link' && frame !== 'token') && <div className=\"pendulum-container\">\n                    <div className=\"joined-row\">\n                        <Checkbox onChange={onIsPendulumChange} checked={isPendulum}>Is Pendulum?</Checkbox>\n                        {isPendulum && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>Mirror Scale?</Checkbox>}\n                    </div>\n                    {isPendulum && <>\n                        <div>\n                            <Input key=\"blue-scale\" addonBefore={<span>\n                                <span style={{ color: '#3b9dff' }}>Blue</span> Scale\n                            </span>}\n                            value={blue_scale}\n                            onChange={e => {\n                                onBlueScaleChange(e);\n                                if (isMirrorScale) onRedScaleChange(e);\n                            }} />\n                        </div>\n                        <div>\n                            <Input key=\"red-scale\" addonBefore={<span>\n                                <span style={{ color: '#ff6f6f' }}>Red</span> Scale\n                            </span>}\n                            value={red_scale}\n                            onChange={e => {\n                                if (isMirrorScale) onBlueScaleChange(e);\n                                onRedScaleChange(e);\n                            }} />\n                        </div>\n                        <div className=\"joined-row\" style={{ position: 'relative' }}>\n                            <TextArea key=\"pendulum-effect\"\n                                id=\"pendulum-effect\"\n                                ref={onlineCharPicker === 'pendulum-effect' ? ref as any : null}\n                                onFocus={() => setOnlineCharPicker('pendulum-effect')}\n                                allowClear\n                                placeholder=\"Pendulum effect\"\n                                value={displayPendulumEffect}\n                                onChange={ev => {\n                                    onPendulumEffectChange(ev);\n                                    setDisplayPendulumEffect(ev.target.value);\n                                }}\n                                rows={6}\n                            />\n                        </div>\n                    </>}\n                </div>}\n                <Input addonBefore=\"Type\"\n                    id=\"type\"\n                    ref={onlineCharPicker === 'type' ? ref as any : null}\n                    onFocus={() => setOnlineCharPicker('type')}\n                    allowClear\n                    className=\"hide-selected\"\n                    onChange={ev => {\n                        const value = ev.target.value;\n\n                        setDisplayTypeAbility(value);\n                        onTypeAbilityChange(value\n                            .split('/')\n                            .map(entry => entry.trim())\n                            .filter(entry => typeof entry === 'string' && entry.length > 0));\n                    }}\n                    placeholder=\"Type / Ability\"\n                    style={{ width: '100%' }}\n                    value={displayTypeAbility}\n                />\n                <TextArea key=\"effect\"\n                    id=\"card-effect\"\n                    ref={onlineCharPicker === 'card-effect' ? ref as any : null}\n                    onFocus={() => setOnlineCharPicker('card-effect')}\n                    allowClear\n                    placeholder=\"Card effect\"\n                    value={displayEffect}\n                    rows={10}\n                    onChange={ev => {\n                        onEffectChange(ev);\n                        setDisplayEffect(ev.target.value);\n                    }}\n                />\n                <div className=\"card-footer-input\">\n                    {isMonster\n                        ? <Input key=\"atk\"\n                            id=\"atk\"\n                            ref={onlineCharPicker === 'atk' ? ref as any : null}\n                            onFocus={() => setOnlineCharPicker('atk')}\n                            addonBefore=\"ATK\" allowClear value={atk} onChange={onATKChange} />\n                        : <div />}\n                    {isMonster\n                        ? <Input key=\"def\"\n                            id=\"def\"\n                            ref={onlineCharPicker === 'def' ? ref as any : null}\n                            onFocus={() => setOnlineCharPicker('def')}\n                            addonBefore=\"DEF\" allowClear value={def} onChange={onDEFChange} />\n                        : <div />\n                    }\n                    <Input\n                        id=\"password\"\n                        ref={onlineCharPicker === 'password' ? ref as any : null}\n                        onFocus={() => setOnlineCharPicker('password')}\n                        allowClear\n                        className=\"password-input\"\n                        addonBefore={<>Password<RandomButton seeder={randomPassword} onGenerate={onPasscodeChange} /></>}\n                        onChange={onPasscodeChange}\n                        placeholder=\"Password\"\n                        value={passcode}\n                    />\n                    <Checkbox\n                        className=\"input-1st\"\n                        onChange={onFirstEditionChange}\n                        checked={isFirstEdition}\n                    >\n                        Is 1st Edition?\n                    </Checkbox>\n                    <Input addonBefore=\"Creator\"\n                        id=\"creator\"\n                        ref={onlineCharPicker === 'creator' ? ref as any : null}\n                        onFocus={() => setOnlineCharPicker('creator')}\n                        allowClear\n                        className=\"creator-input\"\n                        onChange={onCreatorChange}\n                        placeholder=\"Creator\"\n                        value={creator}\n                    />\n                    <Radio.Group className=\"sticker-input checkbox-image-train checkbox-train\" value={sticker} onChange={onStickerChange}>\n                        <label className=\"standalone-addon ant-input-group-addon\">\n                            <span>Sticker</span>\n                        </label>\n                        {stickerButton}\n                    </Radio.Group>\n                </div>\n            </div>\n            <div className=\"main-info-second\">\n                <ImageCropper\n                    noRedrawNumber={1}\n                    defaultExternalSource={picture}\n                    defaultCropInfo={defaultCropInfo}\n                    previewCanvasRef={receivingCanvasRef}\n                    onSourceChange={onPictureChange}\n                    onImageChange={onImageChange}\n                >\n                    {isLink\n                        ? <LinkMarkChooser defaultValue={link_map} onChange={onLinkMapChange} />\n                        : <div />}\n                </ImageCropper>\n            </div>\n        </div>\n    </div>;\n};","import React from 'react';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Popover } from 'antd';\nimport './app-header.scss';\n\nexport const AppHeader = () => {\n    return <div className=\"app-header\">\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={48} />\n        <div className=\"app-description\">\n            <h1>Yugioh Carder <small>v{process.env.REACT_APP_VERSION ?? 'unknown'}</small></h1>\n            <div className=\"app-contribution\">\n                <span>GUI: <b>Lauqerm</b></span>\n                <span>Template: <b>Grezar</b> and others (<a\n                    href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\">Deviant Art</a>)</span>\n                <Popover overlayClassName=\"disclaimer-overlay\" content={<div className=\"disclaimer\">\n                    <h2>Disclaimer</h2>\n                    <ul>\n                        <li>This is a personal project, not an \"official\" card maker.</li>\n                        <li>I holds no liability for cards created by this app, including picture, card text and any product that related to it.</li>\n                        <li>I do not own any of Yu-Gi-Oh card layers and fonts use in this project.</li>\n                        <li>If you want to modify card layers, or use it in any public project, please contact <a\n                            href=\"https://www.deviantart.com/grezar\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\">Grezar</a> directly.</li>\n                    </ul>\n                </div>}>\n                    <ExclamationCircleOutlined className=\"disclaimer-icon\" />\n                </Popover>\n            </div>\n        </div>\n    </div>;\n};","export type FontSize = {\n    fontSize: number,\n    lineHeight: number,\n    lineCount: number,\n};\nexport type BoxSize = {\n\twidth: number,\n\ttop: number,\n\tleft: number,\n};\n\nexport const monsterFontList: FontSize[] = [\n    { fontSize: 17, lineHeight: 17, lineCount: 6 },\n    { fontSize: 14, lineHeight: 14, lineCount: 7 },\n    { fontSize: 12, lineHeight: 12, lineCount: 8 },\n    { fontSize: 11, lineHeight: 11, lineCount: 9 },\n    { fontSize: 10, lineHeight: 10, lineCount: 10 },\n    { fontSize: 9, lineHeight: 9, lineCount: 11 },\n    { fontSize: 8, lineHeight: 8, lineCount: 12 },\n];\nexport const monsterSizeList: BoxSize[] = [\n    { width: 463, top: 620, left: 43.89 },\n    { width: 463, top: 624, left: 43.89 },\n    { width: 463, top: 624, left: 43.89 },\n    { width: 463, top: 624, left: 43.89 },\n    { width: 463, top: 624, left: 43.89 },\n    { width: 463, top: 624, left: 43.89 },\n    { width: 463, top: 624, left: 43.89 },\n];\nexport const monsterVanillaFontList: FontSize[] = [\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 6 },\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 7 },\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 8 },\n];\n\nexport const pendulumFontList: FontSize[] = [\n    { fontSize: 16.41, lineHeight: 16.44, lineCount: 5 },\n    { fontSize: 16.41, lineHeight: 16.44, lineCount: 5 },\n];\nexport const pendulumSizeList: BoxSize[] = [\n    { width: 375, top: 504.5, left: 87.05 },\n    { width: 375, top: 504.5, left: 87.05 },\n];\n\nexport const stFontList: FontSize[] = [\n    { fontSize: 16.41, lineHeight: 16.74, lineCount: 8 },\n    { fontSize: 13.46, lineHeight: 14.28, lineCount: 10 },\n];\nexport const stSizeList: BoxSize[] = [\n    { width: 461, top: 601, left: 45 },\n    { width: 461, top: 601, left: 45 },\n];\n\nexport type TypeSize = {\n\ttop: number,\n\tleft: number,\n    bracketSize: {\n        char: number,\n        bracketSpace: number,\n        bracketOffsetTop: number,\n    },\n    upperCaseSize: number,\n    upperCaseScale: number,\n    lowerCaseSize: number,\n    lowerCaseScale: number,\n    spaceScale: number,\n    spaceSize: {\n        frontSpace: number,\n        char: number,\n        behindSpace: number,\n    },\n    iconSpace: number,\n};\nexport const typeSizeMap: Record<string, TypeSize> = {\n    small: {\n        top: 622,\n        left: 43,\n        bracketSize: {\n            char: 18.71,\n            bracketSpace: 8.51,\n            bracketOffsetTop: 1.64,\n        },\n        upperCaseSize: 20,\n        upperCaseScale: 1,\n        lowerCaseSize: 16,\n        lowerCaseScale: 1.1,\n        spaceScale: 1,\n        spaceSize: {\n            frontSpace: 5,\n            char: 21,\n            behindSpace: 15,\n        },\n        iconSpace: 0,\n    },\n    medium: {\n        top: 620.80,\n        left: 43,\n        bracketSize: {\n            char: 19.69,\n            bracketSpace: 8.51,\n            bracketOffsetTop: 1.64,\n        },\n        upperCaseSize: 21,\n        upperCaseScale: 1,\n        lowerCaseSize: 18,\n        lowerCaseScale: 0.95,\n        spaceScale: 1,\n        spaceSize: {\n            frontSpace: 5,\n            char: 23,\n            behindSpace: 15,\n        },\n        iconSpace: 0,\n    },\n    large: {\n        top: 126,\n        left: 494,\n        bracketSize: {\n            char: 25,\n            bracketSpace: 11,\n            bracketOffsetTop: 2,\n        },\n        upperCaseSize: 26,\n        upperCaseScale: 1.1,\n        lowerCaseSize: 23,\n        lowerCaseScale: 1,\n        spaceScale: 1.4,\n        spaceSize: {\n            frontSpace: 5,\n            char: 23,\n            behindSpace: 15,\n        },\n        iconSpace: 32,\n    },\n};","export const arrowPositionList = [\n    { top: 126, left: 46, width: 50, height: 51 },\n    { top: 116, left: 226, width: 99, height: 32 },\n    { top: 126, left: 453, width: 51, height: 51 },\n    { top: 305, left: 35, width: 33, height: 99 },\n    { top: 0, left: 0, width: 0, height: 0 },   // Middle\n    { top: 305, left: 482, width: 32, height: 99 },\n    { top: 534, left: 46, width: 50, height: 50 },\n    { top: 562, left: 226, width: 99, height: 33 },\n    { top: 534, left: 453, width: 51, height: 50 },\n];\n\nexport const foilPosition: Record<string, {\n    art: { left: number }\n}> = {\n    gold: {\n        art: {\n            left: 2,\n        }\n    },\n    platinum: {\n        art: {\n            left: 1,\n        }\n    },\n};","import { FontSize, monsterFontList, BoxSize, monsterSizeList } from '../const';\nimport { defaultTextStyle, TextStyle } from '../model';\nimport { splitEffect, createCondenser, quoteConvert } from '../util';\n\nexport const drawName = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    edge: number,\n    baseline: number,\n    maxWidth: number,\n    style: TextStyle,\n) => {\n    if (ctx) {\n        ctx.fillStyle = style.fillStyle;\n        ctx.shadowColor = style.shadowColor;\n        ctx.shadowOffsetY = style.shadowOffsetY;\n        ctx.shadowOffsetX = style.shadowOffsetX;\n        ctx.shadowBlur = style.shadowBlur;\n        ctx.globalAlpha = style.globalAlpha;\n        const splittedText = quoteConvert(value).split(/([^&A-Za-z0-9\\-/\\s()])/g);\n        const contentWidth = splittedText\n            .reduce((prev, cur, index) => {\n                if (index % 2 === 0) ctx.font = '64.59px MatrixRegularSmallCaps';\n                else ctx.font = '54.59px matrix';\n\n                return prev + ctx.measureText(cur).width;\n            }, 0);\n\n        // ctx.fillText(value, edge, baseline, maxWidth);\n        if (contentWidth > 0) {\n            const condenseRatio = Math.min(maxWidth / contentWidth, 1);\n            ctx.scale(condenseRatio, 1);\n            splittedText\n                .reduce((prev, cur, index) => {\n                    if (index % 2 === 0) ctx.font = '64.59px MatrixRegularSmallCaps';\n                    else ctx.font = 'small-caps 54.59px matrix';\n    \n                    ctx.fillText(cur, prev / condenseRatio, baseline);\n                    return prev + ctx.measureText(cur).width * condenseRatio;\n                }, edge);\n            ctx.scale(1 / condenseRatio, 1);\n        }\n        ctx.fillStyle = defaultTextStyle.fillStyle;\n        ctx.shadowColor = defaultTextStyle.shadowColor;\n        ctx.shadowOffsetY = defaultTextStyle.shadowOffsetY;\n        ctx.shadowOffsetX = defaultTextStyle.shadowOffsetX;\n        ctx.shadowBlur = defaultTextStyle.shadowBlur;\n        ctx.globalAlpha = defaultTextStyle.globalAlpha;\n    }\n};\n\nexport const drawScale = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    edge: number,\n    baseline: number,\n) => {\n    if (ctx) {\n        const digitList = `${value}`.split('');\n        let totalWidth = 0;\n\n        digitList.forEach(digit => {\n            totalWidth += (digit === '1' ? ctx.measureText(digit).width * 0.65 : ctx.measureText(digit).width);\n        });\n        let accLeft = edge - totalWidth / 2;\n\n        digitList.forEach(digit => {\n            ctx.fillText(digit, digit === '1' ? accLeft - 3 : accLeft, baseline);\n            accLeft += (digit === '1' ? ctx.measureText(digit).width * 0.65 : ctx.measureText(digit).width);\n        });\n    }\n};\n\nexport const drawEffect = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    isPendulumEffect = false,\n    isNormal = false,\n    fontList: FontSize[] = monsterFontList,\n    sizeList: BoxSize[] = monsterSizeList,\n) => {\n    const normalizedContent = quoteConvert(content);\n    let effectIndexSize = 0;\n    if (ctx) {\n        const tolerantPerSentence: Record<string, number> = {\n            '1': 645,\n            '2': 665,\n            '3': 685,\n        };\n        const {\n            body: effectBody,\n            flavorCondition: effectFlavorCondition,\n            material: effectMaterial,\n        } = isPendulumEffect\n            ? {\n                body: normalizedContent,\n                flavorCondition: '',\n                material: '',\n            } : splitEffect(normalizedContent, isNormal);\n\n        const additionalLineCount = (effectMaterial.length > 0 ? 1 : 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\n        const sentencizeText = effectBody.split('\\n');\n        const bulletSymbol = '●';\n        const bulletSymbolWidth = 15;\n        const specialSymbol = '#@∞';\n        const breakableSymbol = '\\\\s-';\n        \n        const tokenizeR = new RegExp(`([${specialSymbol}${breakableSymbol}])`, 'g');\n        const specialSymbolReg = new RegExp(specialSymbol, 'g');\n\n        while(effectIndexSize < fontList.length) {\n            const { fontSize, lineHeight, lineCount } = fontList[effectIndexSize];\n            const { left, width, top } = sizeList[effectIndexSize];\n            const condenser = createCondenser();\n            let effectiveRatio = 1000;\n\n            const maxLine = Math.max(sentencizeText.length, lineCount);\n\n            ctx.font = `${isNormal ? 'italic' : ''} ${fontSize}px MatrixBook`;\n            ctx.textAlign = 'left';\n\n            const switchFont = (func: () => void) => {\n                const tempFont = ctx.font;\n                const largeSize = fontSize * 1.15;\n                ctx.font = tempFont.replace('MatrixBook', 'matrix').replace(`${fontSize}`, `${largeSize}`);\n                func();\n                ctx.font = tempFont;\n            };\n\n            // [CREATE SENTENCE ON EACH LINE]\n            let lineList: { text: string, width: number, isLast: boolean }[] = [];\n            const createSentence = () => {\n                lineList = [];\n\n                return sentencizeText.reduce((prev, curr) => {\n                    // The width is \"expand\" based on condense ratio so all the calculate does not need to be scaled\n                    const condenseRatio = condenser.getMedian() / 1000;\n                    const hypoWidth = width / condenseRatio;\n                    const tokenizedText = curr.split(tokenizeR);\n                    let currentLineCount = 1;\n                    let tokenSentence: string[] = [];\n                    let totalWidth = 0;\n\n                    for (let cnt = 0; cnt < tokenizedText.length; cnt++) {\n                        let tokenWidth = 0;\n                        /**\n                         * If bullet symbol is met, it will become \"wider\" based on condense ratio\n                         * so that when the whole line is condense, bullet symbol's width become\n                         * \"normal\", as if it were not condensed\n                         */\n                        if (tokenizedText[cnt] === bulletSymbol) tokenWidth = bulletSymbolWidth / condenseRatio;\n                        /**\n                         * Some special symbol required different font\n                         */\n                        else if (specialSymbolReg.test(tokenizedText[cnt])) {\n                            switchFont(() => {\n                                tokenWidth = ctx.measureText(tokenizedText[cnt]).width;\n                            });\n                        } else tokenWidth = ctx.measureText(tokenizedText[cnt]).width;\n                        if (totalWidth + tokenWidth > hypoWidth) {\n                            // If the next token cause overflow, wrap it down\n                            const fullString = tokenSentence.join('').trim();\n                            // Calculate the line width as if the bullet is wider\n                            const fullStringSplittedByBullet = fullString.split(bulletSymbol);\n                            lineList.push({\n                                text: fullString,\n                                width: fullStringSplittedByBullet.reduce((prev, curr) => prev + ctx.measureText(curr).width, 0)\n                                    + (fullStringSplittedByBullet.length - 1) * bulletSymbolWidth / condenseRatio,\n                                isLast: false,\n                            });\n                            totalWidth = tokenWidth;\n                            tokenSentence = [tokenizedText[cnt]];\n                            currentLineCount += 1;\n                        } else {\n                            totalWidth += tokenWidth;\n                            tokenSentence.push(tokenizedText[cnt]);\n                        }\n                    }\n\n                    const fullString = tokenSentence.join('').trim();\n                    const fullStringSplittedByBullet = fullString.split(bulletSymbol);\n                    lineList.push({\n                        text: fullString,\n                        width: fullStringSplittedByBullet.reduce((prev, curr) => prev + ctx.measureText(curr).width, 0)\n                            + (fullStringSplittedByBullet.length - 1) * bulletSymbolWidth / condenseRatio,\n                        isLast: true,\n                    });\n    \n                    return prev + currentLineCount;\n                }, 0) + additionalLineCount;\n            };\n\n            // [FIND SUITABLE CONDENSE RATIO]\n            while (condenser.getIterateCount() >= 0) {\n                if (condenser.getIterateCount() <= 0) {\n                    // When out of iteration, return the concluded median\n                    effectiveRatio = condenser.getMedian();\n                    break;\n                } else {\n                    const lineCount = createSentence();\n\n                    if (lineCount > maxLine) {\n                        // If overflow, lower the median and apply it\n                        condenser.searchDown();\n                    } else {\n                        if (condenser.getMedian() === 1000) break;\n                        else effectiveRatio = condenser.reverseSearch();\n                    }\n                }\n            }\n\n            // [START DRAWING]\n            const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number) => {\n                ctx.beginPath();\n                ctx.arc(edge + 7, baseline - 5.5, 5.5, 0, 2 * Math.PI, false);\n                ctx.fill();\n                ctx.lineWidth = 1;\n                ctx.strokeStyle = '#003300';\n                ctx.stroke();\n            };\n            if (effectiveRatio < (tolerantPerSentence[`${sentencizeText.length}`] ?? tolerantPerSentence['3'])) {\n                effectIndexSize += 1;\n            } else {\n                ctx?.clearRect(0, 0, 549, 750);\n                let baseline = top + lineHeight;\n                if (effectMaterial.length > 0) {\n                    let actualWidth = ctx.measureText(effectMaterial).width;\n                    let condenseRatio = Math.min(width / actualWidth, 1);\n\n                    ctx.scale(condenseRatio, 1);\n                    ctx.fillText(effectMaterial, left / condenseRatio, baseline);\n                    baseline += lineHeight;\n                    ctx.scale(1 / condenseRatio, 1);\n                }\n\n                const sigmoidRatio = effectiveRatio / 1000; // Fancy way to force ratio in to 0-1 range\n                lineList.forEach(({\n                    text,\n                    width: actualWidth,\n                    isLast,\n                }) => {\n                    const condenseRatio = isLast\n                        ? Math.min(sigmoidRatio, 1)\n                        : width / actualWidth;\n\n                    if (condenseRatio <= 1) {\n                        ctx.scale(condenseRatio, 1);\n                        const splitter = new RegExp(`([${bulletSymbol}${specialSymbol}])`, 'g');\n                        const splittedText = text.split(splitter);\n\n                        splittedText.reduce((prev, cur, index) => {\n                            let edge = prev;\n\n                            // Normal text\n                            if (index % 2 === 0) {\n                                ctx.fillText(cur, edge / condenseRatio, baseline);\n                                edge += ctx.measureText(cur).width * condenseRatio;\n                            } else {\n                                // Special bullet\n                                if (cur === bulletSymbol) {\n                                    ctx.scale(1 / condenseRatio, 1);\n                                    drawBullet(ctx, edge, baseline);\n                                    edge += 15;\n                                    ctx.scale(condenseRatio, 1);\n                                } else {\n                                    switchFont(() => {\n                                        ctx.fillText(cur, edge / condenseRatio, baseline);\n                                        edge += ctx.measureText(cur).width * condenseRatio;\n                                    });\n                                }\n                            }\n\n                            return edge;\n                        }, left);\n                        baseline += lineHeight;\n                        ctx.scale(1 / condenseRatio, 1);\n                    } else {\n                        const splitter = new RegExp(`([${bulletSymbol}${specialSymbol} ])`, 'g');\n                        const spaceSeparatedText = text.split(splitter);\n                        ctx.scale(1, 1);\n                        let nonSpaceWidth = 0;\n                        let spaceCount = 0;\n\n                        spaceSeparatedText.forEach(entry => {\n                            if (entry === ' ') spaceCount += 1;\n                            else if (entry === bulletSymbol) nonSpaceWidth += 15;\n                            else if (specialSymbolReg.test(entry)) {\n                                switchFont(() => nonSpaceWidth += ctx.measureText(entry).width);\n                            } else nonSpaceWidth += ctx.measureText(entry).width;\n                        });\n                        // Split text by \"space\", then distribute remaining width to those spaces, resulting in \"widen\" space\n                        const spaceWidth = spaceCount > 0 ? (width - nonSpaceWidth) / spaceCount : 0;\n\n                        spaceSeparatedText.reduce((prev, cur, index) => {\n                            let edge = prev;\n\n                            // Normal text\n                            if (index % 2 === 0) {\n                                ctx.fillText(cur, edge, baseline);\n                                edge += ctx.measureText(cur).width;\n                            } else {\n                                // Special bullet\n                                if (cur === bulletSymbol) {\n                                    drawBullet(ctx, edge, baseline);\n                                    edge += 15;\n                                } else if (cur === ' ') {\n                                    edge += spaceWidth;\n                                } else {\n                                    switchFont(() => {\n                                        ctx.fillText(cur, edge, baseline);\n                                        edge += ctx.measureText(cur).width;\n                                    });\n                                }\n                            }\n\n                            return edge;\n                        }, left);\n                        baseline += lineHeight;\n                    }\n                });\n\n                if (effectFlavorCondition.length > 0) {\n                    let actualWidth = ctx.measureText(effectFlavorCondition).width;\n                    let condenseRatio = Math.min(width / actualWidth, 1);\n\n                    ctx.font = `${fontSize}px MatrixBook`;\n                    ctx.scale(condenseRatio, 1);\n                    ctx.fillText(effectFlavorCondition, left / condenseRatio, baseline);\n                    baseline += lineHeight;\n                    ctx.scale(1 / condenseRatio, 1);\n                }\n                break;\n            }\n        }\n\n        return effectIndexSize;\n    }\n    return effectIndexSize;\n};","export const measureWithSymbol = (\n    ctx: CanvasRenderingContext2D,\n    content: string,\n    symbol: string,\n    maxWidth: number,\n) => {\n    const splittedContent = content.split(symbol);\n    const splittedWidth = splittedContent.map(entry => ctx.measureText(entry).width);\n    const symbolWidth = ctx.measureText(symbol).width;\n    const totalCondensableWidth = splittedWidth.reduce((prev, curr) => prev + curr, 0);\n    const returnBundle = {\n        splittedContent,\n        splittedWidth,\n        symbolWidth,\n        totalCondensableWidth,\n        condenseRatio: 1,\n    };\n\n    if (totalCondensableWidth > 0) {\n        // Calculate as if the \"symbol\" always appear as full width\n        returnBundle.condenseRatio = Math.min((maxWidth - (splittedWidth.length - 1) * symbolWidth) / totalCondensableWidth, 1);\n    }\n\n    return returnBundle;\n};\n\nexport const fillTextLeftWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacingRatio: number,\n    edge: number,\n    baseline: number,\n) => {\n    if (ctx) {\n        ctx.textAlign = 'left';\n        const charList = str.split('');\n        let curLeft = edge;\n\n        charList.forEach(char => {\n            ctx.fillText(char, curLeft, baseline);\n            curLeft += ctx.measureText(char).width * (1 + (letterSpacingRatio / 2));\n        });\n    }\n};\nexport const fillTextRightWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacingRatio: number,\n    edge: number,\n    baseline: number,\n) => {\n    if (ctx) {\n        ctx.textAlign = 'right';\n        const charList = str.split('');\n        let curRight = edge;\n\n        charList.forEach((c, index) => {\n            const char = charList[charList.length - index - 1];\n            ctx.fillText(char, curRight, baseline);\n            curRight -= ctx.measureText(char).width * (1 + (letterSpacingRatio / 2));\n        });\n        return curRight;\n    };\n    return edge;\n};\n\nexport const fillTextLeftWithLimit = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    edge: number,\n    baseline: number,\n    maxWidth: number,\n) => {\n    if (ctx) {\n        const contentWidth = ctx.measureText(content).width;\n\n        if (contentWidth > 0) {\n            const condenseRatio = Math.min(maxWidth / contentWidth, 1);\n            ctx.scale(condenseRatio, 1);\n            ctx.fillText(content, edge / condenseRatio, baseline);\n            ctx.scale(1 / condenseRatio, 1);\n            ctx.fillStyle = '#000000';\n        }\n    }\n};","import { fillTextRightWithSpacing, measureWithSymbol } from './util';\n\nexport const draw1stEdition = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n) => {\n    if (ctx) {\n        ctx.font = 'bold 16px palatino-linotype-bold';\n\n        let left = 95;\n        ctx.fillText('1', left, 777);\n        left += ctx.measureText('1').width - 2;\n\n        ctx.font = 'bold 12px palatino-linotype-bold';\n        ctx.fillText('st', left, 777 - 5);\n        left += ctx.measureText('st').width;\n\n        ctx.font = 'bold 15px palatino-linotype-bold';\n        ctx.fillText(' Edition', left, 777);\n    }\n};\n\nexport const drawCreatorText = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n) => {\n    if (ctx) {\n        ctx.font = '16px stone-serif-regular';\n\n        const uncondensableSymbol = '©';\n        const {\n            splittedContent,\n            splittedWidth,\n            symbolWidth,\n            condenseRatio,\n        } = measureWithSymbol(ctx, content, uncondensableSymbol, 257);\n\n        if (condenseRatio < 1) {\n            ctx.textAlign = 'left';\n            ctx.scale(condenseRatio, 1);\n            splittedContent.reduce((prev, cur, index) => {\n                // Fill condense text at the current edge\n                ctx.fillText(cur, prev / condenseRatio, 777);\n                // Increase edge equal to the draw text (condense ratio factored)\n                let nextEdge = prev + splittedWidth[index] * condenseRatio;\n                if (index < splittedContent.length - 1) {\n                    // Restore 1:1 ratio\n                    ctx.scale(1 / condenseRatio, 1);\n                    // Increase edge equal to the character \"©\" (condense ratio is 1 so no factored)\n                    ctx.fillText(uncondensableSymbol, nextEdge, 777);\n                    nextEdge += symbolWidth;\n                    // Restore condense ratio\n                    ctx.scale(condenseRatio, 1);\n                }\n                return nextEdge;\n            }, 496 - 257);\n            ctx.scale(1 / condenseRatio, 1);\n        } else {\n            ctx.textAlign = 'right';\n            fillTextRightWithSpacing(ctx, content, -0.15, 496 / condenseRatio, 777);\n        }\n        ctx.textAlign = 'left';\n    }\n};\n\nexport const drawAD = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    $value: string | number,\n    edge: number,\n    baseline: number,\n) => {\n    if (ctx) {\n        ctx.textAlign = 'left';\n        const tokenizedText = `${$value}`.split('?');\n\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\n            ctx.font = '25px MatrixBoldSmallCaps';\n            let nextWidth = prev + ctx.measureText(curr).width;\n\n            if (index < tokenizedText.length - 1) {\n                ctx.font = '25px matrix';\n                nextWidth += ctx.measureText('?').width;\n            }\n\n            return nextWidth;\n        }, 0);\n\n        if (totalWidth > 0) {\n            const condenseRatio = Math.min(49.94 / totalWidth, 1);\n\n            ctx.scale(condenseRatio, 1);\n            tokenizedText.reduce((prev, curr, index, arr) => {\n                const curText = arr[arr.length - 1 - index];\n                let nextEdge = prev;\n                ctx.font = '25px MatrixBoldSmallCaps';\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\n\n                if (index < tokenizedText.length - 1) {\n                    ctx.font = 'bold 25px matrix';\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\n                }\n    \n                return nextEdge;\n            }, edge + 49.94);\n            ctx.scale(1 / condenseRatio, 1);\n        }\n    }\n};","import { TypeSize } from '../const';\n\ntype Aligment = 'left' | 'right';\nexport const drawBracketTemplate = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    size: TypeSize,\n    alignment: Aligment,\n) => {\n    return (edge: number) => {\n        if (ctx) {\n            const {\n                top: baseline,\n                bracketSize: { char: bracketChar, bracketOffsetTop }\n            } = size;\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\n\n            ctx.font = `bold ${bracketChar}px stone-serif-bold`;\n            ctx.textAlign = alignment;\n            ctx.fillText(content, edge, baseline - bracketOffsetTop);\n            return edge + ctx.measureText(content).width * alignmentOffset;\n        }\n        return edge;\n    };\n};\nexport const drawIconSpaceTemplate = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    size: TypeSize,\n    alignment: Aligment,\n) => {\n    return (edge: number) => {\n        if (ctx) {\n            const { iconSpace } = size;\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\n\n            return edge + iconSpace * alignmentOffset;\n        }\n        return edge;\n    };\n};\nexport const drawBracketSpaceTemplate = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    size: TypeSize,\n    alignment: Aligment,\n) => {\n    return (edge: number) => {\n        if (ctx) {\n            const { top: baseline, bracketSize: { bracketSpace } } = size;\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\n\n            ctx.font = `bold ${bracketSpace}px stone-serif-bold`;\n            ctx.textAlign = alignment;\n            ctx.fillText(content, edge, baseline);\n            return edge + ctx.measureText(content).width * alignmentOffset;\n        }\n        return edge;\n    };\n};\nexport const drawTextTemplate = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    isLast = false,\n    size: TypeSize,\n    alignment: Aligment,\n) => {\n    const {\n        top: baseline,\n        spaceSize: { frontSpace, char: spaceChar, behindSpace },\n        upperCaseScale,\n        upperCaseSize,\n        lowerCaseScale,\n        lowerCaseSize,\n        spaceScale,\n    } = size;\n    const alignmentOffset = alignment === 'left' ? 1 : -1;\n    const drawSlashTemplate = (\n        ctx: CanvasRenderingContext2D,\n        baseOffset: number,\n    ) => {\n        let totalOffset = baseOffset;\n        ctx.font = `bold ${frontSpace}px stone-serif-bold`;\n        ctx.fillText(' ', totalOffset, baseline);\n        totalOffset += ctx.measureText(' ').width * alignmentOffset;\n\t\n        ctx.font = `oblique bold ${spaceChar}px stone-serif-bold`;\n        ctx.scale(0.65, 1);\n        ctx.fillText('/', totalOffset / 0.65, baseline);\n        totalOffset += ctx.measureText('/').width * 0.65 * alignmentOffset;\n        ctx.scale(1 / 0.65, 1);\n\t\n        ctx.font = `bold ${behindSpace}px stone-serif-bold`;\n        ctx.fillText(' ', totalOffset, baseline);\n        totalOffset += ctx.measureText(' ').width * alignmentOffset;\n        return totalOffset;\n    };\n\n    return (left: number) => {\n        let totalOffset = left;\n        if (ctx) {\n            ctx.textAlign = alignment;\n\n            if (!isLast && alignment === 'right') totalOffset = drawSlashTemplate(ctx, totalOffset);\n            content\n                .split('')\n                .forEach((c, index, arr) => {\n                    const char = alignment === 'left' ? arr[index] : arr[arr.length - 1 - index];\n                    if (/[A-Z]/.test(char)) {\n                        ctx.font = `bold ${upperCaseSize}px stone-serif-bold`;\n                        ctx.scale(upperCaseScale, 1);\n                        ctx.fillText(char, totalOffset / upperCaseScale, baseline);\n                        totalOffset += ctx.measureText(char).width * upperCaseScale * alignmentOffset;\n                        ctx.scale(1 / upperCaseScale, 1);\n                    } else if (/\\s/.test(char)) {\n                        ctx.font = `bold ${lowerCaseSize}px stone-serif-bold`;\n                        ctx.scale(spaceScale, 1);\n                        ctx.fillText(char, totalOffset / spaceScale, baseline);\n                        totalOffset += ctx.measureText(char).width * spaceScale * alignmentOffset;\n                        ctx.scale(1 / spaceScale, 1);\n                    } else {\n                        const upperChar = char.toLocaleUpperCase();\n                        ctx.font = `bold ${lowerCaseSize}px stone-serif-bold`;\n                        ctx.scale(lowerCaseScale, 1);\n                        ctx.fillText(upperChar, totalOffset / lowerCaseScale, baseline);\n                        totalOffset += ctx.measureText(upperChar).width * lowerCaseScale * alignmentOffset;\n                        ctx.scale(1 / lowerCaseScale, 1);\n                    }\n                });\n            if (!isLast && alignment === 'left') totalOffset = drawSlashTemplate(ctx, totalOffset);\n            return totalOffset;\n        }\n        return totalOffset;\n    };\n};","const imageCacheMap: Record<string, {\n    image: HTMLImageElement,\n    ready: boolean,\n}> = {};\n\nexport const drawFromSource = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number),\n    sy: number | ((image: HTMLImageElement) => number),\n) => {\n    if (!ctx) return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        if (imageCacheMap[source]?.ready === true) {\n            const img = imageCacheMap[source].image;\n            let normalizedX = typeof sx === 'number' ? sx : sx(img);\n            let normalizedY = typeof sy === 'number' ? sy : sy(img);\n            ctx.drawImage(img, normalizedX, normalizedY);\n            resolve(true);\n        } else {\n            const img = new Image();\n            img.src = process.env.PUBLIC_URL + source;\n            img.onload = () => {\n                let normalizedX = typeof sx === 'number' ? sx : sx(img);\n                let normalizedY = typeof sy === 'number' ? sy : sy(img);\n                ctx.drawImage(img, normalizedX, normalizedY);\n                imageCacheMap[source].ready = true;\n                resolve(true);\n            };\n            img.onerror = () => {\n                resolve(false);\n            };\n            imageCacheMap[source] = {\n                image: img,\n                ready: false,\n            };\n        }\n    });\n};\n\nexport const drawFromSourceWithSize = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number),\n    sy: number | ((image: HTMLImageElement) => number),\n    dw: number, dh: number,\n) => {\n    if (!ctx) return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        if (imageCacheMap[source]?.ready === true) {\n            const img = imageCacheMap[source].image;\n            let normalizedX = typeof sx === 'number' ? sx : sx(img);\n            let normalizedY = typeof sy === 'number' ? sy : sy(img);\n            ctx.drawImage(img, normalizedX, normalizedY, dw, dh);\n            resolve(true);\n        } else {\n            const img = new Image();\n            img.src = process.env.PUBLIC_URL + source;\n            img.onload = () => {\n                let normalizedX = typeof sx === 'number' ? sx : sx(img);\n                let normalizedY = typeof sy === 'number' ? sy : sy(img);\n                ctx.drawImage(img, normalizedX, normalizedY, dw, dh);\n                imageCacheMap[source].ready = true;\n                resolve(true);\n            };\n            img.onerror = () => {\n                resolve(false);\n            };\n            imageCacheMap[source] = {\n                image: img,\n                ready: false,\n            };\n        }\n    });\n};","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport './app.scss';\nimport 'antd/dist/antd.css';\nimport {\n    Card,\n    defaultMonster,\n    defaultTextStyle,\n    foilStyleMap,\n    iconList,\n} from './model';\nimport {\n    checkLink,\n    checkMonster,\n    checkNormal,\n    checkXyz,\n    getCardFrame,\n} from './util';\nimport { AppHeader, CardInputPanel } from './page';\nimport {\n    arrowPositionList,\n    foilPosition,\n    pendulumFontList,\n    pendulumSizeList,\n    stFontList,\n    stSizeList,\n    TypeSize,\n    typeSizeMap,\n} from './const';\nimport {\n    draw1stEdition,\n    drawAD,\n    drawBracketSpaceTemplate,\n    drawBracketTemplate,\n    drawCreatorText,\n    drawEffect,\n    drawIconSpaceTemplate,\n    drawName,\n    drawScale,\n    drawTextTemplate,\n    fillTextLeftWithSpacing,\n    fillTextRightWithSpacing,\n    drawFromSource,\n    drawFromSourceWithSize,\n} from './draw';\nimport WebFont from 'webfontloader';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nfunction App() {\n    const [isInitializing, setInitializing] = useState(true);\n    const [error, setError] = useState('');\n    const [currentCard, setCard] = useState<Card>(defaultMonster);\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n    const drawCanvasRef = useRef<HTMLCanvasElement>(null);\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const artCanvasRef = useRef<HTMLCanvasElement>(null);\n    const specialFrameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const subFamilyCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const attributeCanvasRef = useRef<HTMLCanvasElement>(null);\n    const ADCanvasRef = useRef<HTMLCanvasElement>(null);\n    const setIdRef = useRef<HTMLCanvasElement>(null);\n    const passcodeRef = useRef<HTMLCanvasElement>(null);\n    const firstEditionRef = useRef<HTMLCanvasElement>(null);\n    const creatorRef = useRef<HTMLCanvasElement>(null);\n    const stickerRef = useRef<HTMLCanvasElement>(null);\n\n    const {\n        frame, foil,\n        name, nameStyleType, nameStyle,\n        pictureCrop,\n        effect,\n        type_ability,\n        isPendulum, pendulum_effect, blue_scale, red_scale,\n        atk, def, link_map,\n        attribute,\n        subFamily,\n        star,\n        set_id,\n        passcode, isFirstEdition, creator, sticker,\n    } = currentCard;\n    const isNormal = checkNormal(currentCard);\n    const isXyz = checkXyz(currentCard);\n    const isLink = checkLink(currentCard);\n    const isMonster = checkMonster(currentCard);\n    const pendulumSize = 'medium';\n\n    const drawingPipeline = useRef<Record<string, () => Promise<any>>>({\n        frame: () => Promise.resolve(),\n        star: () => Promise.resolve(),\n        attribute: () => Promise.resolve(),\n        specialFrame: () => Promise.resolve(),\n        sticker: () => Promise.resolve(),\n    });\n    const [imageChangeCount, setImageChangeCount] = useState(0);\n\n    useEffect(() => {\n        const ctx = frameCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.frame = async () => {\n            ctx?.clearRect(0, 0, 549, 800);\n            const cardType = getCardFrame(frame);\n            const hasFoil = foil !== 'normal';\n\n            await drawFromSource(ctx, `/asset/image/frame/frame-${cardType}.png`, 0, 0);\n            if (hasFoil) {\n                const { art } = foilPosition[foil];\n\n                await drawFromSource(ctx, `/asset/image/frame/frame-art-${foil}.png`, art.left, 120);\n                await drawFromSource(ctx, `/asset/image/frame/frame-effect-${foil}.png`, 0, 580);\n            }\n        };\n    }, [foil, frame]);\n\n    useEffect(() => {\n        const ctx = artCanvasRef.current?.getContext('2d');\n        const previewCtx = previewCanvasRef.current;\n        if (previewCtx && ctx) {\n            ctx.clearRect(0, 0, 548, 650);\n            if (isPendulum) {\n                ctx.drawImage(previewCtx, 38, 144, 474, 470);\n            } else {\n                ctx.drawImage(previewCtx, 67, 147, 416, 416);\n            }\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isPendulum, imageChangeCount]);\n\n    useEffect(() => {\n        const ctx = specialFrameCanvasRef.current?.getContext('2d');\n        \n        drawingPipeline.current.specialFrame = async () => {\n            ctx?.clearRect(0, 0, 549, 800);\n            const hasFoil = foil !== 'normal';\n\n            const cardType = getCardFrame(frame);\n            if (isPendulum && !isLink) {\n                if (!isXyz) await drawFromSource(ctx, `/asset/image/pendulum/overlay-pendulum-${cardType}.png`, 0, 0);\n                await drawFromSource(ctx, `/asset/image/frame/frame-pendulum-${pendulumSize}.png`, 0, 0);\n                if (hasFoil) await drawFromSource(ctx, `/asset/image/frame/frame-pendulum-${pendulumSize}-${foil}.png`, 0, 0);\n            }\n\n            const foiledBorder = !hasFoil ? '/asset/image/frame/frame-border.png' : `/asset/image/frame/frame-border-${foil}.png`;\n            await drawFromSource(ctx, foiledBorder, 0, 0);\n            if (!isPendulum && isLink) {\n                if (hasFoil) await drawFromSource(ctx, `./asset/image/link/link-overlay-${foil}.png`, 0, 110);\n                else await drawFromSource(ctx, '/asset/image/link/link-overlay.png', 66, 146);\n                if (hasFoil) await drawFromSource(ctx, `/asset/image/link/link-overlay-arrow-${foil}.png`, 0, 110);\n\n                await Promise.all(link_map\n                    .map(entry => {\n                        const { left, top, height, width } = arrowPositionList[parseInt(entry) - 1];\n                        if (hasFoil) return drawFromSourceWithSize(ctx, `/asset/image/link/link-arrow-${entry}-${foil}.png`, left, top, width, height);\n                        else return drawFromSourceWithSize(ctx, `/asset/image/link/link-arrow-${entry}.png`, left, top, width, height);\n                    })\n                );\n                if (ctx) {\n                    ctx.textAlign = 'right';\n                    ctx.scale(1.2, 1);\n                    ctx.font = 'bold 24px Yugioh Rush Duel Numbers V4';\n                    ctx.fillText(`${link_map.length}`, 505 / 1.2, 746);\n                    ctx.scale(1 / 1.2, 1);\n                    ctx.textAlign = 'left';\n                }\n            }\n        };\n    }, [foil, frame, isLink, isPendulum, isXyz, link_map]);\n\n    useEffect(() => {\n        const ctx = attributeCanvasRef.current?.getContext('2d');\n        drawingPipeline.current.attribute = () => {\n            ctx?.clearRect(0, 0, 549, 100);\n\n            return drawFromSource(ctx, `/asset/image/attribute/attr-${attribute.toLowerCase()}.png`, 458, 37);\n        };\n    }, [attribute]);\n\n    useEffect(() => {\n        const ctx = subFamilyCanvasRef.current?.getContext('2d');\n        drawingPipeline.current.star = () => {\n            ctx?.clearRect(0, 0, 549, 150);\n            if (isMonster && !isLink) {\n                let counter = Math.min(13, star ?? 0);\n                let type = isXyz ? 'rank' : 'level';\n                let offset = 0 - (34 + 2.3636);\n                let totalWidth = 34 * counter + 2.3636 * (counter - 1);\n                let edge = counter <= 12\n                    ? isXyz\n                        ? 57 - 34\n                        : 492\n                    : isXyz\n                        ? (549 - totalWidth) / 2 - 34\n                        : (549 - totalWidth) / 2 + totalWidth;\n    \n                return Promise.all([...Array(counter)]\n                    .map(() => {\n                        offset += (34 + 2.3636);\n                        return drawFromSource(\n                            ctx,\n                            `/asset/image/sub-family/subfamily-${type}.png`,\n                            edge + (34 + offset) * (isXyz ? 1 : -1),\n                            99,\n                        );\n                    })\n                );\n            } else if (!isMonster) {\n                const normalizedSubFamily = subFamily.toUpperCase();\n                const hasSTIcon = normalizedSubFamily !== 'NO ICON'\n                        && iconList.includes(normalizedSubFamily);\n    \n                return hasSTIcon\n                    ? drawFromSourceWithSize(ctx, `/asset/image/sub-family/subfamily-${normalizedSubFamily.toLowerCase()}.png`,\n                        (image) => 491 - image.naturalWidth - 7,\n                        103,\n                        29, 29)\n                    : new Promise(resolve => resolve(true));\n            };\n            return new Promise(resolve => resolve(true));\n        };\n    }, [isLink, isMonster, isXyz, star, subFamily]);\n\n    useEffect(() => {\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 600);\n        if (ctx && isPendulum) {\n            let fontSize = 43;\n            let top = 532 + fontSize;\n\n            ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\n            ctx.textAlign = 'left';\n\n            drawScale(ctx, blue_scale ?? 0, 57, top);\n            drawScale(ctx, red_scale ?? 0, 493, top);\n        }\n    }, [isInitializing, blue_scale, isPendulum, red_scale]);\n\n    useEffect(() => {\n        const ctx = nameCanvasRef.current?.getContext('2d');\n        if (ctx) {\n            ctx.clearRect(0, 0, 549, 100);\n            ctx.textAlign = 'left';\n            const style = nameStyleType === 'auto'\n                ? foil !== 'normal'\n                    ? foilStyleMap[foil] ?? defaultTextStyle\n                    : { ...defaultTextStyle, fillStyle: isXyz ? '#ffffff' : '#000000' }\n                : nameStyle;\n\n            drawName(ctx, name, 40.52, 78, 409, style);\n        }\n    }, [foil, isInitializing, isXyz, name, nameStyle, nameStyleType]);\n\n    useEffect(() => {\n        const ctx = ADCanvasRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 800);\n        if (isMonster) {\n            drawAD(ctx, atk, 343.51, 747);\n            if (!isLink) {\n                drawAD(ctx, def, 454.93, 747);\n            }\n        }\n    }, [isInitializing, atk, def, isLink, isMonster]);\n\n    useEffect(() => {\n        const ctx = setIdRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 800);\n        if (ctx) {\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\n            else ctx.fillStyle = '#000';\n            ctx.font = '15px stone-serif-regular';\n\n            if (isPendulum) {\n                fillTextLeftWithSpacing(ctx, set_id, -0.1, 44, 746);\n            } else if (isLink) {\n                fillTextLeftWithSpacing(ctx, set_id, -0.1, 367, 590);\n            } else fillTextRightWithSpacing(ctx, set_id, -0.1, 492, 589);\n        }\n    }, [isInitializing, isLink, isPendulum, isXyz, set_id]);\n\n    useEffect(() => {\n        const ctx = passcodeRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 800);\n        if (ctx) {\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\n            else ctx.fillStyle = '#000';\n            ctx.font = '15px stone-serif-regular';\n\n            fillTextLeftWithSpacing(ctx, passcode, -0.1, 25, 777);\n        }\n    }, [isInitializing, isLink, isPendulum, isXyz, passcode]);\n\n    useEffect(() => {\n        const ctx = firstEditionRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 800);\n        if (ctx && isFirstEdition === true) {\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\n            else ctx.fillStyle = '#000';\n\n            draw1stEdition(ctx);\n        }\n    }, [isInitializing, isLink, isPendulum, isXyz, isFirstEdition]);\n\n    useEffect(() => {\n        const ctx = creatorRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 800);\n        if (ctx) {\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\n            else ctx.fillStyle = '#000';\n            \n            drawCreatorText(ctx, creator);\n        }\n    }, [isInitializing, isLink, isPendulum, isXyz, creator]);\n\n    useEffect(() => {\n        const ctx = stickerRef.current?.getContext('2d');\n        drawingPipeline.current.sticker = () => {\n            ctx?.clearRect(0, 0, 549, 800);\n\n            return drawFromSource(ctx, `/asset/image/sticker/sticker-${sticker.toLowerCase()}.png`, 499, 750);\n        };\n    }, [sticker]);\n\n    const drawTypeAbility  = useCallback((\n        ctx: CanvasRenderingContext2D | null | undefined,\n        size: TypeSize = typeSizeMap['medium'],\n        alignment: 'left' | 'right' = 'left',\n    ) => {\n        console.log('🚀 ~ file: app.tsx ~ line 330 ~ App ~ size', size);\n        if (ctx) {\n            ctx?.clearRect(0, 0, 549, 700);\n            const { left } = size;\n            const normalizedSubFamily = subFamily.toUpperCase();\n            const instructionList = [\n                drawBracketTemplate(ctx, '[', size, alignment),\n                drawBracketSpaceTemplate(ctx, ' ', size, alignment),\n                ...type_ability.map((entry, index) => drawTextTemplate(\n                    ctx,\n                    entry,\n                    index === type_ability.length - 1,\n                    size, alignment)),\n                normalizedSubFamily === 'NO ICON'\n                    ? (edge: number) => edge + 4 * (alignment === 'left' ? 1 : -1)\n                    : drawIconSpaceTemplate(ctx, size, alignment),\n                drawBracketTemplate(ctx, ']', size, alignment),\n            ];\n            (alignment === 'left'\n                ? instructionList\n                : instructionList.reverse()).reduce((prev, curr) => {\n                return curr(prev);\n            }, left);\n            ctx.textAlign = 'left';\n        }\n    }, [subFamily, type_ability]);\n    useEffect(() => {\n        const ctx = effectCanvasRef.current?.getContext('2d');\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 750);\n        if (isMonster) {\n            const effectIndexSize = drawEffect(ctx, effect, false, isNormal);\n            drawTypeAbility(typeCtx, effectIndexSize === 0\n                ? typeSizeMap['medium']\n                : typeSizeMap['small']);\n        } else {\n            drawEffect(\n                ctx,\n                effect,\n                false,\n                false,\n                stFontList,\n                stSizeList,\n            );\n            drawTypeAbility(typeCtx, typeSizeMap['large'], 'right');\n        }\n    }, [isInitializing, drawTypeAbility, effect, isMonster, isNormal]);\n    useEffect(() => {\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 600);\n        if (isMonster && isPendulum) {\n            drawEffect(\n                ctx,\n                pendulum_effect,\n                true,\n                false,\n                pendulumFontList,\n                pendulumSizeList,\n            );\n        }\n    }, [isInitializing, isMonster, isPendulum, pendulum_effect]);\n\n    // const drawRefrenceImage = useCallback(async (ctx: CanvasRenderingContext2D | null | undefined) => {\n    //     let leftOffset = -5;\n    //     let topOffset = 150;\n    // let leftOffset = -4;\n    // let topOffset = 300;\n    // let leftOffset = -300;\n    // let topOffset = -7;\n    // let leftOffset = -1;\n    // let topOffset = 100;\n    // await drawFromSourceWithSize(ctx, '/asset/image/MP19-EN-C-1E.png', -leftOffset, -topOffset, 541, 800 * (541 / 549));\n    // }, []);\n\n    useEffect(() => {\n        const ctx = drawCanvasRef.current?.getContext('2d');\n        if (ctx) {\n            const pixelRatio = window.devicePixelRatio;\n            ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            ctx.imageSmoothingQuality = 'high';\n            ctx.clearRect(0, 0, 549, 800);\n        }\n        \n        // let fontLoaded = false;\n        WebFont.load({\n            custom: {\n                families: [\n                    'stone-serif-bold',\n                    'stone-serif-bold',\n                    'stone-serif-regular',\n                    'matrix',\n                    'palatino-linotype-bold',\n                    'MatrixBook',\n                    'MatrixBoldSmallCaps',\n                    'MatrixRegularSmallCaps',\n                    'Yugioh Rush Duel Numbers V4',\n                ],\n                urls: ['asset/font.css']\n            },\n            active: () => {\n                const localCardVersion = window.localStorage.getItem('card-version');\n                const localCardData = window.localStorage.getItem('card-data');\n\n                if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\n                    setCard(JSON.parse(localCardData));\n                }\n                setInitializing(false);\n            },\n            inactive: () => {\n                setError('Font could not be loaded');\n                setInitializing(false);\n            },\n        });\n    }, []);\n\n    const exportRef = useRef({\n        currentPipeline: Promise.resolve(),\n        queuedPipeline: false,\n    });\n    useEffect(() => {\n        let relevant = true;\n        if (isInitializing === false) {\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n        }\n        // localStorage.setItem('card-created', new Date().toISOString());\n\n        /**\n         * Run export pipeline\n         * - While it is running, every effect just mark pipeline as queued, then wait the current pipeline\n         * - If the pipeline is complete and there is no effect, run another pipeline and remove the queue\n         */\n        (async () => {\n            const canvasRef = drawCanvasRef.current;\n            if (canvasRef) {\n                document.querySelector('#export-canvas-guard')?.setAttribute('style', '');\n                exportRef.current.queuedPipeline = true;\n                await exportRef.current.currentPipeline;\n\n                if (relevant) {\n                    exportRef.current.currentPipeline = onExport({ isPendulum });\n                    exportRef.current.queuedPipeline = false;\n\n                    await exportRef.current.currentPipeline;\n                    if (relevant) {\n                        document.querySelector('#export-canvas-guard')?.setAttribute('style', 'display: none');\n                    }\n                }\n                // onExport({ isPendulum })\n            }\n        })();\n\n        return () => {\n            relevant = false;\n        };\n    });\n\n    const onExport = useRef(async (exportProps: {\n        isPendulum: boolean,\n    }) => {\n        const {\n            isPendulum = false\n        } = exportProps;\n        const canvasRef = drawCanvasRef.current;\n        const exportCtx = canvasRef?.getContext('2d');\n        const generateLayer = (canvasLayer: React.RefObject<HTMLCanvasElement>, ctx: CanvasRenderingContext2D | null | undefined) => {\n            return new Promise<boolean>(resolve => {\n                if (canvasLayer.current && ctx) {\n                    const layerData = canvasLayer.current.toDataURL('image/png');\n\n                    if (layerData) {\n                        var layer = new Image();\n                        layer.src = layerData;\n                        layer.onload = () => {\n                            ctx.drawImage(layer, 0, 0);\n                            resolve(true);\n                        };\n                        layer.onerror = () => resolve(false);\n                    } else resolve(false);\n                } else resolve(false);\n            });\n        };\n\n        if (canvasRef && exportCtx) {\n            exportCtx.clearRect(0, 0, 549, 800);\n            await Promise.all(Object\n                .values(drawingPipeline.current)\n                .map(callDraw => {\n                    return callDraw();\n                }));\n            await generateLayer(frameCanvasRef, exportCtx);\n            const previewCtx = previewCanvasRef.current;\n            if (previewCtx && exportCtx) {\n                if (isPendulum) {\n                    exportCtx.drawImage(previewCtx, 38, 144, 474, 470);\n                } else {\n                    exportCtx.drawImage(previewCtx, 67, 147, 416, 416);\n                }\n            }\n            await generateLayer(specialFrameCanvasRef, exportCtx);\n            const layerList = [\n                nameCanvasRef,\n                attributeCanvasRef,\n                subFamilyCanvasRef,\n                pendulumScaleCanvasRef,\n                pendulumEffectCanvasRef,\n                typeCanvasRef,\n                effectCanvasRef,\n                ADCanvasRef,\n                setIdRef,\n                firstEditionRef,\n                passcodeRef,\n                creatorRef,\n                stickerRef,\n            ];\n            await Promise.all([\n                layerList.map(currentlayer => generateLayer(currentlayer, exportCtx)),\n            ]);\n            // await drawRefrenceImage(exportCtx);\n        }\n    }).current;\n\n    return (\n        <div className={'app-container'} style={{\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\n        }}>\n            {isInitializing && <div className=\"full-loading\">\n                {error.length > 0 ? <span style={{ color: '#e04040' }}>\n                    {error}\n                </span> : 'Loading fonts and scripts...'}\n            </div>}\n            <div className=\"card-filter-panel\">\n            </div>\n            {isInitializing === false && <CardInputPanel\n                receivingCanvasRef={previewCanvasRef.current}\n                currentCard={currentCard}\n                onCardChange={setCard}\n                defaultCropInfo={pictureCrop}\n                onImageChange={cropInfo => {\n                    setImageChangeCount(cnt => cnt + 1);\n                    if (cropInfo) setCard(curr => ({\n                        ...curr,\n                        pictureCrop: cropInfo,\n                    }));\n                }}\n            >\n                <AppHeader /><br />\n            </CardInputPanel>}\n            <div className=\"card-preview-panel\">\n                <button className=\"export-button\">Save Card:<br />Right click the card → \"Save image as...\" / \"Copy Image\"</button>\n                <div className=\"card-canvas-group\">\n                    <canvas id=\"export-canvas\" ref={drawCanvasRef} width={549} height={800} />\n                    <div id=\"export-canvas-guard\">\n                        <div className=\"canvas-guard-alert\">Generating...</div>\n                        <LoadingOutlined />\n                    </div>\n                    <canvas id=\"frameCanvas\" ref={frameCanvasRef} width={549} height={800} />\n                    <canvas id=\"artCanvas\" ref={artCanvasRef} width={549} height={650} />\n                    <canvas id=\"specialFrameCanvas\" ref={specialFrameCanvasRef} width={549} height={800} />\n                    <canvas id=\"nameCanvas\" ref={nameCanvasRef} width={549} height={100} />\n                    <canvas id=\"attributeCanvas\" ref={attributeCanvasRef} width={549} height={100} />\n                    <canvas id=\"subFamilyCanvas\" ref={subFamilyCanvasRef} width={549} height={150} />\n                    <canvas id=\"pendulumScaleCanvas\" ref={pendulumScaleCanvasRef} width={549} height={600} />\n                    <canvas id=\"pendulumEffectCanvas\" ref={pendulumEffectCanvasRef} width={549} height={600} />\n                    <canvas id=\"typeCanvas\" ref={typeCanvasRef} width={549} height={700} />\n                    <canvas id=\"effectCanvas\" ref={effectCanvasRef} width={549} height={750} />\n                    <canvas id=\"ADCanvas\" ref={ADCanvasRef} width={549} height={800} />\n                    <canvas id=\"setId\" ref={setIdRef} width={549} height={800} />\n                    <canvas id=\"passcode\" ref={passcodeRef} width={549} height={800} />\n                    <canvas id=\"firstEdition\" ref={firstEditionRef} width={549} height={800} />\n                    <canvas id=\"creator\" ref={creatorRef} width={549} height={800} />\n                    <canvas id=\"sticker\" ref={stickerRef} width={549} height={800} />\n                    <canvas className=\"crop-canvas\" ref={previewCanvasRef} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}