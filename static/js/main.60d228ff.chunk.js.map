{"version":3,"sources":["model/index.tsx","util/categorize.tsx","util/condenser.ts","util/index.tsx","component/card-picture/index.tsx","component/link-marker/index.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/style-picker/index.tsx","page/input-panel/index.tsx","const/size.ts","const/position.ts","draw/text.ts","draw/util.ts","draw/predefine.ts","draw/type-ability.ts","draw/image.ts","app.tsx","reportWebVitals.js","index.js"],"names":["defaultTextStyle","fillStyle","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","globalAlpha","defaultMonster","atk","attribute","frame","subFamily","def","type_ability","effect","link_map","name","nameStyleType","nameStyle","passcode","foil","sticker","isPendulum","pendulum_effect","red_scale","blue_scale","picture","pictureCrop","x","y","width","height","aspect","unit","set_id","star","isFirstEdition","creator","frameType","color","backgroundColor","iconList","checkXyz","card","checkLink","checkMonster","getCardFrame","find","entry","toLowerCase","createCondenser","minThreshold","maxThreshold","min","max","median","lastEffective","iterateCount","magnitude","reverseSearch","finish","Math","searchDown","reset","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","randomCharacter","charSet","length","result","charactersLength","i","charAt","floor","random","randomSetID","randomPassword","splitEffect","isNormal","effectBody","effectMaterial","materialRegex","materialReplacement","exec","material","replace","effectFlavorCondition","flavorConditionRegex","flavorCondition","body","quoteConvert","text","normalizedString","ImageCropper","noRedrawNumber","defaultExternalSource","previewCanvasRef","children","ratio","defaultCropInfo","onSourceChange","onImageChange","useState","sourceType","setSourceType","internalSource","setInternalSource","externalSource","setExternalSource","imgRef","useRef","crop","setCrop","completedCrop","setCompletedCrop","onLoad","useCallback","img","current","useEffect","image","canvas","ctx","getContext","scaleX","naturalWidth","scaleY","naturalHeight","pixelRatio","window","devicePixelRatio","boundingWidth","ceil","getBoundingClientRect","boundingHeight","setTransform","imageSmoothingQuality","drawImage","className","Group","onChange","e","target","value","Button","addonBefore","placeholder","source","maxLength","type","accept","files","reader","FileReader","addEventListener","readAsDataURL","disabled","onClick","toBlob","blob","previewUrl","URL","createObjectURL","anchor","document","createElement","download","href","click","revokeObjectURL","generateDownload","style","src","onImageLoaded","cropData","onComplete","ruleOfThirds","LinkMarkChooser","defaultValue","choosenArrow","setChoosenArrow","rotateMap","literalChoosenArrow","JSON","stringify","Array","map","index","normalizedIndex","overlay","includes","cur","newMap","filter","push","transform","RadioButton","Radio","foilButton","fontWeight","toLocaleUpperCase","frameButton","attributeButton","alt","process","iconButton","starButton","stickerButton","CharPicker","targetId","onPick","setTarget","internalOnPick","char","inputTarget","getElementById","myField","myValue","selection","focus","createRange","position","selectionStart","startPos","endPos","selectionEnd","substring","insertAtCursor","onDrag","left","top","id","EllipsisOutlined","container","edge","draggable","throttleDrag","StylePicker","React","memo","defaultType","setType","setValue","isVisible","setVisible","background","zIndex","checked","newType","CloseOutlined","newStyle","hex","TextArea","Input","onChangeFactory","key","mutateFunction","valueTransform","isArray","RandomButton","seeder","onGenerate","marginLeft","paddingLeft","borderLeft","SyncOutlined","CardInputPanel","currentCard","receivingCanvasRef","onCardChange","isMirrorScale","setMirrorScale","setCard","mutateFunc","onFoilChange","onAttributeChange","onSubFamilyChange","onNameChange","debounce","onStarChange","onPictureChange","onLinkMapChange","onRedScaleChange","onBlueScaleChange","onPendulumEffectChange","onEffectChange","onATKChange","onDEFChange","onTypeAbilityChange","onSetIDChange","onPasscodeChange","onStickerChange","onCreatorChange","isXyz","isLink","isMonster","join","displayTypeAbility","setDisplayTypeAbility","displayName","setDisplayName","displayEffect","setDisplayEffect","displayPendulumEffect","setDisplayPendulumEffect","onlineCharPicker","setOnlineCharPicker","ref","props","isST","onFocus","allowClear","ev","rows","split","trim","monsterFontList","fontSize","lineHeight","lineCount","monsterSizeList","pendulumFontList","pendulumSizeList","stFontList","stSizeList","typeSizeMap","small","bracketSize","bracketSpace","bracketOffsetTop","upperCaseSize","upperCaseScale","lowerCaseSize","lowerCaseScale","spaceScale","spaceSize","frontSpace","behindSpace","iconSpace","medium","large","arrowPositionList","foilPosition","gold","art","platinum","drawScale","baseline","digitList","totalWidth","forEach","digit","measureText","accLeft","fillText","drawEffect","content","isPendulumEffect","fontList","sizeList","normalizedContent","effectIndexSize","tolerantPerSentence","additionalLineCount","sentencizeText","bulletSymbol","specialSymbol","tokenizeR","RegExp","specialSymbolReg","condenser","effectiveRatio","maxLine","font","textAlign","switchFont","func","tempFont","largeSize","lineList","reduce","prev","curr","condenseRatio","hypoWidth","tokenizedText","currentLineCount","tokenSentence","cnt","tokenWidth","test","fullString","fullStringSplittedByBullet","isLast","drawBullet","beginPath","arc","PI","fill","lineWidth","strokeStyle","stroke","clearRect","actualWidth","scale","sigmoidRatio","splitter","spaceSeparatedText","nonSpaceWidth","spaceCount","spaceWidth","fillTextLeftWithSpacing","str","letterSpacingRatio","charList","curLeft","fillTextRightWithSpacing","curRight","c","drawCreatorText","symbol","maxWidth","splittedContent","splittedWidth","symbolWidth","totalCondensableWidth","returnBundle","measureWithSymbol","nextEdge","drawAD","$value","nextWidth","arr","curText","drawBracketTemplate","size","alignment","bracketChar","alignmentOffset","drawIconSpaceTemplate","drawBracketSpaceTemplate","drawTextTemplate","spaceChar","drawSlashTemplate","baseOffset","totalOffset","upperChar","imageCacheMap","drawFromSource","sx","sy","a","Promise","resolve","ready","normalizedX","normalizedY","Image","onload","onerror","drawFromSourceWithSize","dw","dh","App","isInitializing","setInitializing","error","setError","drawCanvasRef","frameCanvasRef","artCanvasRef","specialFrameCanvasRef","subFamilyCanvasRef","pendulumScaleCanvasRef","pendulumEffectCanvasRef","typeCanvasRef","effectCanvasRef","nameCanvasRef","attributeCanvasRef","ADCanvasRef","setIdRef","passcodeRef","firstEditionRef","creatorRef","stickerRef","pendulumSize","drawingPipeline","specialFrame","imageChangeCount","setImageChangeCount","cardType","hasFoil","previewCtx","foiledBorder","all","parseInt","counter","offset","normalizedSubFamily","toUpperCase","splittedText","contentWidth","drawName","draw1stEdition","drawTypeAbility","instructionList","reverse","typeCtx","WebFont","load","custom","families","urls","active","localCardVersion","localStorage","getItem","localCardData","parse","inactive","exportRef","currentPipeline","queuedPipeline","relevant","setItem","querySelector","setAttribute","onExport","exportProps","canvasRef","exportCtx","generateLayer","canvasLayer","layerData","toDataURL","layer","Object","values","callDraw","layerList","currentlayer","backgroundImage","cropInfo","rel","overlayClassName","ExclamationCircleOutlined","LoadingOutlined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iVAEaA,G,cAAmB,CAC5BC,UAAW,UACXC,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZC,YAAa,IAgDJC,EA5Cc,CACvBC,IAAK,MACLC,UAAW,OACXC,MAAO,SACPC,UAAW,QACXC,IAAK,OACLC,aAAc,CAAC,SAAU,WAAY,UACrCC,OAAO,iiBAKPC,SAAU,CAAC,IAAK,IAAK,IAAK,IAAK,KAC/BC,KAAM,8BACNC,cAAe,OACfC,UAAW,CACPjB,UAAW,UACXC,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZC,YAAa,GAEjBa,SAAU,WACVC,KAAM,SACNC,QAAS,QACTC,YAAY,EACZC,gBAAiB,8VACjBC,UAAW,IACXC,WAAY,KACZC,QAAS,kPACTC,YAAa,CACTC,EAAG,EACHC,EAAG,EACHC,MAAO,IACPC,OAAQ,IACRC,OAAQ,EACRC,KAAM,MAEVC,OAAQ,aACRC,KAAM,EACNC,gBAAgB,EAChBC,QAAS,kDAIAC,EAAY,CACrB,CAAEtB,KAAM,SAAUuB,MAAO,OAAQC,gBAAiB,WAClD,CAAExB,KAAM,SAAUuB,MAAO,OAAQC,gBAAiB,WAClD,CAAExB,KAAM,SAAUuB,MAAO,OAAQC,gBAAiB,WAClD,CAAExB,KAAM,UAAWuB,MAAO,OAAQC,gBAAiB,WACnD,CAAExB,KAAM,MAAOuB,MAAO,OAAQC,gBAAiB,QAC/C,CAAExB,KAAM,OAAQuB,MAAO,OAAQC,gBAAiB,WAChD,CAAExB,KAAM,SAAUuB,MAAO,OAAQC,gBAAiB,WAClD,CAAExB,KAAM,QAASuB,MAAO,OAAQC,gBAAiB,WACjD,CAAExB,KAAM,OAAQuB,MAAO,OAAQC,gBAAiB,WAChD,CAAExB,KAAM,QAASuB,MAAO,OAAQC,gBAAiB,YAGxCC,EAAW,CACpB,UACA,QACA,aACA,aACA,SACA,WCxESC,EAAW,SAACC,GACrB,MAAsB,QAAfA,EAAKjC,OAEHkC,EAAY,SAACD,GACtB,MAAsB,SAAfA,EAAKjC,OAAoBmC,EAAaF,IAEpCE,EAAe,SAACF,GACzB,MAAsB,UAAfA,EAAKjC,OAAoC,SAAfiC,EAAKjC,OAG7BoC,EAAe,SAACpC,GAAmB,IAAD,IAC3C,2BAAO4B,EAAUS,MAAK,SAAAC,GAAK,OAAIA,EAAMhC,OAASN,EAAMuC,wBAApD,aAAO,EAA6DjC,YAApE,QAA4E,UChBnEkC,EAAkB,WAA4C,IAA3CC,EAA0C,uDAA3B,EAAGC,EAAwB,uDAAT,IACzDC,EAAMF,EACNG,EAAMF,EACNG,EAASD,EACTE,EAAgBD,EAChBE,EAAe,GACfC,EAAY,IAEVC,EAAgB,WAQlB,OAPkB,IAAdD,EAAiBE,KAEjBL,GAAUG,EAEVH,GADAG,GAAa,IAIVG,KAAKR,IAAIE,EAAQD,IAGtBQ,EAAa,WAIf,OAFAL,GAAgB,EADhBF,GAAUG,GAMRK,EAAQ,WAA6C,IAA5CZ,EAA2C,uDAA5BE,EAAKD,EAAuB,uDAARE,EAC9CD,EAAMF,EACNG,EAAMF,EACNG,EAASH,EACTK,EAAe,GACfC,EAAY,IACZF,EAAgBJ,GAGdY,EAAY,kBAAMT,GAClBU,EAAY,SAACC,GAAD,OAAuBX,EAASW,GAE5CC,EAAmB,eAACC,EAAD,uDAAeb,EAAf,OAA0BC,EAAgBY,GAC7DC,EAAmB,kBAAMb,GACzBc,EAAqB,WAGvB,OADAb,GAAgB,EADhBF,EAASC,GAKPe,EAAkB,kBAAMd,GACxBG,EAAS,kBAAMH,GAAgB,GAErC,MAAO,CACHM,QACAD,aACAH,gBACAC,SACAI,YACAC,YACAE,mBACAE,mBACAC,qBACAC,oBC3DKC,EAAkB,WAG3B,IAHoF,IAAxDC,EAAuD,uDAA7C,6BAA8BC,EAAe,uDAAN,EACzEC,EAAmB,GACjBC,EAAmBH,EAAQC,OACvBG,EAAI,EAAGA,EAAIH,EAAQG,IACzBF,GAAUF,EAAQK,OAAOjB,KAAKkB,MAAMlB,KAAKmB,SAAWJ,IAExD,OAAOD,GAGEM,EAAc,WACvB,MAAM,GAAN,OAAUT,EAAgB,6BAA8B,GAAxD,cAAgEA,EAAgB,aAAc,KAGrFU,EAAiB,WAC1B,MAAM,GAAN,OAAUV,EAAgB,aAAc,KAG/BW,EAAc,SAACrE,GAAsC,IAAD,MAArBsE,EAAqB,wDACzDC,EAAavE,EAEbwE,EAAiB,GACfC,EAAgB,sBAChBC,EAAmB,UAAGD,EAAcE,KAAKJ,UAAtB,aAAG,EAAiC,GACvDK,EAAQ,UAAGH,EAAcE,KAAKJ,UAAtB,aAAG,EAAiC,GAC9CK,GAAYF,GACZF,EAAiBI,EACjBL,EAAaA,EAAWM,QAAQH,EAAqB,KAClDF,EAAiB,GAExB,IAAIM,EAAwB,GACtBC,EAAuB,iGACvBC,EAAe,UAAGD,EAAqBJ,KAAK3E,UAA7B,aAAG,EAAoC,GAM5D,OALIgF,GAAmBV,GACnBQ,EAAwBE,EACxBT,EAAaA,EAAWM,QAAQG,EAAiB,KAC9CF,EAAwB,GAExB,CACHF,SAAUJ,EACVS,KAAMV,EACNS,gBAAiBF,IAIZI,EAAe,SAACC,GACzB,IAAIC,EAAgB,OAAID,QAAJ,IAAIA,IAAQ,GAMhC,OALAC,EAAmBA,EAAiBP,QAAQ,uBAAwB,YAC/DA,QAAQ,KAAM,UACdA,QAAQ,6BAA8B,YACtCA,QAAQ,KAAM,UACdA,QAAQ,MAAO,W,8FChBjB,IAAMQ,EAAe,SAAC,GASR,IAAD,IARhBC,sBAQgB,MARC,EAQD,MAPhBC,6BAOgB,MAPQ,GAOR,EANhBC,EAMgB,EANhBA,iBACAC,EAKgB,EALhBA,SAKgB,IAJhBC,aAIgB,MAJR,EAIQ,EAHhBC,EAGgB,EAHhBA,gBAGgB,IAFhBC,sBAEgB,MAFC,aAED,MADhBC,qBACgB,MADA,aACA,IACoBC,mBAAS,YAD7B,mBACTC,EADS,KACGC,EADH,OAE4BF,mBAAS,IAFrC,mBAETG,EAFS,KAEOC,EAFP,OAG4BJ,mBAASP,GAHrC,mBAGTY,EAHS,KAGOC,EAHP,KAIVC,EAASC,iBAAgC,MAJ/B,EAKQR,mBAAyBH,GALjC,mBAKTY,EALS,KAKHC,EALG,OAM0BV,mBAAgC,MAN1D,mBAMTW,EANS,KAMMC,EANN,KAqBVC,EAASC,uBAAY,SAACC,GACxBR,EAAOS,QAAUD,IAClB,IA6CH,OApCAE,qBAAU,WAAO,IAAD,QACNC,EAAQX,EAAOS,QACfG,EAASzB,EACTe,EAAOE,EACb,GAAKF,GAASU,GAAWD,EAAzB,CAEA,IAAME,EAAMD,EAAOE,WAAW,MAC9B,GAAKD,EAAL,CAEA,IAAME,EAASJ,EAAMK,aAAeL,EAAMhG,MACpCsG,EAASN,EAAMO,cAAgBP,EAAM/F,OACrCuG,EAAaC,OAAOC,iBACpBC,EAAgB5E,KAAK6E,KAAKX,EAAOY,wBAAwB7G,OACzD8G,EAAiB/E,KAAK6E,KAAKX,EAAOY,wBAAwB5G,QAEhEgG,EAAOjG,OAAQ,OAAC2G,QAAD,IAACA,IAAiB,GAAKH,EACtCP,EAAOhG,QAAS,OAAC6G,QAAD,IAACA,IAAkB,GAAKN,EAExCN,EAAIa,aAAaP,EAAY,EAAG,EAAGA,EAAY,EAAG,GAClDN,EAAIc,sBAAwB,OAE5Bd,EAAIe,UACAjB,GACA,UAACT,EAAKzF,SAAN,QAAW,GAAKsG,GAChB,UAACb,EAAKxF,SAAN,QAAW,GAAKuG,GAChB,UAACf,EAAKvF,aAAN,QAAe,GAAKoG,GACpB,UAACb,EAAKtF,cAAN,QAAgB,GAAKqG,EACrB,EACA,EAPJ,OAQKK,QARL,IAQKA,IAAiB,EARtB,OASKG,QATL,IASKA,IAAkB,GAEvBjC,EAAcU,OAEf,CAACE,EAAejB,EAAkBF,IAGjC,sBAAK4C,UAAU,qBAAf,UACI,sBAAKA,UAAU,0BAAf,UACKzC,EACD,eAAC,IAAM0C,MAAP,CAAaC,SAAU,SAAAC,GAAC,OAAIrC,EAAcqC,EAAEC,OAAOC,QAAQA,MAAOxC,EAAlE,UACI,cAAC,IAAMyC,OAAP,CAAcD,MAAO,WAArB,SACI,cAAC,IAAD,CACIE,YAAY,OAAOC,YAAY,6BAC/BH,MAAOpC,EACPiC,SApDO,SAACC,GAC5B,IAAMM,EAASN,EAAEC,OAAOC,MAExB3C,EAAe+C,GACfvC,EAAkBuC,IAgDoCC,UAAW,KAHtC,SAKf,eAAC,IAAMJ,OAAP,CAAcD,MAAO,WAArB,UACI,cAAC,IAAD,CAAOM,KAAK,OAAQC,OAAO,UAAUV,SAxEpC,SAACC,GAClB,GAAIA,EAAEC,OAAOS,OAASV,EAAEC,OAAOS,MAAMnF,OAAS,EAAG,CAC7C,IAAMoF,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,WACC,kBAAlBF,EAAOnF,SACdqC,EAAkB8C,EAAOnF,QACzBmC,EAAc,gBAGtBgD,EAAOG,cAAcd,EAAEC,OAAOS,MAAM,QAgExB,8BACoB,aAAfhD,GAA6B,qCAC1B,cAAC,IAAD,CACImC,UAAU,kBACVkB,WAAU,OAAC3C,QAAD,IAACA,OAAD,EAACA,EAAezF,UAAS,OAACyF,QAAD,IAACA,OAAD,EAACA,EAAexF,QACnDoI,QAAS,kBAAM7D,GA3HnD,SAA0ByB,EAAkCV,GACnDA,GAASU,GACdA,EAAOqC,QACH,SAACC,GACG,IAAMC,EAAa/B,OAAOgC,IAAIC,gBAAgBH,GAExCI,EAASC,SAASC,cAAc,KACtCF,EAAOG,SAAW,kBAClBH,EAAOI,KAAON,IAAIC,gBAAgBH,GAClCI,EAAOK,QAEPvC,OAAOgC,IAAIQ,gBAAgBT,KAE/B,YACA,GA6G+DU,CAAiB1E,EAAkBiB,IAH1E,oCAOA,sBAAM0D,MAAO,CAAE1I,MAAO,WAAtB,8DAMpB,qBAAKyG,UAAU,eAAf,SACI,cAAC,IAAD,CACIkC,IAAoB,aAAfrE,EAA4BE,EAAiBE,EAClDkE,cAAe1D,EACfJ,KAAMA,EACN6B,SAAU,SAAAkC,GAAQ,OAAI9D,EAAQ,2BAAK8D,GAAN,IAAgBpJ,OAAQwE,MACrD6E,WAAY,SAAAD,GAAQ,OAAI5D,EAAiB4D,IACzCE,cAAc,GANFzE,SCpInB0E,G,OAAkB,SAAC,GAGR,IAAD,IAFnBC,oBAEmB,MAFJ,GAEI,MADnBtC,gBACmB,MADR,aACQ,IACqBtC,mBAAS4E,GAD9B,mBACZC,EADY,KACEC,EADF,KAEbC,EAAY,EAAE,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,KAEhDC,EAAsBC,KAAKC,UAAUL,GAM3C,OALA5D,qBAAU,WACNqB,EAASuC,KAEV,CAACG,IAEG,sBAAK5C,UAAU,sBAAf,UACH,qBAAKA,UAAU,QAAf,yBAGA,qBAAKA,UAAU,YAAf,SACK,YAAI+C,MAAM,IAAIC,KAAI,SAAChJ,EAAOiJ,GACvB,IAAMC,EAAe,UAAMD,EAAQ,GAEnC,MAAwB,MAApBC,EAAgC,cAAC,IAAD,CAAiBC,QAAQ,QAAzB,SAChC,qBAAKnD,UAAU,oBAAoBmB,QAAS,WACxCuB,EAAgB,KADpB,gBAD6C,KAM1C,qBACH1C,UAAS,oCAA+BiD,EAAQ,EAAvC,YAA4CR,EAAaW,SAASF,GAAmB,iBAAmB,IACjH/B,QAAS,WACLuB,GAAgB,SAAAW,GACZ,IAAIC,EAAM,YAAOD,GAKjB,OAHIC,EAAOF,SAASF,GAAkBI,EAASA,EAAOC,QAAO,SAAAvJ,GAAK,OAAIA,IAAUkJ,KAC3EI,EAAOE,KAAKN,GAEVI,MATZ,SAaH,qBAAKtD,UAAS,4CAAuCiD,EAAQ,GAAKhB,MAAO,CAAEwB,UAAU,UAAD,OAAYd,EAAUM,GAAtB,YAbvEC,a,iBC/BjBQ,G,MAAgBC,IAAxBrD,QAEKsD,EN0EW,CACpB,CAAE5L,KAAM,SAAUuB,MAAO,WACzB,CAAEvB,KAAM,OAAQuB,MAAO,WACvB,CAAEvB,KAAM,WAAYuB,MAAO,YM7EIyJ,KAAI,YAAsB,IAAnBzJ,EAAkB,EAAlBA,MAAOvB,EAAW,EAAXA,KAC7C,OAAO,cAAC0L,EAAD,CAAwBrD,MAAOrI,EAAMiK,MAAO,CAC/C1I,QACAsK,WAAY,QAFT,SAIF7L,EAAK8L,qBAJe9L,MAOhB+L,EAAczK,EAAU0J,KAAI,YAAuC,IAApCzJ,EAAmC,EAAnCA,MAAOvB,EAA4B,EAA5BA,KAAMwB,EAAsB,EAAtBA,gBACrD,OAAO,cAACkK,EAAD,CAAwBrD,MAAOrI,EAAMiK,MAAO,CAC/CzI,kBACAD,SAFG,SAIFvB,GAJoBA,MAOhBgM,EN2EgB,CACzB,CAAEhM,KAAM,OAAQuB,MAAO,WACvB,CAAEvB,KAAM,QAASuB,MAAO,WACxB,CAAEvB,KAAM,OAAQuB,MAAO,WACvB,CAAEvB,KAAM,QAASuB,MAAO,WACxB,CAAEvB,KAAM,QAASuB,MAAO,WACxB,CAAEvB,KAAM,OAAQuB,MAAO,WACvB,CAAEvB,KAAM,SAAUuB,MAAO,WACzB,CAAEvB,KAAM,QAASuB,MAAO,WACxB,CAAEvB,KAAM,OAAQuB,MAAO,YMpFkByJ,KAAI,gBAAGhL,EAAH,EAAGA,KAAH,OAAc,cAAC0L,EAAD,CAAwBrD,MAAOrI,EAA/B,SAC3D,qBAAKiM,IAAKjM,EAAMkK,IAAG,UAAKgC,aAAL,uCAA0DlM,EAAKiC,cAA/D,WAD0DjC,MAGpEmM,EAAa1K,EAASuJ,KAAI,SAAAhJ,GAAK,OAAI,cAAC0J,EAAD,CAAyBrD,MAAOrG,EAAhC,SAAwCA,GAAtBA,MACrDoK,EAAa,YAAIrB,MAAM,KAAKC,KAAI,SAAC7C,EAAG8C,GAAJ,OAAc,cAACS,EAAD,CAA8BrD,MAAK,UAAK4C,GAAxC,mBAAqDA,IAArD,UAAqBA,OACnEoB,EN2Dc,CACvB,OACA,SACA,OACA,QACA,QACA,QACA,QACA,SMnEqCrB,KAAI,SAAAhL,GAAI,OAAI,cAAC0L,EAAD,CAAwBrD,MAAOrI,EAA/B,SACjD,qBAAKiM,IAAKjM,EAAMkK,IAAG,UAAKgC,aAAL,wCAA2DlM,EAAKiC,cAAhE,WADgDjC,M,yBCmBhE,IAAMsM,EAAa,SAAC,GAGR,IAAD,IAFdC,gBAEc,MAFH,GAEG,MADdC,cACc,MADL,aACK,IACc5G,mBAA6B,MAD3C,mBACPwC,EADO,KACCqE,EADD,KAERC,EAAiB,SAACC,GACpB,IAAMC,EAAclD,SAASmD,eAAeN,GAC5C,GAAIK,EAAa,CAAC,IACNvE,EAjDpB,SAAwByE,EAA8BC,GAElD,GAAKrD,SAAiBsD,UAKlB,OAJAF,EAAQG,QACKvD,SAAiBsD,UAAUE,cACpCjI,KAAO8H,EAEJ,CACH1E,MAAOyE,EAAQzE,MACf8E,SAAU,GAIb,GAAIL,EAAQM,gBAA6C,IAA3BN,EAAQM,eAAsB,CAC7D,IAAMC,EAAWP,EAAQM,eACnBE,EAASR,EAAQS,aAQvB,OAPAT,EAAQzE,MAAQyE,EAAQzE,MAAMmF,UAAU,EAAGH,GACrCN,EACAD,EAAQzE,MAAMmF,UAAUF,EAAQR,EAAQzE,MAAM3E,QACpDoJ,EAAQM,eAAiBC,EAAWN,EAAQrJ,OAC5CoJ,EAAQS,aAAeF,EAAWN,EAAQrJ,OAC1CoJ,EAAQG,QAED,CACH5E,MAAOyE,EAAQzE,MACf8E,SAAUE,EAAWN,EAAQrJ,QAKjC,OAFAoJ,EAAQzE,OAAS0E,EAEV,CACH1E,MAAOyE,EAAQzE,MACf8E,SAAU,GAiBQM,CAAeb,EAAaD,GAAtCtE,MAERmE,EAAOnE,KAIfxB,qBAAU,WACN4F,EAAU/C,SAASmD,eAAe,kBACnC,IAEH,IAAMa,EAAShH,uBAAY,YAIpB,IAHH0B,EAGE,EAHFA,OACAuF,EAEE,EAFFA,KAAMC,EAEJ,EAFIA,IACNnC,EACE,EADFA,UAEArD,EAAQ6B,MAAM0D,KAAd,UAAwBA,EAAxB,MACAvF,EAAQ6B,MAAM2D,IAAd,UAAuBA,EAAvB,MACAxF,EAAQ6B,MAAMwB,UAAYA,IAC3B,IAEH,OAAO,sBAAKzD,UAAU,wBAAf,UACF,sBAAK6F,GAAI,cAAe7F,UAAU,cAAlC,UACG,qBAAKA,UAAU,UAAf,SACI,cAAC8F,EAAA,EAAD,MAEH,CACG,SACA,SACA,SACA,OACA,SACA,UACF9C,KAAI,SAAAhJ,GACF,OAAO,wBAAoBgG,UAAU,UAAUmB,QAAS,kBAAMuD,EAAe1K,IAAtE,SAA+EA,GAAlEA,SAG5B,cAAC,IAAD,CACIoG,OAAQA,EACR2F,UAAW,KAGXC,MAAM,EAGNC,WAAW,EACXC,aAAc,EACdR,OAAQA,Q,kBCxFPS,G,OAAcC,IAAMC,MAAK,YAIlB,IAHhBC,EAGe,EAHfA,YACA9D,EAEe,EAFfA,aACAtC,EACe,EADfA,SACe,EAEStC,mBAAS0I,GAFlB,mBAER3F,EAFQ,KAEF4F,EAFE,OAGW3I,mBAAS4E,GAHpB,mBAGRnC,EAHQ,KAGDmG,EAHC,OAIiB5I,oBAAS,GAJ1B,mBAIR6I,EAJQ,KAIGC,EAJH,KAMf,OAAO,sBAAK1G,UAAU,eAAf,UACH,qBAAKA,UAAU,uBAAuBmB,QAAS,kBAAMuF,GAAW,SAAArD,GAAG,OAAKA,MAAxE,SACH,qBAAKrD,UAAU,uBAAuBiC,MAAO,CAAE0E,WAAW,GAAD,OAAc,SAAThG,EAAkB,QAAUN,EAAMpJ,YAAhG,SACqB,SAAT0J,EAAkB,OAAS,gDAGnC8F,EACK,sBAAKzG,UAAU,uBAAuBiC,MAAO,CAAEkD,SAAU,WAAYyB,OAAQ,GAA7E,UACE,qBAAK5G,UAAU,oBAAoBmB,QAAS,kBAAMuF,GAAW,MAC7D,sBAAK1G,UAAU,oBAAf,UACI,cAAC,IAAD,CAAUK,MAAO,OAAQwG,QAAkB,SAATlG,EAAiBT,SAAU,WACzD,IAAM4G,EAAmB,SAATnG,EAAkB,SAAW,OAC7C4F,EAAQO,GACR5G,EAAS4G,EAASzG,IAHtB,kBAKA,cAAC0G,EAAA,EAAD,CAAe/G,UAAU,qBAAqBmB,QAAS,kBAAMuF,GAAW,SAE5E,sBAAK1G,UAAW,sBAAhB,UACc,SAATW,GAAmB,qBAAKX,UAAU,oBACnC,4CACA,cAAC,IAAD,CAAezG,MAAO8G,EAAMpJ,UAAWiJ,SAAU,SAAA3G,GAC7CgN,EAAQ,UACRC,GAAS,SAAAnD,GACL,IAAM2D,EAAQ,2BACP3D,GADO,IAEVpM,UAAWsC,EAAM0N,MAIrB,OADA/G,EAAS,SAAU8G,GACZA,cAKrB,WAEX,kBAAM,MC7CDE,EAAaC,IAAbD,SAGFE,GAAkB,SACpBC,EACAC,GAEE,IADFC,EACC,uDADqC,SAAClH,GAAD,OAAWA,GAEjD,OAAO,SAACF,GACJmH,GAAe,SAAA1I,GAAO,wCACfA,GADe,kBAEjByI,EAAME,EAA4B,kBAANpH,GAAkB4C,MAAMyE,QAAQrH,GAAKA,EAA5C,OAAgDA,QAAhD,IAAgDA,GAAhD,UAAgDA,EAAGC,cAAnD,aAAgD,EAAWC,cASvFoH,GAAe,SAAC,GAGD,IAFjBC,EAEgB,EAFhBA,OACAC,EACgB,EADhBA,WAEA,OAAO,sBAAM1F,MAAO,CAAE2F,WAAY,GAAIC,YAAa,GAAIC,WAAY,kBAA5D,SACH,cAAC,IAAD,CAAS3E,QAAQ,SAAjB,SACI,cAAC4E,EAAA,EAAD,CAAc5G,QAAS,kBAAMwG,EAAWD,aAgBvCM,GAAiB,SAAC,GAOR,IANnBC,EAMkB,EANlBA,YACAC,EAKkB,EALlBA,mBACAzK,EAIkB,EAJlBA,gBACA0K,EAGkB,EAHlBA,aACAxK,EAEkB,EAFlBA,cACAJ,EACkB,EADlBA,SACkB,EACsBK,oBAAS,GAD/B,mBACXwK,EADW,KACIC,EADJ,KAEZC,EAAU,SAACC,GACbJ,GAAa,SAAAF,GAAW,OAAIM,EAAWN,OAErCO,EAAepB,GAAgB,OAAQkB,GAcvCG,EAAoBrB,GAAgB,YAAakB,GACjDI,EAAoBtB,GAAgB,YAAakB,GACjDK,EAAeC,mBAASxB,GAAgB,OAAQkB,GAAU,KAU1DO,EAAezB,GAAgB,OAAQkB,GAIvCQ,EAAkB1B,GAAgB,UAAWkB,GAC7CS,EAAkB3B,GAAgB,WAAYkB,GAC9CU,EAAmB5B,GAAgB,YAAakB,GAChDW,EAAoB7B,GAAgB,aAAckB,GAClDY,EAAyBN,mBAASxB,GAAgB,kBAAmBkB,GAAU,KAC/Ea,EAAiBP,mBAASxB,GAAgB,SAAUkB,GAAU,KAC9Dc,EAAchC,GAAgB,MAAOkB,GACrCe,EAAcjC,GAAgB,MAAOkB,GACrCgB,EAAsBV,oBAAS,SAACvI,GAClCiI,GAAQ,SAAA1J,GAAO,kCACRA,GADQ,IAEX/G,aAAcwI,EAAM2C,KAAI,SAAAhJ,GAAK,gBAAOA,aAEzC,KACGuP,EAAgBnC,GAAgB,SAAUkB,GAC1CkB,EAAmBpC,GAAgB,WAAYkB,GAC/CmB,EAAkBrC,GAAgB,UAAWkB,GAC7CoB,EAAkBtC,GAAgB,UAAWkB,GAM/C5Q,GAYAuQ,EAZAvQ,MAAOU,GAYP6P,EAZO7P,KACPJ,GAWAiQ,EAXAjQ,KAAMC,GAWNgQ,EAXMhQ,cAAeC,GAWrB+P,EAXqB/P,UACrBQ,GAUAuP,EAVAvP,QACAZ,GASAmQ,EATAnQ,OACAD,GAQAoQ,EARApQ,aACAS,GAOA2P,EAPA3P,WAAYC,GAOZ0P,EAPY1P,gBAAiBC,GAO7ByP,EAP6BzP,UAAWC,GAOxCwP,EAPwCxP,WACxCjB,GAMAyQ,EANAzQ,IAAKI,GAMLqQ,EANKrQ,IAAKG,GAMVkQ,EANUlQ,SACVN,GAKAwQ,EALAxQ,UACAE,GAIAsQ,EAJAtQ,UACAwB,GAGA8O,EAHA9O,KACAD,GAEA+O,EAFA/O,OACAf,GACA8P,EADA9P,SAAUiB,GACV6O,EADU7O,eAAgBC,GAC1B4O,EAD0B5O,QAAShB,GACnC4P,EADmC5P,QAEjCsR,GAAQjQ,EAASuO,GACjB2B,GAAShQ,EAAUqO,GACnB4B,GAAYhQ,EAAaoO,GAzEb,GA0EkCrK,mBAAS/F,GAAaiS,KAAK,MA1E7D,qBA0EXC,GA1EW,MA0ESC,GA1ET,SA2EoBpM,mBAAS5F,IA3E7B,qBA2EXiS,GA3EW,MA2EEC,GA3EF,SA4EwBtM,mBAAS9F,IA5EjC,qBA4EXqS,GA5EW,MA4EIC,GA5EJ,SA6EwCxM,mBAASrF,IA7EjD,qBA6EX8R,GA7EW,MA6EYC,GA7EZ,SA8E8B1M,mBAAS,IA9EvC,qBA8EX2M,GA9EW,MA8EOC,GA9EP,MA+EZC,GAAMrM,mBAGZ,OAAO,sBAAK4B,UAAU,kBAAf,UACFzC,EACD,cAAC,EAAD,CACIgH,SAAUgG,GACV/F,OAAQ,SAAAnE,GAAU,IAAD,MACToK,GAAI7L,UAAS,QAAC,EAAA6L,GAAI7L,eAAL,mBAAsB8L,aAAtB,mBAA6BxK,gBAA7B,gBAAwC,CACrDE,OAAQ,CAAEC,eAItB,eAAC,IAAMJ,MAAP,CAAaD,UAAU,4BAA4BK,MAAOjI,GAAM8H,SAAUsI,EAA1E,UACI,uBAAOxI,UAAU,yCAAjB,SACI,0CAEH4D,KAEL,cAAC,IAAM3D,MAAP,CAAaD,UAAU,cAAcK,MAAO3I,GAAOwI,SA5FjC,SAACC,GACnBgI,GAAa,SAAAF,GAAgB,IAAD,EAClB5H,EAAK,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAGC,cAAN,aAAG,EAAWC,MACnBsK,EAAiB,UAAVtK,GAA+B,SAAVA,EAElC,OAAO,2BACA4H,GADP,IAEIvQ,MAAO2I,EACP/H,WAAsB,SAAV+H,GAA8B,UAAVA,IAAqBsK,GAAe1C,EAAY3P,WAChFX,UAAWgT,EAAO,UAAY1C,EAAYtQ,gBAmFlD,SACKoM,IAEL,uBACA,sBAAK/D,UAAU,yBAAf,UACI,cAAC,IAAD,CACI6F,GAAG,OACH4E,IAA0B,SAArBF,GAA8BE,GAAa,KAChDG,QAAS,kBAAMJ,GAAoB,SACnCK,YAAU,EACVtK,YAAa,6CAAO,cAAC4F,EAAD,CAAaG,YAAarO,GAAeuK,aAActK,GAAWgI,SAtFxE,SAACS,EAAqBN,GAC5C8H,GAAa,SAAAF,GACT,OAAO,2BACAA,GADP,IAEIhQ,cAAe0I,EACfzI,UAAWmI,aAkFXG,YAAY,YACZH,MAAO4J,GACPjK,UAAU,aACVE,SAAU,SAAA4K,GACNnC,EAAamC,GACbZ,GAAeY,EAAG1K,OAAOC,UAGhCwJ,GACMD,GAOG,KANA,eAAC,IAAM3J,MAAP,CAAaD,UAAU,iBAAiBK,MAAK,UAAKlH,IAAQ+G,SAAU2I,EAApE,UACE,uBAAO7I,UAAU,yCAAjB,SACI,+BAAO2J,GAAQ,OAAS,YAE3BvF,KAGP,eAAC,IAAMnE,MAAP,CAAaD,UAAU,iBAAiBK,MAAO1I,GAAWuI,SAAUwI,EAApE,UACE,uBAAO1I,UAAU,yCAAjB,SACI,0CAEHmE,KAET,eAAC,IAAMlE,MAAP,CAAaD,UAAU,sCAAsCK,MAAO5I,GAAWyI,SAAUuI,EAAzF,UACI,uBAAOzI,UAAU,yCAAjB,SACI,+CAEHgE,QAGT,sBAAehE,UAAU,YAAzB,UACI,sBAAKA,UAAU,kBAAf,UACI,cAAC,IAAD,CACI6F,GAAG,SACH4E,IAA0B,WAArBF,GAAgCE,GAAa,KAClDG,QAAS,kBAAMJ,GAAoB,WACnCK,YAAU,EACV7K,UAAU,eACVO,YAAa,8CAAQ,cAAC,GAAD,CAAcmH,OAAQzL,EAAa0L,WAAY4B,OACpErJ,SAAUqJ,EACV/I,YAAY,SACZH,MAAOnH,KAET2Q,IAAuB,SAAVnS,IAA8B,UAAVA,IAAsB,sBAAKsI,UAAU,qBAAf,UACrD,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAUE,SA1HH,SAACC,GAAD,OAAYgI,GAAa,SAAAF,GAChD,OAAO,2BAAKA,GAAZ,IAAyB3P,WAAY6H,EAAEC,OAAOyG,cAyHUA,QAASvO,GAAjD,0BACCA,IAAc,cAAC,IAAD,CAAU4H,SAAU,SAAAC,GAAC,OAAIkI,EAAelI,EAAEC,OAAOyG,UAAUA,QAASuB,EAApE,8BAElB9P,IAAc,qCACX,8BACI,cAAC,IAAD,CAAwBiI,YAAa,iCACjC,sBAAM0B,MAAO,CAAE1I,MAAO,WAAtB,kBADiC,YAGrC8G,MAAO5H,GACPyH,SAAU,SAAAC,GACN8I,EAAkB9I,GACdiI,GAAeY,EAAiB7I,KAN7B,gBASf,8BACI,cAAC,IAAD,CAAuBI,YAAa,iCAChC,sBAAM0B,MAAO,CAAE1I,MAAO,WAAtB,iBADgC,YAGpC8G,MAAO7H,GACP0H,SAAU,SAAAC,GACFiI,GAAea,EAAkB9I,GACrC6I,EAAiB7I,KANV,eASf,qBAAKH,UAAU,aAAaiC,MAAO,CAAEkD,SAAU,YAA/C,SACI,cAAC+B,EAAD,CACIrB,GAAG,kBACH4E,IAA0B,oBAArBF,GAAyCE,GAAa,KAC3DG,QAAS,kBAAMJ,GAAoB,oBACnCK,YAAU,EACVrK,YAAY,kBACZH,MAAOgK,GACPnK,SAAU,SAAA4K,GACN5B,EAAuB4B,GACvBR,GAAyBQ,EAAG1K,OAAOC,QAEvC0K,KAAM,GAXI,2BAgB1B,cAAC,IAAD,CAAOxK,YAAY,OACfsF,GAAG,OACH4E,IAA0B,SAArBF,GAA8BE,GAAa,KAChDG,QAAS,kBAAMJ,GAAoB,SACnCK,YAAU,EACV7K,UAAU,gBACVE,SAAU,SAAA4K,GACN,IAAMzK,EAAQyK,EAAG1K,OAAOC,MAExB2J,GAAsB3J,GACtBiJ,EAAoBjJ,EACf2K,MAAM,KACNhI,KAAI,SAAAhJ,GAAK,OAAIA,EAAMiR,UACnB1H,QAAO,SAAAvJ,GAAK,MAAqB,kBAAVA,GAAsBA,EAAM0B,OAAS,OAErE8E,YAAY,iBACZyB,MAAO,CAAEnJ,MAAO,QAChBuH,MAAO0J,KAEX,cAAC7C,EAAD,CACIrB,GAAG,cACH4E,IAA0B,gBAArBF,GAAqCE,GAAa,KACvDG,QAAS,kBAAMJ,GAAoB,gBACnCK,YAAU,EACVrK,YAAY,cACZH,MAAO8J,GACPY,KAAM,GACN7K,SAAU,SAAA4K,GACN3B,EAAe2B,GACfV,GAAiBU,EAAG1K,OAAOC,SAVrB,UAad,sBAAKL,UAAU,oBAAf,UACK6J,GACK,cAAC,IAAD,CACEhE,GAAG,MACH4E,IAA0B,QAArBF,GAA6BE,GAAa,KAC/CG,QAAS,kBAAMJ,GAAoB,QACnCjK,YAAY,MAAMsK,YAAU,EAACxK,MAAO7I,GAAK0I,SAAUkJ,GAJ1C,OAKX,wBACLS,GACK,cAAC,IAAD,CACEhE,GAAG,MACH4E,IAA0B,QAArBF,GAA6BE,GAAa,KAC/CG,QAAS,kBAAMJ,GAAoB,QACnCjK,YAAY,MAAMsK,YAAU,EAACxK,MAAOzI,GAAKsI,SAAUmJ,GAJ1C,OAKX,wBAEN,cAAC,IAAD,CACIxD,GAAG,WACH4E,IAA0B,aAArBF,GAAkCE,GAAa,KACpDG,QAAS,kBAAMJ,GAAoB,aACnCK,YAAU,EACV7K,UAAU,iBACVO,YAAa,gDAAU,cAAC,GAAD,CAAcmH,OAAQxL,EAAgByL,WAAY6B,OACzEtJ,SAAUsJ,EACVhJ,YAAY,WACZH,MAAOlI,KAEX,cAAC,IAAD,CACI6H,UAAU,YACVE,SA3MS,SAACC,GAAD,OAAYgI,GAAa,SAAAF,GAClD,OAAO,2BAAKA,GAAZ,IAAyB7O,eAAgB+G,EAAEC,OAAOyG,cA2MlCA,QAASzN,GAHb,6BAOA,cAAC,IAAD,CAAOmH,YAAY,UACfsF,GAAG,UACH4E,IAA0B,YAArBF,GAAiCE,GAAa,KACnDG,QAAS,kBAAMJ,GAAoB,YACnCK,YAAU,EACV7K,UAAU,gBACVE,SAAUwJ,EACVlJ,YAAY,UACZH,MAAOhH,KAEX,eAAC,IAAM4G,MAAP,CAAaD,UAAU,oDAAoDK,MAAOhI,GAAS6H,SAAUuJ,EAArG,UACI,uBAAOzJ,UAAU,yCAAjB,SACI,6CAEHqE,WAIb,qBAAKrE,UAAU,mBAAf,SACI,cAAC,EAAD,CACI5C,eAAgB,EAChBC,sBAAuB3E,GACvB+E,gBAAiBA,EACjBH,iBAAkB4K,EAClBxK,eAAgBoL,EAChBnL,cAAeA,EANnB,SAQKiM,GACK,cAAC,EAAD,CAAiBpH,aAAczK,GAAUmI,SAAU6I,IACnD,8BAvJT,WC9LJmC,GAA8B,CACvC,CAAEC,SAAU,GAAIC,WAAY,GAAIC,UAAW,GAC3C,CAAEF,SAAU,GAAIC,WAAY,GAAIC,UAAW,GAC3C,CAAEF,SAAU,GAAIC,WAAY,GAAIC,UAAW,GAC3C,CAAEF,SAAU,GAAIC,WAAY,GAAIC,UAAW,GAC3C,CAAEF,SAAU,GAAIC,WAAY,GAAIC,UAAW,IAC3C,CAAEF,SAAU,EAAGC,WAAY,EAAGC,UAAW,IACzC,CAAEF,SAAU,EAAGC,WAAY,EAAGC,UAAW,KAEhCC,GAA6B,CACtC,CAAExS,MAAO,IAAK8M,IAAK,IAAKD,KAAM,OAC9B,CAAE7M,MAAO,IAAK8M,IAAK,IAAKD,KAAM,OAC9B,CAAE7M,MAAO,IAAK8M,IAAK,IAAKD,KAAM,OAC9B,CAAE7M,MAAO,IAAK8M,IAAK,IAAKD,KAAM,OAC9B,CAAE7M,MAAO,IAAK8M,IAAK,IAAKD,KAAM,OAC9B,CAAE7M,MAAO,IAAK8M,IAAK,IAAKD,KAAM,OAC9B,CAAE7M,MAAO,IAAK8M,IAAK,IAAKD,KAAM,QAQrB4F,GAA+B,CACxC,CAAEJ,SAAU,MAAOC,WAAY,MAAOC,UAAW,GACjD,CAAEF,SAAU,MAAOC,WAAY,MAAOC,UAAW,IAExCG,GAA8B,CACvC,CAAE1S,MAAO,IAAK8M,IAAK,MAAOD,KAAM,OAChC,CAAE7M,MAAO,IAAK8M,IAAK,MAAOD,KAAM,QAGvB8F,GAAyB,CAClC,CAAEN,SAAU,MAAOC,WAAY,MAAOC,UAAW,GACjD,CAAEF,SAAU,MAAOC,WAAY,MAAOC,UAAW,KAExCK,GAAwB,CACjC,CAAE5S,MAAO,IAAK8M,IAAK,IAAKD,KAAM,IAC9B,CAAE7M,MAAO,IAAK8M,IAAK,IAAKD,KAAM,KAuBrBgG,GAAwC,CACjDC,MAAO,CACHhG,IAAK,IACLD,KAAM,GACNkG,YAAa,CACTlH,KAAM,MACNmH,aAAc,KACdC,iBAAkB,MAEtBC,cAAe,GACfC,eAAgB,EAChBC,cAAe,GACfC,eAAgB,IAChBC,WAAY,EACZC,UAAW,CACPC,WAAY,EACZ3H,KAAM,GACN4H,YAAa,IAEjBC,UAAW,GAEfC,OAAQ,CACJ7G,IAAK,MACLD,KAAM,GACNkG,YAAa,CACTlH,KAAM,MACNmH,aAAc,KACdC,iBAAkB,MAEtBC,cAAe,GACfC,eAAgB,EAChBC,cAAe,GACfC,eAAgB,IAChBC,WAAY,EACZC,UAAW,CACPC,WAAY,EACZ3H,KAAM,GACN4H,YAAa,IAEjBC,UAAW,GAEfE,MAAO,CACH9G,IAAK,IACLD,KAAM,IACNkG,YAAa,CACTlH,KAAM,GACNmH,aAAc,GACdC,iBAAkB,GAEtBC,cAAe,GACfC,eAAgB,IAChBC,cAAe,GACfC,eAAgB,EAChBC,WAAY,IACZC,UAAW,CACPC,WAAY,EACZ3H,KAAM,GACN4H,YAAa,IAEjBC,UAAW,KCpING,GAAoB,CAC7B,CAAE/G,IAAK,IAAKD,KAAM,GAAI7M,MAAO,GAAIC,OAAQ,IACzC,CAAE6M,IAAK,IAAKD,KAAM,IAAK7M,MAAO,GAAIC,OAAQ,IAC1C,CAAE6M,IAAK,IAAKD,KAAM,IAAK7M,MAAO,GAAIC,OAAQ,IAC1C,CAAE6M,IAAK,IAAKD,KAAM,GAAI7M,MAAO,GAAIC,OAAQ,IACzC,CAAE6M,IAAK,EAAGD,KAAM,EAAG7M,MAAO,EAAGC,OAAQ,GACrC,CAAE6M,IAAK,IAAKD,KAAM,IAAK7M,MAAO,GAAIC,OAAQ,IAC1C,CAAE6M,IAAK,IAAKD,KAAM,GAAI7M,MAAO,GAAIC,OAAQ,IACzC,CAAE6M,IAAK,IAAKD,KAAM,IAAK7M,MAAO,GAAIC,OAAQ,IAC1C,CAAE6M,IAAK,IAAKD,KAAM,IAAK7M,MAAO,GAAIC,OAAQ,KAGjC6T,GAER,CACDC,KAAM,CACFC,IAAK,CACDnH,KAAM,IAGdoH,SAAU,CACND,IAAK,CACDnH,KAAM,KCwBLqH,GAAY,SACrBhO,EACAqB,EACA2F,EACAiH,GAEA,GAAIjO,EAAK,CACL,IAAMkO,EAAY,UAAG7M,GAAQ2K,MAAM,IAC/BmC,EAAa,EAEjBD,EAAUE,SAAQ,SAAAC,GACdF,GAAyB,MAAVE,EAA+C,IAA/BrO,EAAIsO,YAAYD,GAAOvU,MAAekG,EAAIsO,YAAYD,GAAOvU,SAEhG,IAAIyU,EAAUvH,EAAOmH,EAAa,EAElCD,EAAUE,SAAQ,SAAAC,GACdrO,EAAIwO,SAASH,EAAiB,MAAVA,EAAgBE,EAAU,EAAIA,EAASN,GAC3DM,GAAsB,MAAVF,EAA+C,IAA/BrO,EAAIsO,YAAYD,GAAOvU,MAAekG,EAAIsO,YAAYD,GAAOvU,WAKxF2U,GAAa,SACtBzO,EACA0O,GAKE,IAJFC,EAIC,wDAHDvR,EAGC,wDAFDwR,EAEC,uDAFsB1C,GACvB2C,EACC,uDADqBvC,GAEhBwC,EAAoB9Q,EAAa0Q,GACnCK,EAAkB,EACtB,GAAI/O,EAAK,CAAC,IAAD,aA2BL,IA1BA,IAAMgP,EAA8C,CAChD,EAAK,IACL,EAAK,IACL,EAAK,KAJJ,EAUDL,EACE,CACE5Q,KAAM+Q,EACNhR,gBAAiB,GACjBJ,SAAU,IACVP,EAAY2R,EAAmB1R,GAR7BC,EAPL,EAODU,KACiBH,EARhB,EAQDE,gBACUR,EATT,EASDI,SAQEuR,GAAuB3R,EAAeZ,OAAS,EAAI,EAAI,IAAMkB,EAAsBlB,OAAS,EAAI,EAAI,GACpGwS,EAAiB7R,EAAW2O,MAAM,MAClCmD,EAAe,SAEfC,EAAgB,WAGhBC,EAAY,IAAIC,OAAJ,YAAgBF,GAAhB,OAFM,OAEN,MAAqD,KACjEG,EAAmB,IAAID,OAAOF,EAAe,KAzB9C,qBA4B2CR,EAASG,GAA7C5C,EA5BP,EA4BOA,SAAUC,EA5BjB,EA4BiBA,WAAYC,EA5B7B,EA4B6BA,UA5B7B,EA6B4BwC,EAASE,GAA9BpI,EA7BP,EA6BOA,KAAM7M,EA7Bb,EA6BaA,MAAO8M,EA7BpB,EA6BoBA,IACf4I,EAAYtU,IACduU,EAAiB,IAEfC,EAAU7T,KAAKP,IAAI4T,EAAexS,OAAQ2P,GAEhDrM,EAAI2P,KAAJ,UAAcvS,EAAW,SAAW,GAApC,YAA0C+O,EAA1C,iBACAnM,EAAI4P,UAAY,OA0EhB,IAxEA,IAAMC,EAAa,SAACC,GAChB,IAAMC,EAAW/P,EAAI2P,KACfK,EAAuB,KAAX7D,EAClBnM,EAAI2P,KAAOI,EAASpS,QAAQ,aAAc,UAAUA,QAAzC,UAAoDwO,GAApD,UAAmE6D,IAC9EF,IACA9P,EAAI2P,KAAOI,GAIXE,EAA+D,GA+D5DT,EAAUjT,mBAAqB,GAAG,CACrC,GAAIiT,EAAUjT,mBAAqB,EAAG,CAElCkT,EAAiBD,EAAUxT,YAC3B,MAIA,IArEJiU,EAAW,GAEJf,EAAegB,QAAO,SAACC,EAAMC,GAShC,IAPA,IAAMC,EAAgBb,EAAUxT,YAAc,IACxCsU,EAAYxW,EAAQuW,EACpBE,EAAgBH,EAAKpE,MAAMqD,GAC7BmB,EAAmB,EACnBC,EAA0B,GAC1BtC,EAAa,EAPwB,WAShCuC,GACL,IAAIC,EAAa,EAejB,GATIJ,EAAcG,KAASvB,EAAcwB,EA/C/B,GA+CgEN,EAIjEd,EAAiBqB,KAAKL,EAAcG,IACzCb,GAAW,WACPc,EAAa3Q,EAAIsO,YAAYiC,EAAcG,IAAM5W,SAElD6W,EAAa3Q,EAAIsO,YAAYiC,EAAcG,IAAM5W,MACpDqU,EAAawC,EAAaL,EAAW,CAErC,IAAMO,EAAaJ,EAAc3F,KAAK,IAAImB,OAEpC6E,EAA6BD,EAAW7E,MAAMmD,GACpDc,EAASzL,KAAK,CACVvG,KAAM4S,EACN/W,MAAOgX,EAA2BZ,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOnQ,EAAIsO,YAAY8B,GAAMtW,QAAO,GA/D3F,IAgEKgX,EAA2BpU,OAAS,GAAyB2T,EACpEU,QAAQ,IAEZ5C,EAAawC,EACbF,EAAgB,CAACF,EAAcG,IAC/BF,GAAoB,OAEpBrC,GAAcwC,EACdF,EAAcjM,KAAK+L,EAAcG,KAhChCA,EAAM,EAAGA,EAAMH,EAAc7T,OAAQgU,IAAQ,EAA7CA,GAoCT,IAAMG,EAAaJ,EAAc3F,KAAK,IAAImB,OACpC6E,EAA6BD,EAAW7E,MAAMmD,GAQpD,OAPAc,EAASzL,KAAK,CACVvG,KAAM4S,EACN/W,MAAOgX,EAA2BZ,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOnQ,EAAIsO,YAAY8B,GAAMtW,QAAO,GAhFnF,IAiFHgX,EAA2BpU,OAAS,GAAyB2T,EACpEU,QAAQ,IAGLZ,EAAOK,IACf,GAAKvB,GAYYS,EAEZF,EAAU1T,iBACP,CACH,GAA8B,MAA1B0T,EAAUxT,YAAsB,MAC/ByT,EAAiBD,EAAU7T,iBAM5C,IAAMqV,EAAa,SAAChR,EAA+BgH,EAAciH,GAC7DjO,EAAIiR,YACJjR,EAAIkR,IAAIlK,EAAO,EAAGiH,EAAW,IAAK,IAAK,EAAG,EAAIpS,KAAKsV,IAAI,GACvDnR,EAAIoR,OACJpR,EAAIqR,UAAY,EAChBrR,EAAIsR,YAAc,UAClBtR,EAAIuR,UAER,KAAI9B,GAAc,UAAIT,EAAoB,GAAD,OAAIE,EAAexS,gBAA1C,QAAuDsS,EAAoB,KAEtF,CACA,OAAHhP,QAAG,IAAHA,KAAKwR,UAAU,EAAG,EAAG,IAAK,KAC1B,IAAIvD,EAAWrH,EAAMwF,EACrB,GAAI9O,EAAeZ,OAAS,EAAG,CAC3B,IAAI+U,EAAczR,EAAIsO,YAAYhR,GAAgBxD,MAC9CuW,EAAgBxU,KAAKR,IAAIvB,EAAQ2X,EAAa,GAElDzR,EAAI0R,MAAMrB,EAAe,GACzBrQ,EAAIwO,SAASlR,EAAgBqJ,EAAO0J,EAAepC,GACnDA,GAAY7B,EACZpM,EAAI0R,MAAM,EAAIrB,EAAe,GAGjC,IAAMsB,EAAelC,EAAiB,IAsFtC,GArFAQ,EAAS7B,SAAQ,YAIV,IAHHnQ,EAGE,EAHFA,KACOwT,EAEL,EAFF3X,MAGMuW,EADJ,EADFU,OAGMlV,KAAKR,IAAIsW,EAAc,GACvB7X,EAAQ2X,EAEd,GAAIpB,GAAiB,EAAG,CACpBrQ,EAAI0R,MAAMrB,EAAe,GACzB,IAAMuB,EAAW,IAAItC,OAAJ,YAAgBH,GAAhB,OAA+BC,EAA/B,MAAkD,KAC9CnR,EAAK+N,MAAM4F,GAEnB1B,QAAO,SAACC,EAAM9L,EAAKJ,GAC5B,IAAI+C,EAAOmJ,EAqBX,OAlBIlM,EAAQ,IAAM,GACdjE,EAAIwO,SAASnK,EAAK2C,EAAOqJ,EAAepC,GACxCjH,GAAQhH,EAAIsO,YAAYjK,GAAKvK,MAAQuW,GAGjChM,IAAQ8K,GACRnP,EAAI0R,MAAM,EAAIrB,EAAe,GAC7BW,EAAWhR,EAAKgH,EAAMiH,GACtBjH,GAAQ,GACRhH,EAAI0R,MAAMrB,EAAe,IAEzBR,GAAW,WACP7P,EAAIwO,SAASnK,EAAK2C,EAAOqJ,EAAepC,GACxCjH,GAAQhH,EAAIsO,YAAYjK,GAAKvK,MAAQuW,KAK1CrJ,IACRL,GACHsH,GAAY7B,EACZpM,EAAI0R,MAAM,EAAIrB,EAAe,OAC1B,CACH,IAAMuB,EAAW,IAAItC,OAAJ,YAAgBH,GAAhB,OAA+BC,EAA/B,OAAmD,KAC9DyC,EAAqB5T,EAAK+N,MAAM4F,GACtC5R,EAAI0R,MAAM,EAAG,GACb,IAAII,EAAgB,EAChBC,EAAa,EAEjBF,EAAmBzD,SAAQ,SAAApT,GACT,MAAVA,EAAe+W,GAAc,EACxB/W,IAAUmU,EAAc2C,GAAiB,GACzCvC,EAAiBqB,KAAK5V,GAC3B6U,GAAW,kBAAMiC,GAAiB9R,EAAIsO,YAAYtT,GAAOlB,SACtDgY,GAAiB9R,EAAIsO,YAAYtT,GAAOlB,SAGnD,IAAMkY,EAAaD,EAAa,GAAKjY,EAAQgY,GAAiBC,EAAa,EAE3EF,EAAmB3B,QAAO,SAACC,EAAM9L,EAAKJ,GAClC,IAAI+C,EAAOmJ,EAqBX,OAlBIlM,EAAQ,IAAM,GACdjE,EAAIwO,SAASnK,EAAK2C,EAAMiH,GACxBjH,GAAQhH,EAAIsO,YAAYjK,GAAKvK,OAGzBuK,IAAQ8K,GACR6B,EAAWhR,EAAKgH,EAAMiH,GACtBjH,GAAQ,IACO,MAAR3C,EACP2C,GAAQgL,EAERnC,GAAW,WACP7P,EAAIwO,SAASnK,EAAK2C,EAAMiH,GACxBjH,GAAQhH,EAAIsO,YAAYjK,GAAKvK,SAKlCkN,IACRL,GACHsH,GAAY7B,MAIhBxO,EAAsBlB,OAAS,EAAG,CAClC,IAAI+U,EAAczR,EAAIsO,YAAY1Q,GAAuB9D,MACrDuW,EAAgBxU,KAAKR,IAAIvB,EAAQ2X,EAAa,GAElDzR,EAAI2P,KAAJ,UAAcxD,EAAd,iBACAnM,EAAI0R,MAAMrB,EAAe,GACzBrQ,EAAIwO,SAAS5Q,EAAuB+I,EAAO0J,EAAepC,GAC1DA,GAAY7B,EACZpM,EAAI0R,MAAM,EAAIrB,EAAe,GAEjC,cA9GAtB,GAAmB,GA/GrBA,EAAkBH,EAASlS,QAAQ,kBA6NjC,MAIR,MAAM,CAAN,EAAOqS,GA5PF,qCA8PT,OAAOA,GClTEkD,GAA0B,SACnCjS,EACAkS,EACAC,EACAnL,EACAiH,GAEA,GAAIjO,EAAK,CACLA,EAAI4P,UAAY,OAChB,IAAMwC,EAAWF,EAAIlG,MAAM,IACvBqG,EAAUrL,EAEdoL,EAAShE,SAAQ,SAAAzI,GACb3F,EAAIwO,SAAS7I,EAAM0M,EAASpE,GAC5BoE,GAAWrS,EAAIsO,YAAY3I,GAAM7L,OAAS,EAAKqY,EAAqB,QAInEG,GAA2B,SACpCtS,EACAkS,EACAC,EACAnL,EACAiH,GAEA,GAAIjO,EAAK,CACLA,EAAI4P,UAAY,QAChB,IAAMwC,EAAWF,EAAIlG,MAAM,IACvBuG,EAAWvL,EAOf,OALAoL,EAAShE,SAAQ,SAACoE,EAAGvO,GACjB,IAAM0B,EAAOyM,EAASA,EAAS1V,OAASuH,EAAQ,GAChDjE,EAAIwO,SAAS7I,EAAM4M,EAAUtE,GAC7BsE,GAAYvS,EAAIsO,YAAY3I,GAAM7L,OAAS,EAAKqY,EAAqB,MAElEI,EAEX,OAAOvL,GC1CEyL,GAAkB,SAC3BzS,EACA0O,GAEA,GAAI1O,EAAK,CACLA,EAAI2P,KAAO,2BAEX,IAHK,EDzBoB,SAC7B3P,EACA0O,EACAgE,EACAC,GAEA,IAAMC,EAAkBlE,EAAQ1C,MAAM0G,GAChCG,EAAgBD,EAAgB5O,KAAI,SAAAhJ,GAAK,OAAIgF,EAAIsO,YAAYtT,GAAOlB,SACpEgZ,EAAc9S,EAAIsO,YAAYoE,GAAQ5Y,MACtCiZ,EAAwBF,EAAc3C,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,IAAM,GAC1E4C,EAAe,CACjBJ,kBACAC,gBACAC,cACAC,wBACA1C,cAAe,GAQnB,OALI0C,EAAwB,IAExBC,EAAa3C,cAAgBxU,KAAKR,KAAKsX,GAAYE,EAAcnW,OAAS,GAAKoW,GAAeC,EAAuB,IAGlHC,ECWCC,CAAkBjT,EAAK0O,EANC,OAM6B,KAJrDkE,EALC,EAKDA,gBACAC,EANC,EAMDA,cACAC,EAPC,EAODA,YACAzC,EARC,EAQDA,cAGAA,EAAgB,GAChBrQ,EAAI4P,UAAY,OAChB5P,EAAI0R,MAAMrB,EAAe,GACzBuC,EAAgB1C,QAAO,SAACC,EAAM9L,EAAKJ,GAE/BjE,EAAIwO,SAASnK,EAAK8L,EAAOE,EAAe,KAExC,IAAI6C,EAAW/C,EAAO0C,EAAc5O,GAASoM,EAU7C,OATIpM,EAAQ2O,EAAgBlW,OAAS,IAEjCsD,EAAI0R,MAAM,EAAIrB,EAAe,GAE7BrQ,EAAIwO,SApBY,OAoBkB0E,EAAU,KAC5CA,GAAYJ,EAEZ9S,EAAI0R,MAAMrB,EAAe,IAEtB6C,IACR,KACHlT,EAAI0R,MAAM,EAAIrB,EAAe,KAE7BrQ,EAAI4P,UAAY,QAChB0C,GAAyBtS,EAAK0O,GAAU,IAAM,IAAM2B,EAAe,MAEvErQ,EAAI4P,UAAY,SAIXuD,GAAS,SAClBnT,EACAoT,EACApM,EACAiH,GAEA,GAAIjO,EAAK,CACLA,EAAI4P,UAAY,OAChB,IAAMW,EAAgB,UAAG6C,GAASpH,MAAM,KAEpCmC,EAAaoC,EAAcL,QAAO,SAACC,EAAMC,EAAMnM,GAC/CjE,EAAI2P,KAAO,2BACX,IAAI0D,EAAYlD,EAAOnQ,EAAIsO,YAAY8B,GAAMtW,MAO7C,OALImK,EAAQsM,EAAc7T,OAAS,IAC/BsD,EAAI2P,KAAO,cACX0D,GAAarT,EAAIsO,YAAY,KAAKxU,OAG/BuZ,IACR,GAEH,GAAIlF,EAAa,EAAG,CAChB,IAAMkC,EAAgBxU,KAAKR,IAAI,MAAQ8S,EAAY,GAEnDnO,EAAI0R,MAAMrB,EAAe,GACzBE,EAAcL,QAAO,SAACC,EAAMC,EAAMnM,EAAOqP,GACrC,IAAMC,EAAUD,EAAIA,EAAI5W,OAAS,EAAIuH,GACjCiP,EAAW/C,EAWf,OAVAnQ,EAAI2P,KAAO,2BACXuD,GAAYlT,EAAIsO,YAAYiF,GAASzZ,MAAQuW,EAC7CrQ,EAAIwO,SAAS+E,EAASL,EAAW7C,EAAepC,GAE5ChK,EAAQsM,EAAc7T,OAAS,IAC/BsD,EAAI2P,KAAO,mBACXuD,GAAYlT,EAAIsO,YAAY,KAAKxU,MAAQuW,EACzCrQ,EAAIwO,SAAS,IAAK0E,EAAW7C,EAAepC,IAGzCiF,IACRlM,EAAO,OACVhH,EAAI0R,MAAM,EAAIrB,EAAe,MCtG5BmD,GAAsB,SAC/BxT,EACA0O,EACA+E,EACAC,GAEA,OAAO,SAAC1M,GACJ,GAAIhH,EAAK,CAAC,IAEGiO,EAELwF,EAFA7M,IAFC,EAID6M,EADA5G,YAAqB8G,EAHpB,EAGchO,KAAmBoH,EAHjC,EAGiCA,iBAEhC6G,EAAgC,SAAdF,EAAuB,GAAK,EAKpD,OAHA1T,EAAI2P,KAAJ,eAAmBgE,EAAnB,uBACA3T,EAAI4P,UAAY8D,EAChB1T,EAAIwO,SAASE,EAAS1H,EAAMiH,EAAWlB,GAChC/F,EAAOhH,EAAIsO,YAAYI,GAAS5U,MAAQ8Z,EAEnD,OAAO5M,IAGF6M,GAAwB,SACjC7T,EACAyT,EACAC,GAEA,OAAO,SAAC1M,GACJ,OAAIhH,EAIOgH,EAHeyM,EAAdjG,WAC8B,SAAdkG,EAAuB,GAAK,GAIjD1M,IAGF8M,GAA2B,SACpC9T,EACA0O,EACA+E,EACAC,GAEA,OAAO,SAAC1M,GACJ,GAAIhH,EAAK,CAAC,IACOiO,EAA4CwF,EAAjD7M,IAA8BkG,EAAmB2G,EAAlC5G,YAAeC,aAChC8G,EAAgC,SAAdF,EAAuB,GAAK,EAKpD,OAHA1T,EAAI2P,KAAJ,eAAmB7C,EAAnB,uBACA9M,EAAI4P,UAAY8D,EAChB1T,EAAIwO,SAASE,EAAS1H,EAAMiH,GACrBjH,EAAOhH,EAAIsO,YAAYI,GAAS5U,MAAQ8Z,EAEnD,OAAO5M,IAGF+M,GAAmB,SAC5B/T,EACA0O,GAIE,IAHFqC,EAGC,wDAFD0C,EAEC,uCADDC,EACC,uCAEQzF,EAOLwF,EAPA7M,IAFH,EASG6M,EANApG,UAAaC,EAHhB,EAGgBA,WAAkB0G,EAHlC,EAG4BrO,KAAiB4H,EAH7C,EAG6CA,YAC1CN,EAKAwG,EALAxG,eACAD,EAIAyG,EAJAzG,cACAG,EAGAsG,EAHAtG,eACAD,EAEAuG,EAFAvG,cACAE,EACAqG,EADArG,WAEEwG,EAAgC,SAAdF,EAAuB,GAAK,EAC9CO,EAAoB,SACtBjU,EACAkU,GAEA,IAAIC,EAAcD,EAclB,OAbAlU,EAAI2P,KAAJ,eAAmBrC,EAAnB,uBACAtN,EAAIwO,SAAS,IAAK2F,EAAalG,GAC/BkG,GAAenU,EAAIsO,YAAY,KAAKxU,MAAQ8Z,EAE5C5T,EAAI2P,KAAJ,uBAA2BqE,EAA3B,uBACAhU,EAAI0R,MAAM,IAAM,GAChB1R,EAAIwO,SAAS,IAAK2F,EAAc,IAAMlG,GACtCkG,GAA4C,IAA7BnU,EAAIsO,YAAY,KAAKxU,MAAe8Z,EACnD5T,EAAI0R,MAAM,EAAI,IAAM,GAEpB1R,EAAI2P,KAAJ,eAAmBpC,EAAnB,uBACAvN,EAAIwO,SAAS,IAAK2F,EAAalG,GAC/BkG,GAAenU,EAAIsO,YAAY,KAAKxU,MAAQ8Z,GAIhD,OAAO,SAACjN,GACJ,IAAIwN,EAAcxN,EAClB,OAAI3G,GACAA,EAAI4P,UAAY8D,EAEX3C,GAAwB,UAAd2C,IAAuBS,EAAcF,EAAkBjU,EAAKmU,IAC3EzF,EACK1C,MAAM,IACNoC,SAAQ,SAACoE,EAAGvO,EAAOqP,GAChB,IAAM3N,EAAqB,SAAd+N,EAAuBJ,EAAIrP,GAASqP,EAAIA,EAAI5W,OAAS,EAAIuH,GACtE,GAAI,QAAQ2M,KAAKjL,GACb3F,EAAI2P,KAAJ,eAAmB3C,EAAnB,uBACAhN,EAAI0R,MAAMzE,EAAgB,GAC1BjN,EAAIwO,SAAS7I,EAAMwO,EAAclH,EAAgBgB,GACjDkG,GAAenU,EAAIsO,YAAY3I,GAAM7L,MAAQmT,EAAiB2G,EAC9D5T,EAAI0R,MAAM,EAAIzE,EAAgB,QAC3B,GAAI,KAAK2D,KAAKjL,GACjB3F,EAAI2P,KAAJ,eAAmBzC,EAAnB,uBACAlN,EAAI0R,MAAMtE,EAAY,GACtBpN,EAAIwO,SAAS7I,EAAMwO,EAAc/G,EAAYa,GAC7CkG,GAAenU,EAAIsO,YAAY3I,GAAM7L,MAAQsT,EAAawG,EAC1D5T,EAAI0R,MAAM,EAAItE,EAAY,OACvB,CACH,IAAMgH,EAAYzO,EAAKb,oBACvB9E,EAAI2P,KAAJ,eAAmBzC,EAAnB,uBACAlN,EAAI0R,MAAMvE,EAAgB,GAC1BnN,EAAIwO,SAAS4F,EAAWD,EAAchH,EAAgBc,GACtDkG,GAAenU,EAAIsO,YAAY8F,GAAWta,MAAQqT,EAAiByG,EACnE5T,EAAI0R,MAAM,EAAIvE,EAAgB,OAGrC4D,GAAwB,SAAd2C,IAAsBS,EAAcF,EAAkBjU,EAAKmU,IACnEA,GAEJA,ICnITE,GAGD,GAEQC,GAAc,uCAAG,WAC1BtU,EACAyB,EACA8S,EACAC,GAJ0B,SAAAC,EAAA,yDAMrBzU,EANqB,yCAMT,IAAI0U,SAAiB,SAAAC,GAAO,OAAIA,GAAQ,OAN/B,gCAOnB,IAAID,SAAiB,SAAAC,GAAY,IAAD,EACnC,IAAqC,KAAjC,UAAAN,GAAc5S,UAAd,eAAuBmT,OAAgB,CACvC,IAAMjV,EAAM0U,GAAc5S,GAAQ3B,MAC9B+U,EAA4B,kBAAPN,EAAkBA,EAAKA,EAAG5U,GAC/CmV,EAA4B,kBAAPN,EAAkBA,EAAKA,EAAG7U,GACnDK,EAAIe,UAAUpB,EAAKkV,EAAaC,GAChCH,GAAQ,OACL,CACH,IAAMhV,EAAM,IAAIoV,MAChBpV,EAAIuD,IAAMgC,aAAyBzD,EACnC9B,EAAIqV,OAAS,WACT,IAAIH,EAA4B,kBAAPN,EAAkBA,EAAKA,EAAG5U,GAC/CmV,EAA4B,kBAAPN,EAAkBA,EAAKA,EAAG7U,GACnDK,EAAIe,UAAUpB,EAAKkV,EAAaC,GAChCT,GAAc5S,GAAQmT,OAAQ,EAC9BD,GAAQ,IAEZhV,EAAIsV,QAAU,WACVN,GAAQ,IAEZN,GAAc5S,GAAU,CACpB3B,MAAOH,EACPiV,OAAO,QA7BO,2CAAH,4DAmCdM,GAAsB,uCAAG,WAClClV,EACAyB,EACA8S,EACAC,EACAW,EAAYC,GALsB,SAAAX,EAAA,yDAO7BzU,EAP6B,yCAOjB,IAAI0U,SAAiB,SAAAC,GAAO,OAAIA,GAAQ,OAPvB,gCAQ3B,IAAID,SAAiB,SAAAC,GAAY,IAAD,EACnC,IAAqC,KAAjC,UAAAN,GAAc5S,UAAd,eAAuBmT,OAAgB,CACvC,IAAMjV,EAAM0U,GAAc5S,GAAQ3B,MAC9B+U,EAA4B,kBAAPN,EAAkBA,EAAKA,EAAG5U,GAC/CmV,EAA4B,kBAAPN,EAAkBA,EAAKA,EAAG7U,GACnDK,EAAIe,UAAUpB,EAAKkV,EAAaC,EAAaK,EAAIC,GACjDT,GAAQ,OACL,CACH,IAAMhV,EAAM,IAAIoV,MAChBpV,EAAIuD,IAAMgC,aAAyBzD,EACnC9B,EAAIqV,OAAS,WACT,IAAIH,EAA4B,kBAAPN,EAAkBA,EAAKA,EAAG5U,GAC/CmV,EAA4B,kBAAPN,EAAkBA,EAAKA,EAAG7U,GACnDK,EAAIe,UAAUpB,EAAKkV,EAAaC,EAAaK,EAAIC,GACjDf,GAAc5S,GAAQmT,OAAQ,EAC9BD,GAAQ,IAEZhV,EAAIsV,QAAU,WACVN,GAAQ,IAEZN,GAAc5S,GAAU,CACpB3B,MAAOH,EACPiV,OAAO,QA9Be,2CAAH,gE,kDC6kBpBS,OArkBf,WAAgB,IAAD,EhB9Ca1a,EgB8Cb,EAC+BiE,oBAAS,GADxC,mBACJ0W,EADI,KACYC,EADZ,OAEe3W,mBAAS,IAFxB,mBAEJ4W,EAFI,KAEGC,EAFH,OAGoB7W,mBAAerG,GAHnC,mBAGJ0Q,EAHI,KAGSK,EAHT,KAILhL,EAAmBc,iBAA0B,MAC7CsW,EAAgBtW,iBAA0B,MAC1CuW,EAAiBvW,iBAA0B,MAC3CwW,EAAexW,iBAA0B,MACzCyW,EAAwBzW,iBAA0B,MAClD0W,EAAqB1W,iBAA0B,MAC/C2W,EAAyB3W,iBAA0B,MACnD4W,EAA0B5W,iBAA0B,MACpD6W,EAAgB7W,iBAA0B,MAC1C8W,EAAkB9W,iBAA0B,MAC5C+W,EAAgB/W,iBAA0B,MAC1CgX,EAAqBhX,iBAA0B,MAC/CiX,EAAcjX,iBAA0B,MACxCkX,EAAWlX,iBAA0B,MACrCmX,EAAcnX,iBAA0B,MACxCoX,EAAkBpX,iBAA0B,MAC5CqX,EAAarX,iBAA0B,MACvCsX,EAAatX,iBAA0B,MAGzC1G,EAYAuQ,EAZAvQ,MAAOU,EAYP6P,EAZO7P,KACPJ,EAWAiQ,EAXAjQ,KAAMC,EAWNgQ,EAXMhQ,cAAeC,EAWrB+P,EAXqB/P,UACrBS,EAUAsP,EAVAtP,YACAb,EASAmQ,EATAnQ,OACAD,GAQAoQ,EARApQ,aACAS,GAOA2P,EAPA3P,WAAYC,GAOZ0P,EAPY1P,gBAAiBE,GAO7BwP,EAP6BxP,WAAYD,GAOzCyP,EAPyCzP,UACzChB,GAMAyQ,EANAzQ,IAAKI,GAMLqQ,EANKrQ,IAAKG,GAMVkQ,EANUlQ,SACVN,GAKAwQ,EALAxQ,UACAE,GAIAsQ,EAJAtQ,UACAwB,GAGA8O,EAHA9O,KACAD,GAEA+O,EAFA/O,OACAf,GACA8P,EADA9P,SAAUiB,GACV6O,EADU7O,eAAgBC,GAC1B4O,EAD0B5O,QAAShB,GACnC4P,EADmC5P,QAEjC+D,GhBlFgB,YADEzC,EgBmFKsO,GhBlFjBvQ,OAAsBmC,EAAaF,GgBmFzCgQ,GAAQjQ,EAASuO,GACjB2B,GAAShQ,EAAUqO,GACnB4B,GAAYhQ,EAAaoO,GACzB0N,GAAe,SAEfC,GAAkBxX,iBAA2C,CAC/D1G,MAAO,kBAAMgc,QAAQC,WACrBxa,KAAM,kBAAMua,QAAQC,WACpBlc,UAAW,kBAAMic,QAAQC,WACzBkC,aAAc,kBAAMnC,QAAQC,WAC5Btb,QAAS,kBAAMqb,QAAQC,aAhDhB,GAkDqC/V,mBAAS,GAlD9C,qBAkDJkY,GAlDI,MAkDcC,GAlDd,MAoDXlX,qBAAU,WAAO,IAAD,EACNG,EAAG,UAAG2V,EAAe/V,eAAlB,aAAG,EAAwBK,WAAW,MAE/C2W,GAAgBhX,QAAQlH,MAAxB,sBAAgC,gCAAA+b,EAAA,6DACzB,OAAHzU,QAAG,IAAHA,KAAKwR,UAAU,EAAG,EAAG,IAAK,KACpBwF,EAAWlc,EAAapC,GACxBue,EAAmB,WAAT7d,EAHY,SAKtBkb,GAAetU,EAAD,mCAAkCgX,EAAlC,QAAkD,EAAG,GAL7C,WAMxBC,EANwB,wBAOhBnJ,EAAQF,GAAaxU,GAArB0U,IAPgB,SASlBwG,GAAetU,EAAD,uCAAsC5G,EAAtC,QAAkD0U,EAAInH,KAAM,KATxD,wBAUlB2N,GAAetU,EAAD,0CAAyC5G,EAAzC,QAAqD,EAAG,KAVpD,8CAajC,CAACA,EAAMV,IAEVmH,qBAAU,WAAO,IAAD,EACNG,EAAG,UAAG4V,EAAahW,eAAhB,aAAG,EAAsBK,WAAW,MACvCiX,EAAa5Y,EAAiBsB,QAChCsX,GAAclX,IACdA,EAAIwR,UAAU,EAAG,EAAG,IAAK,KACrBlY,GACA0G,EAAIe,UAAUmW,EAAY,GAAI,IAAK,IAAK,KAExClX,EAAIe,UAAUmW,EAAY,GAAI,IAAK,IAAK,QAIjD,CAAC5d,GAAYwd,KAEhBjX,qBAAU,WAAO,IAAD,EACNG,EAAG,UAAG6V,EAAsBjW,eAAzB,aAAG,EAA+BK,WAAW,MAEtD2W,GAAgBhX,QAAQiX,aAAxB,sBAAuC,gCAAApC,EAAA,yDAChC,OAAHzU,QAAG,IAAHA,KAAKwR,UAAU,EAAG,EAAG,IAAK,KACpByF,EAAmB,WAAT7d,EAEV4d,EAAWlc,EAAapC,IAC1BY,IAAesR,GALgB,oBAM1BD,GAN0B,gCAMb2J,GAAetU,EAAD,iDAAgDgX,EAAhD,QAAgE,EAAG,GANpE,uBAOzB1C,GAAetU,EAAD,4CAA2C2W,GAA3C,QAA+D,EAAG,GAPvD,WAQ3BM,EAR2B,kCAQZ3C,GAAetU,EAAD,4CAA2C2W,GAA3C,YAA2Dvd,EAA3D,QAAuE,EAAG,GAR5E,eAW7B+d,EAAgBF,EAAD,0CAAsF7d,EAAtF,QAAW,sCAXG,UAY7Bkb,GAAetU,EAAKmX,EAAc,EAAG,GAZR,WAa9B7d,KAAcsR,GAbgB,qBAc3BqM,EAd2B,kCAcZ3C,GAAetU,EAAD,0CAAyC5G,EAAzC,QAAqD,EAAG,KAd1D,iDAepBkb,GAAetU,EAAK,qCAAsC,GAAI,KAf1C,YAgB3BiX,EAhB2B,kCAgBZ3C,GAAetU,EAAD,+CAA8C5G,EAA9C,QAA0D,EAAG,KAhB/D,yBAkBzBsb,QAAQ0C,IAAIre,GACbiL,KAAI,SAAAhJ,GAAU,IAAD,EAC2B2S,GAAkB0J,SAASrc,GAAS,GAAjE2L,EADE,EACFA,KAAMC,EADJ,EACIA,IAAK7M,EADT,EACSA,OAAQD,EADjB,EACiBA,MAC3B,OAAoBob,GAAuBlV,EAAvCiX,EAAsC,uCAAsCjc,EAAtC,YAA+C5B,EAA/C,QACR,uCAAsC4B,EAAtC,QADmE2L,EAAMC,EAAK9M,EAAOC,OArBhG,QAyB3BiG,IACAA,EAAI4P,UAAY,QAChB5P,EAAI0R,MAAM,IAAK,GACf1R,EAAI2P,KAAO,wCACX3P,EAAIwO,SAAJ,UAAgBzV,GAAS2D,QAAU,IAAM,IAAK,KAC9CsD,EAAI0R,MAAM,EAAI,IAAK,GACnB1R,EAAI4P,UAAY,QA/BW,8CAmCxC,CAACxW,EAAMV,EAAOkS,GAAQtR,GAAYqR,GAAO5R,KAE5C8G,qBAAU,WAAO,IAAD,EACNG,EAAG,UAAGoW,EAAmBxW,eAAtB,aAAG,EAA4BK,WAAW,MACnD2W,GAAgBhX,QAAQnH,UAAY,WAGhC,OAFG,OAAHuH,QAAG,IAAHA,KAAKwR,UAAU,EAAG,EAAG,IAAK,KAEnB8C,GAAetU,EAAD,sCAAqCvH,GAAUwC,cAA/C,QAAoE,IAAK,OAEnG,CAACxC,KAEJoH,qBAAU,WAAO,IAAD,EACNG,EAAG,UAAG8V,EAAmBlW,eAAtB,aAAG,EAA4BK,WAAW,MACnD2W,GAAgBhX,QAAQzF,KAAO,WAE3B,GADG,OAAH6F,QAAG,IAAHA,KAAKwR,UAAU,EAAG,EAAG,IAAK,KACtB3G,KAAcD,GAAQ,CACtB,IAAI0M,EAAUzb,KAAKR,IAAI,GAAT,OAAalB,SAAb,IAAaA,MAAQ,GAC/BwH,EAAOgJ,GAAQ,OAAS,QACxB4M,GAAS,QACTpJ,EAAa,GAAKmJ,EAAU,QAAUA,EAAU,GAChDtQ,EAAOsQ,GAAW,GAChB3M,GACI,GACA,IACJA,IACK,IAAMwD,GAAc,EAAI,IACxB,IAAMA,GAAc,EAAIA,EAEnC,OAAOuG,QAAQ0C,IAAI,YAAIrT,MAAMuT,IACxBtT,KAAI,WAED,OADAuT,GAAW,QACJjD,GACHtU,EADiB,4CAEoB2B,EAFpB,QAGjBqF,GAAQ,GAAKuQ,IAAW5M,GAAQ,GAAK,GACrC,QAIT,IAAKE,GAAW,CACnB,IAAM2M,EAAsB7e,GAAU8e,cAItC,MAH0C,YAAxBD,GACP/c,EAAS2J,SAASoT,GAGvBtC,GAAuBlV,EAAD,4CAA2CwX,EAA3C,SACpB,SAAC1X,GAAD,OAAW,IAAMA,EAAMK,aAAe,IACtC,IACA,GAAI,IACN,IAAIuU,SAAQ,SAAAC,GAAO,OAAIA,GAAQ,MAEzC,OAAO,IAAID,SAAQ,SAAAC,GAAO,OAAIA,GAAQ,SAE3C,CAAC/J,GAAQC,GAAWF,GAAOxQ,GAAMxB,KAEpCkH,qBAAU,WAAO,IAAD,EACNG,EAAG,UAAG+V,EAAuBnW,eAA1B,aAAG,EAAgCK,WAAW,MAEvD,GADG,OAAHD,QAAG,IAAHA,KAAKwR,UAAU,EAAG,EAAG,IAAK,KACtBxR,GAAO1G,GAAY,CAInB0G,EAAI2P,KAAJ,UAHe,GAGf,0BACA3P,EAAI4P,UAAY,OAEhB5B,GAAUhO,EAAD,OAAMvG,SAAN,IAAMA,MAAc,EAAG,GALtB,KAMVuU,GAAUhO,EAAD,OAAMxG,SAAN,IAAMA,MAAa,EAAG,IANrB,QAQf,CAAC8b,EAAgB7b,GAAYH,GAAYE,KAE5CqG,qBAAU,WAAO,IAAD,EACNG,EAAG,UAAGmW,EAAcvW,eAAjB,aAAG,EAAuBK,WAAW,MAC9C,GAAID,EAAK,CACLA,EAAIwR,UAAU,EAAG,EAAG,IAAK,KACzBxR,EAAI4P,UAAY,OAChB,IAAM3M,EAA0B,SAAlBhK,EAAA,2BACHjB,GADG,IACeC,UAAW0S,GAAQ,UAAY,YACtDzR,GLnPM,SACpB8G,EACAqB,EACA2F,EACAiH,EACA0E,EACA1P,GAEA,GAAIjD,EAAK,CACLA,EAAI/H,UAAYgL,EAAMhL,UACtB,IAAMyf,EAAe1Z,EAAaqD,GAAO2K,MAAM,2BACzC2L,EAAeD,EAChBxH,QAAO,SAACC,EAAM9L,EAAKJ,GAIhB,OAHqBjE,EAAI2P,KAArB1L,EAAQ,IAAM,EAAc,iCAChB,iBAETkM,EAAOnQ,EAAIsO,YAAYjK,GAAKvK,QACpC,GAGP,GAAI6d,EAAe,EAAG,CAClB,IAAMtH,EAAgBxU,KAAKR,IAAIsX,EAAWgF,EAAc,GACxD3X,EAAI0R,MAAMrB,EAAe,GACzBqH,EACKxH,QAAO,SAACC,EAAM9L,EAAKJ,GAShB,OAJqBjE,EAAI2P,KAArB1L,EAAQ,IAAM,EAAc,iCAChB,4BAEhBjE,EAAIwO,SAASnK,EAAK8L,EAAOE,EAAepC,GACjCkC,EAAOnQ,EAAIsO,YAAYjK,GAAKvK,MAAQuW,IAC5CrJ,GAEPhH,EAAI0R,MAAM,EAAIrB,EAAe,GAC7BrQ,EAAI/H,UAAYD,EAAiBC,YKgNjC2f,CAAS5X,EAAKhH,EAAM,MAAO,GAAI,IAAKiK,MAEzC,CAACqS,EAAgB3K,GAAO3R,EAAME,EAAWD,IAE5C4G,qBAAU,WAAO,IAAD,EACNG,EAAG,UAAGqW,EAAYzW,eAAf,aAAG,EAAqBK,WAAW,MACzC,OAAHD,QAAG,IAAHA,KAAKwR,UAAU,EAAG,EAAG,IAAK,KACtB3G,KACAsI,GAAOnT,EAAKxH,GAAK,OAAQ,KACpBoS,IACDuI,GAAOnT,EAAKpH,GAAK,OAAQ,QAGlC,CAAC0c,EAAgB9c,GAAKI,GAAKgS,GAAQC,KAEtChL,qBAAU,WAAO,IAAD,EACNG,EAAG,UAAGsW,EAAS1W,eAAZ,aAAG,EAAkBK,WAAW,MACtC,OAAHD,QAAG,IAAHA,KAAKwR,UAAU,EAAG,EAAG,IAAK,KACtBxR,IAC0BA,EAAI/H,UAA1B0S,KAAUrR,GAA4B,OACrB,OACrB0G,EAAI2P,KAAO,2BAEPrW,GACA2Y,GAAwBjS,EAAK9F,IAAS,GAAK,GAAI,KACxC0Q,GACPqH,GAAwBjS,EAAK9F,IAAS,GAAK,IAAK,KAC7CoY,GAAyBtS,EAAK9F,IAAS,GAAK,IAAK,QAE7D,CAACob,EAAgB1K,GAAQtR,GAAYqR,GAAOzQ,KAE/C2F,qBAAU,WAAO,IAAD,EACNG,EAAG,UAAGuW,EAAY3W,eAAf,aAAG,EAAqBK,WAAW,MACzC,OAAHD,QAAG,IAAHA,KAAKwR,UAAU,EAAG,EAAG,IAAK,KACtBxR,IAC0BA,EAAI/H,UAA1B0S,KAAUrR,GAA4B,OACrB,OACrB0G,EAAI2P,KAAO,2BAEXsC,GAAwBjS,EAAK7G,IAAW,GAAK,GAAI,QAEtD,CAACmc,EAAgB1K,GAAQtR,GAAYqR,GAAOxR,KAE/C0G,qBAAU,WAAO,IAAD,EACNG,EAAG,UAAGwW,EAAgB5W,eAAnB,aAAG,EAAyBK,WAAW,MAC7C,OAAHD,QAAG,IAAHA,KAAKwR,UAAU,EAAG,EAAG,IAAK,KACtBxR,IAA0B,IAAnB5F,KACmB4F,EAAI/H,UAA1B0S,KAAUrR,GAA4B,OACrB,OHvSH,SAC1B0G,GAEA,GAAIA,EAAK,CACLA,EAAI2P,KAAO,mCAEX,IAAIhJ,EAAO,GACX3G,EAAIwO,SAAS,IAAK7H,EAAM,KACxBA,GAAQ3G,EAAIsO,YAAY,KAAKxU,MAAQ,EAErCkG,EAAI2P,KAAO,mCACX3P,EAAIwO,SAAS,KAAM7H,EAAM,KACzBA,GAAQ3G,EAAIsO,YAAY,MAAMxU,MAE9BkG,EAAI2P,KAAO,mCACX3P,EAAIwO,SAAS,WAAY7H,EAAM,MG0R3BkR,CAAe7X,MAEpB,CAACsV,EAAgB1K,GAAQtR,GAAYqR,GAAOvQ,KAE/CyF,qBAAU,WAAO,IAAD,EACNG,EAAG,UAAGyW,EAAW7W,eAAd,aAAG,EAAoBK,WAAW,MACxC,OAAHD,QAAG,IAAHA,KAAKwR,UAAU,EAAG,EAAG,IAAK,KACtBxR,IAC0BA,EAAI/H,UAA1B0S,KAAUrR,GAA4B,OACrB,OAErBmZ,GAAgBzS,EAAK3F,OAE1B,CAACib,EAAgB1K,GAAQtR,GAAYqR,GAAOtQ,KAE/CwF,qBAAU,WAAO,IAAD,EACNG,EAAG,UAAG0W,EAAW9W,eAAd,aAAG,EAAoBK,WAAW,MAC3C2W,GAAgBhX,QAAQvG,QAAU,WAG9B,OAFG,OAAH2G,QAAG,IAAHA,KAAKwR,UAAU,EAAG,EAAG,IAAK,KAEnB8C,GAAetU,EAAD,uCAAsC3G,GAAQ4B,cAA9C,QAAmE,IAAK,QAElG,CAAC5B,KAEJ,IAAMye,GAAmBpY,uBAAY,SACjCM,GAGE,IAFFyT,EAEC,uDAFgB9G,GAAW,OAC5B+G,EACC,uDAD6B,OAE9B,GAAI1T,EAAK,CACF,OAAHA,QAAG,IAAHA,KAAKwR,UAAU,EAAG,EAAG,IAAK,KADrB,IAEG7K,EAAS8M,EAAT9M,KACF6Q,EAAsB7e,GAAU8e,cAChCM,EAAe,CACjBvE,GAAoBxT,EAAK,IAAKyT,EAAMC,GACpCI,GAAyB9T,EAAK,IAAKyT,EAAMC,IAFxB,mBAGd7a,GAAamL,KAAI,SAAChJ,EAAOiJ,GAAR,OAAkB8P,GAClC/T,EACAhF,EACAiJ,IAAUpL,GAAa6D,OAAS,EAChC+W,EAAMC,OAPO,CAQO,YAAxB8D,EACM,SAACxQ,GAAD,OAAkBA,EAAO,GAAmB,SAAd0M,EAAuB,GAAK,IAC1DG,GAAsB7T,EAAKyT,EAAMC,GACvCF,GAAoBxT,EAAK,IAAKyT,EAAMC,MAEzB,SAAdA,EACKqE,EACAA,EAAgBC,WAAW9H,QAAO,SAACC,EAAMC,GAC3C,OAAOA,EAAKD,KACbxJ,GACH3G,EAAI4P,UAAY,UAErB,CAACjX,GAAWE,KACfgH,qBAAU,WAAO,IAAD,IACNG,EAAG,UAAGkW,EAAgBtW,eAAnB,aAAG,EAAyBK,WAAW,MAC1CgY,EAAO,UAAGhC,EAAcrW,eAAjB,aAAG,EAAuBK,WAAW,MAElD,GADG,OAAHD,QAAG,IAAHA,KAAKwR,UAAU,EAAG,EAAG,IAAK,KACtB3G,GAAW,CACX,IAAMkE,EAAkBN,GAAWzO,EAAKlH,GAAQ,EAAOsE,IACvD0a,GAAgBG,EAA6B,IAApBlJ,EACnBpC,GAAW,OACXA,GAAW,YAEjB8B,GACIzO,EACAlH,GACA,GACA,EACA2T,GACAC,IAEJoL,GAAgBG,EAAStL,GAAW,MAAW,WAEpD,CAAC2I,EAAgBwC,GAAiBhf,EAAQ+R,GAAWzN,KACxDyC,qBAAU,WAAO,IAAD,EACNG,EAAG,UAAGgW,EAAwBpW,eAA3B,aAAG,EAAiCK,WAAW,MACrD,OAAHD,QAAG,IAAHA,KAAKwR,UAAU,EAAG,EAAG,IAAK,KACtB3G,IAAavR,IACbmV,GACIzO,EACAzG,IACA,GACA,EACAgT,GACAC,MAGT,CAAC8I,EAAgBzK,GAAWvR,GAAYC,KAc3CsG,qBAAU,WAAO,IAAD,EACNG,EAAG,UAAG0V,EAAc9V,eAAjB,aAAG,EAAuBK,WAAW,MAC9C,GAAID,EAAK,CACL,IAAMM,EAAaC,OAAOC,iBAC1BR,EAAIa,aAAaP,EAAY,EAAG,EAAGA,EAAY,EAAG,GAClDN,EAAIc,sBAAwB,OAC5Bd,EAAIwR,UAAU,EAAG,EAAG,IAAK,KAI7B0G,KAAQC,KAAK,CACTC,OAAQ,CACJC,SAAU,CACN,mBACA,mBACA,sBACA,SACA,yBACA,aACA,sBACA,yBACA,+BAEJC,KAAM,CAAC,mBAEXC,OAAQ,WACJ,IAAMC,EAAmBjY,OAAOkY,aAAaC,QAAQ,gBAC/CC,EAAgBpY,OAAOkY,aAAaC,QAAQ,aAE5B,OAAlBC,GAA+CzT,UAArBsT,GAC1BlP,EAAQzF,KAAK+U,MAAMD,IAEvBpD,GAAgB,IAEpBsD,SAAU,WACNpD,EAAS,4BACTF,GAAgB,QAGzB,IAEH,IAAMuD,GAAY1Z,iBAAO,CACrB2Z,gBAAiBrE,QAAQC,UACzBqE,gBAAgB,IAEpBnZ,qBAAU,WACN,IAC8B,EAD1BoZ,GAAW,GACQ,IAAnB3D,IACAmD,aAAaS,QAAQ,YAAarV,KAAKC,UAAUmF,IACjDwP,aAAaS,QAAQ,eAArB,UAAqChU,SAArC,EAAsE,YA6B1E,OApBA,sBAAC,8BAAAuP,EAAA,0DACqBiB,EAAc9V,QADnC,wBAGO,UAAA8C,SAASyW,cAAc,+BAAvB,SAAgDC,aAAa,QAAS,IACtEN,GAAUlZ,QAAQoZ,gBAAiB,EAJ1C,SAKaF,GAAUlZ,QAAQmZ,gBAL/B,WAOWE,EAPX,wBAQWH,GAAUlZ,QAAQmZ,gBAAkBM,GAAS,CAAE/f,gBAC/Cwf,GAAUlZ,QAAQoZ,gBAAiB,EAT9C,UAWiBF,GAAUlZ,QAAQmZ,gBAXnC,QAYeE,IACA,UAAAvW,SAASyW,cAAc,+BAAvB,SAAgDC,aAAa,QAAS,kBAbrF,2CAAD,GAoBO,WACHH,GAAW,MAInB,IAAMI,GAAWja,iBAAM,uCAAC,WAAOka,GAAP,2BAAA7E,EAAA,2DAKhB6E,EADAhgB,kBAJgB,SAMdigB,EAAY7D,EAAc9V,QAC1B4Z,EAPc,OAOFD,QAPE,IAOFA,OAPE,EAOFA,EAAWtZ,WAAW,MAClCwZ,EAAgB,SAACC,EAAiD1Z,GACpE,OAAO,IAAI0U,SAAiB,SAAAC,GACxB,GAAI+E,EAAY9Z,SAAWI,EAAK,CAC5B,IAAM2Z,EAAYD,EAAY9Z,QAAQga,UAAU,aAEhD,GAAID,EAAW,CACX,IAAIE,EAAQ,IAAI9E,MAChB8E,EAAM3W,IAAMyW,EACZE,EAAM7E,OAAS,WACXhV,EAAIe,UAAU8Y,EAAO,EAAG,GACxBlF,GAAQ,IAEZkF,EAAM5E,QAAU,kBAAMN,GAAQ,SAC3BA,GAAQ,QACZA,GAAQ,QAInB4E,IAAaC,EA1BG,wBA2BhBA,EAAUhI,UAAU,EAAG,EAAG,IAAK,KA3Bf,SA4BVkD,QAAQ0C,IAAI0C,OACbC,OAAOnD,GAAgBhX,SACvBoE,KAAI,SAAAgW,GACD,OAAOA,QA/BC,wBAiCVP,EAAc9D,EAAgB6D,GAjCpB,eAkCVtC,EAAa5Y,EAAiBsB,UAClB4Z,IACVlgB,EACAkgB,EAAUzY,UAAUmW,EAAY,GAAI,IAAK,IAAK,KAE9CsC,EAAUzY,UAAUmW,EAAY,GAAI,IAAK,IAAK,MAvCtC,UA0CVuC,EAAc5D,EAAuB2D,GA1C3B,eA2CVS,EAAY,CACd9D,EACAC,EACAN,EACAC,EACAC,EACAC,EACAC,EACAG,EACAC,EACAE,EACAD,EACAE,EACAC,GAxDY,UA0DVhC,QAAQ0C,IAAI,CACd6C,EAAUjW,KAAI,SAAAkW,GAAY,OAAIT,EAAcS,EAAcV,QA3D9C,4CAAD,uDA+DpB5Z,QAEH,OACI,sBAAKoB,UAAW,gBAAiBiC,MAAO,CACpCkX,gBAAgB,QAAD,OAAUjV,aAAV,yFADnB,UAGKoQ,GAAkB,qBAAKtU,UAAU,eAAf,SACdwU,EAAM9Y,OAAS,EAAI,sBAAMuG,MAAO,CAAE1I,MAAO,WAAtB,SACfib,IACK,iCAEd,qBAAKxU,UAAU,uBAEK,IAAnBsU,GAA4B,eAAC,GAAD,CACzBpM,mBAAoB5K,EAAiBsB,QACrCqJ,YAAaA,EACbE,aAAcG,EACd7K,gBAAiB9E,EACjBgF,cAAe,SAAAyb,GACXrD,IAAoB,SAAArG,GAAG,OAAIA,EAAM,KAC7B0J,GAAU9Q,GAAQ,SAAA8G,GAAI,kCACnBA,GADmB,IAEtBzW,YAAaygB,QATI,UAazB,sBAAKpZ,UAAU,aAAf,UACI,qBAAKiE,IAAI,WAAW/B,IAAG,UAAKgC,aAAL,gBAA2CpL,MAAO,KACzE,sBAAKkH,UAAU,kBAAf,UACI,gDAAkB,gDAASkE,SAAT,EAA0C,gBAC5D,sBAAKlE,UAAU,mBAAf,UACI,yCAAW,2CACX,8CAAgB,uCAAhB,gBAA0C,mBACtC6B,KAAK,6FACLzB,OAAO,SACPiZ,IAAI,aAHkC,yBAA1C,OAIA,cAAC,KAAD,CAASC,iBAAiB,qBAAqB5L,QAAS,sBAAK1N,UAAU,aAAf,UACpD,4CACA,+BACI,2FACA,sJACA,+GALR,SAQI,cAACuZ,GAAA,EAAD,CAA2BvZ,UAAU,+BAKrD,0BAEJ,sBAAKA,UAAU,qBAAf,UACI,yBAAQA,UAAU,gBAAlB,uBAA4C,uBAA5C,mEACA,sBAAKA,UAAU,oBAAf,UACI,wBAAQ6F,GAAG,gBAAgB4E,IAAKiK,EAAe5b,MAAO,IAAKC,OAAQ,MACnE,sBAAK8M,GAAG,sBAAR,UACI,qBAAK7F,UAAU,qBAAf,2BACA,cAACwZ,GAAA,EAAD,OAEJ,wBAAQ3T,GAAG,cAAc4E,IAAKkK,EAAgB7b,MAAO,IAAKC,OAAQ,MAClE,wBAAQ8M,GAAG,YAAY4E,IAAKmK,EAAc9b,MAAO,IAAKC,OAAQ,MAC9D,wBAAQ8M,GAAG,qBAAqB4E,IAAKoK,EAAuB/b,MAAO,IAAKC,OAAQ,MAChF,wBAAQ8M,GAAG,aAAa4E,IAAK0K,EAAerc,MAAO,IAAKC,OAAQ,MAChE,wBAAQ8M,GAAG,kBAAkB4E,IAAK2K,EAAoBtc,MAAO,IAAKC,OAAQ,MAC1E,wBAAQ8M,GAAG,kBAAkB4E,IAAKqK,EAAoBhc,MAAO,IAAKC,OAAQ,MAC1E,wBAAQ8M,GAAG,sBAAsB4E,IAAKsK,EAAwBjc,MAAO,IAAKC,OAAQ,MAClF,wBAAQ8M,GAAG,uBAAuB4E,IAAKuK,EAAyBlc,MAAO,IAAKC,OAAQ,MACpF,wBAAQ8M,GAAG,aAAa4E,IAAKwK,EAAenc,MAAO,IAAKC,OAAQ,MAChE,wBAAQ8M,GAAG,eAAe4E,IAAKyK,EAAiBpc,MAAO,IAAKC,OAAQ,MACpE,wBAAQ8M,GAAG,WAAW4E,IAAK4K,EAAavc,MAAO,IAAKC,OAAQ,MAC5D,wBAAQ8M,GAAG,QAAQ4E,IAAK6K,EAAUxc,MAAO,IAAKC,OAAQ,MACtD,wBAAQ8M,GAAG,WAAW4E,IAAK8K,EAAazc,MAAO,IAAKC,OAAQ,MAC5D,wBAAQ8M,GAAG,eAAe4E,IAAK+K,EAAiB1c,MAAO,IAAKC,OAAQ,MACpE,wBAAQ8M,GAAG,UAAU4E,IAAKgL,EAAY3c,MAAO,IAAKC,OAAQ,MAC1D,wBAAQ8M,GAAG,UAAU4E,IAAKiL,EAAY5c,MAAO,IAAKC,OAAQ,MAC1D,wBAAQiH,UAAU,cAAcyK,IAAKnN,cClmB1Cmc,GAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJ1Y,SAASmD,eAAe,SAM5B4U,M","file":"static/js/main.60d228ff.chunk.js","sourcesContent":["export type TextStyleType = 'auto' | 'custom';\nexport type TextStyle = typeof defaultTextStyle;\nexport const defaultTextStyle = {\n    fillStyle: '#000000',\n    shadowColor: '#000000',\n    shadowOffsetY: 0,\n    shadowOffsetX: 0,\n    shadowBlur: 0,\n    globalAlpha: 1,\n};\n\nexport type Card = typeof defaultCard;\nexport const defaultCard = {\n    atk: '100',\n    attribute: 'DARK',\n    frame: 'effect',\n    subFamily: 'Level',\n    def: '2000',\n    type_ability: ['Dragon', 'Pendulum', 'Effect'] as string[],\n    effect: `[\"Blue-Eyes White Dragon\" + \"Blue-Eyes White Dragon\" + \"Blue-Eyes White Dragon\"]\nYour opponent cannot target or destroy this card with card effects. Once per turn: You can target 1 card your opponent controls; destroy it.\n● If this card was Fusion Summoned using a monster whose original name is \"Blue-Eyes Alternative White Dragon\" as material, you can target up to 3 cards your opponent controls instead.\n● This card cannot attack the turn this effect is activated.\n(This card is always treated as \"Blue-Eyes Ultimate Dragon\")`,\n    link_map: ['1', '2', '3', '8', '9'] as string[],\n    name: 'B.F.A - U3 “Eden”',\n    nameStyleType: 'auto' as TextStyleType,\n    nameStyle: {\n        fillStyle: '#000000',\n        shadowColor: '#000000',\n        shadowOffsetY: 0,\n        shadowOffsetX: 0,\n        shadowBlur: 0,\n        globalAlpha: 1,\n    } as TextStyle,\n    passcode: '24907043',\n    foil: 'normal',\n    sticker: 'holo2',\n    isPendulum: true,\n    pendulum_effect: 'You can pay 1000 LP; add 1 \"Abyss Actor\" Pendulum Monster from your Deck to your hand, except \"Abyss Actor - Mellow Madonna\", also you cannot Special Summon monsters for the rest of this turn, except \"Abyss Actor\" Pendulum Monsters (even if this card leaves the field). You can only use this effect of \"Abyss Actor - Mellow Madonna\" once per turn.',\n    red_scale: '0',\n    blue_scale: '13',\n    picture: 'https://scontent.fsgn2-6.fna.fbcdn.net/v/t1.0-9/165851102_3703072819802446_2677153091621164666_o.jpg?_nc_cat=109&ccb=1-3&_nc_sid=730e14&_nc_ohc=qA4t3mN92dQAX_RST5K&_nc_ht=scontent.fsgn2-6.fna&oh=16d439f4c142f27cf716c1d70bc80b22&oe=6085E577',\n    pictureCrop: {\n        x: 0,\n        y: 0,\n        width: 100,\n        height: 100,\n        aspect: 1,\n        unit: 'px',\n    } as Partial<ReactCrop.Crop>,\n    set_id: 'ROTD-EN081',\n    star: 4,\n    isFirstEdition: true,\n    creator: '©2020 Studio Dice/SHUEISHA TV TOKYO, KONAMI',\n};\nexport const defaultMonster = defaultCard;\n\nexport const frameType = [\n    { name: 'normal', color: '#fff', backgroundColor: '#c49c5e' },\n    { name: 'effect', color: '#fff', backgroundColor: '#b96c49' },\n    { name: 'fusion', color: '#fff', backgroundColor: '#8948a4' },\n    { name: 'synchro', color: '#000', backgroundColor: '#efefef' },\n    { name: 'xyz', color: '#fff', backgroundColor: '#000' },\n    { name: 'link', color: '#fff', backgroundColor: '#0c8ac6' },\n    { name: 'ritual', color: '#fff', backgroundColor: '#5e85c9' },\n    { name: 'spell', color: '#fff', backgroundColor: '#1b8f83' },\n    { name: 'trap', color: '#fff', backgroundColor: '#c32a8c' },\n    { name: 'token', color: '#fff', backgroundColor: '#6f6c6b' },\n];\n\nexport const iconList = [\n    'NO ICON',\n    'FIELD',\n    'CONTINUOUS',\n    'QUICK-PLAY',\n    'RITUAL',\n    'COUNTER',\n];\n\nexport const foilList = [\n    { name: 'normal', color: '#747b95' },\n    { name: 'gold', color: '#cfa65f' },\n    { name: 'platinum', color: '#b1b1b1' },\n];\n\nexport const stickerList = [\n    'gold',\n    'silver',\n    'beta',\n    'holo5',\n    'holo4',\n    'holo3',\n    'holo2',\n    'holo1',\n];\n\nexport const attributeList = [\n    { name: 'DARK', color: '#b41dda' },\n    { name: 'EARTH', color: '#8d8e8e' },\n    { name: 'FIRE', color: '#e51b23' },\n    { name: 'LIGHT', color: '#bfae32' },\n    { name: 'WATER', color: '#008ecd' },\n    { name: 'WIND', color: '#28ab35' },\n    { name: 'DIVINE', color: '#ef6300' },\n    { name: 'SPELL', color: '#1b8f83' },\n    { name: 'TRAP', color: '#c32a8c' },\n];","import { Card, frameType } from '../model';\n\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'normal' && checkMonster(card);\n};\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'xyz';\n};\nexport const checkLink = (card: Pick<Card, 'frame' | 'type_ability'>) => {\n    return card.frame === 'link' && checkMonster(card);\n};\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\n    return card.frame !== 'spell' && card.frame !== 'trap';\n};\n\nexport const getCardFrame = (frame: string) => {\n    return frameType.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\n};","export const createCondenser = (minThreshold = 0, maxThreshold = 1000) => {\n    let min = minThreshold;\n    let max = maxThreshold;\n    let median = max;\n    let lastEffective = median;\n    let iterateCount = 30;\n    let magnitude = 100;\n\n    const reverseSearch = () => {\n        if (magnitude === 1) finish();\n        else {\n            median += magnitude;\n            magnitude /= 10;\n            median -= magnitude;\n        }\n\n        return Math.min(median, max);\n    };\n\n    const searchDown = () => {\n        median -= magnitude;\n        iterateCount -= 1;\n\n        return median;\n    };\n\n    const reset = (minThreshold = min, maxThreshold = max) => {\n        min = minThreshold;\n        max = maxThreshold;\n        median = maxThreshold;\n        iterateCount = 30;\n        magnitude = 100;\n        lastEffective = maxThreshold;\n    };\n\n    const getMedian = () => median;\n    const setMedian = (newMedian: number) => median = newMedian;\n\t\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\n    const getLastEffective = () => lastEffective;\n    const applyLastEffective = () => {\n        median = lastEffective;\n        iterateCount = -1;\n        return median;\n    };\n\t\n    const getIterateCount = () => iterateCount;\n    const finish = () => iterateCount = -1;\n\n    return {\n        reset,\n        searchDown,\n        reverseSearch,\n        finish,\n        getMedian,\n        setMedian,\n        setLastEffective,\n        getLastEffective,\n        applyLastEffective,\n        getIterateCount,\n    };\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\n    let result           = '';\n    const charactersLength = charSet.length;\n    for ( let i = 0; i < length; i++) {\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n};\n\nexport const randomSetID = () => {\n    return `${randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)}-EN${randomCharacter('0123456789', 3)}`;\n};\n\nexport const randomPassword = () => {\n    return `${randomCharacter('0123456789', 8)}`;\n};\n\nexport const splitEffect = (effect: string, isNormal = false) => {\n    let effectBody = effect;\n\n    let effectMaterial = '';\n    const materialRegex = /^(\\[([^\\]]*)\\]\\s*)/m;\n    const materialReplacement = materialRegex.exec(effectBody)?.[1];\n    const material = materialRegex.exec(effectBody)?.[2];\n    if (material && materialReplacement) {\n        effectMaterial = material;\n        effectBody = effectBody.replace(materialReplacement, '');\n    } else effectMaterial = '';\n\n    let effectFlavorCondition = '';\n    const flavorConditionRegex = /(\\n^[\\r\\t\\f\\v \\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]*\\([\\w\\W]+\\))\\s*$/m;\n    const flavorCondition = flavorConditionRegex.exec(effect)?.[1];\n    if (flavorCondition && isNormal) {\n        effectFlavorCondition = flavorCondition;\n        effectBody = effectBody.replace(flavorCondition, '');\n    } else effectFlavorCondition = '';\n\n    return {\n        material: effectMaterial,\n        body: effectBody,\n        flavorCondition: effectFlavorCondition\n    };\n};\n\nexport const quoteConvert = (text?: string) => {\n    let normalizedString = (text ?? '');\n    normalizedString = normalizedString.replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')\n        .replace(/'/g, '\\u2019')\n        .replace(/(^|[-\\u2014/[(\\u2018\\s])\"/g, '$1\\u201c')\n        .replace(/\"/g, '\\u201d')\n        .replace(/--/g, '\\u2014');\n    return normalizedString;\n};\n\nexport * from './categorize';\nexport * from './condenser';","import { Button, Input, Radio } from 'antd';\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './card-picture.scss';\n\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\n    if (!crop || !canvas) return;\n    canvas.toBlob(\n        (blob) => {\n            const previewUrl = window.URL.createObjectURL(blob);\n\n            const anchor = document.createElement('a');\n            anchor.download = 'cropPreview.png';\n            anchor.href = URL.createObjectURL(blob);\n            anchor.click();\n\n            window.URL.revokeObjectURL(previewUrl);\n        },\n        'image/png',\n        1\n    );\n}\n\nexport type ImageCropper = {\n    noRedrawNumber?: number,\n\tdefaultExternalSource?: string,\n    previewCanvasRef?: HTMLCanvasElement | null,\n    children?: React.ReactNode,\n    ratio?: number,\n    defaultCropInfo: Partial<ReactCrop.Crop>,\n    onSourceChange?: (source: string) => void,\n    onImageChange?: (cropInfo: Partial<ReactCrop.Crop>) => void,\n}\nexport const ImageCropper = ({\n    noRedrawNumber = 0,\n    defaultExternalSource = '',\n    previewCanvasRef,\n    children,\n    ratio = 1,\n    defaultCropInfo,\n    onSourceChange = () => {},\n    onImageChange = () => {},\n}: ImageCropper) => {\n    const [sourceType, setSourceType] = useState('external');\n    const [internalSource, setInternalSource] = useState('');\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\n    const imgRef = useRef<HTMLImageElement | null>(null);\n    const [crop, setCrop] = useState<ReactCrop.Crop>(defaultCropInfo);\n    const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\n\n    const onSelectFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const reader = new FileReader();\n            reader.addEventListener('load', () => {\n                if (typeof reader.result === 'string') {\n                    setInternalSource(reader.result);\n                    setSourceType('internal');\n                }\n            });\n            reader.readAsDataURL(e.target.files[0]);\n        }\n    };\n\n    const onLoad = useCallback((img) => {\n        imgRef.current = img;\n    }, []);\n\t\n    const onExternalSourceChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const source = e.target.value;\n\n        onSourceChange(source);\n        setExternalSource(source);\n    };\n\n    useEffect(() => {\n        const image = imgRef.current;\n        const canvas = previewCanvasRef;\n        const crop = completedCrop;\n        if (!crop || !canvas || !image) return;\n\n        const ctx = canvas.getContext('2d');\n        if (!ctx) return;\n\n        const scaleX = image.naturalWidth / image.width;\n        const scaleY = image.naturalHeight / image.height;\n        const pixelRatio = window.devicePixelRatio;\n        const boundingWidth = Math.ceil(canvas.getBoundingClientRect().width);\n        const boundingHeight = Math.ceil(canvas.getBoundingClientRect().height);\n\n        canvas.width = (boundingWidth ?? 0) * pixelRatio;\n        canvas.height = (boundingHeight ?? 0) * pixelRatio;\n\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        ctx.imageSmoothingQuality = 'high';\n\n        ctx.drawImage(\n            image,\n            (crop.x ?? 0) * scaleX,\n            (crop.y ?? 0) * scaleY,\n            (crop.width ?? 0) * scaleX,\n            (crop.height ?? 0) * scaleY,\n            0,\n            0,\n            (boundingWidth ?? 0),\n            (boundingHeight ?? 0)\n        );\n        onImageChange(crop);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [completedCrop, previewCanvasRef, noRedrawNumber]);\n\n    return (\n        <div className=\"card-image-cropper\">\n            <div className=\"card-image-source-input\">\n                {children}\n                <Radio.Group onChange={e => setSourceType(e.target.value)} value={sourceType}>\n                    <Radio.Button value={'external'}>\n                        <Input key=\"key\"\n                            addonBefore=\"Link\" placeholder=\"https://my-online-image...\"\n                            value={externalSource}\n                            onChange={onExternalSourceChange} maxLength={256} />\n                    </Radio.Button>\n                    <Radio.Button value={'internal'}>\n                        <Input type=\"file\"  accept=\"image/*\" onChange={onSelectFile} />\n                        <div>\n                            {sourceType === 'internal' && <>\n                                <Button\n                                    className=\"download-button\"\n                                    disabled={!completedCrop?.width || !completedCrop?.height}\n                                    onClick={() => previewCanvasRef && generateDownload(previewCanvasRef, completedCrop)}\n                                >\n                                Download cropped image\n                                </Button>\n                                <span style={{ color: '#FF6F6F' }}>Offline images are not auto saved!</span>\n                            </>}\n                        </div>\n                    </Radio.Button>\n                </Radio.Group>\n            </div>\n            <div className=\"card-cropper\">\n                <ReactCrop key={sourceType}\n                    src={sourceType === 'internal' ? internalSource : externalSource}\n                    onImageLoaded={onLoad}\n                    crop={crop}\n                    onChange={cropData => setCrop({ ...cropData, aspect: ratio })}\n                    onComplete={cropData => setCompletedCrop(cropData)}\n                    ruleOfThirds={true}\n                />\n            </div>\n        </div>\n    );\n};\n","import { Tooltip } from 'antd';\nimport { useEffect, useState } from 'react';\nimport './link-marker.scss';\n\nexport type LinkMarkChooser = {\n    defaultValue?: string[],\n    onChange?: (value: string[]) => void,\n};\nexport const LinkMarkChooser = ({\n    defaultValue = [],\n    onChange = () => {},\n}: LinkMarkChooser) => {\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\n    const rotateMap = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\n\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\n    useEffect(() => {\n        onChange(choosenArrow);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [literalChoosenArrow]);\n\n    return <div className=\"link-marker-chooser\">\n        <div className=\"title\">\n            Link Arrows\n        </div>\n        <div className=\"container\">\n            {[...Array(9)].map((entry, index) => {\n                const normalizedIndex = `${index + 1}`;\n\n                if (normalizedIndex === '5') return <Tooltip key=\"5\" overlay=\"Reset\">\n                    <div className=\"link-marker-reset\" onClick={() => {\n                        setChoosenArrow([]);\n                    }}>R</div>\n                </Tooltip>;\n\n                return <div key={normalizedIndex}\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\n                    onClick={() => {\n                        setChoosenArrow(cur => {\n                            let newMap = [...cur];\n\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\n                            else newMap.push(normalizedIndex);\n\n                            return newMap;\n                        });\n                    }}\n                >\n                    <div className={`link-marker-icon link-marker-icon-${index + 1}`} style={{ transform: `rotate(${rotateMap[index]}deg)` }} />\n                </div>;\n            })}\n        </div>\n    </div>;\n};","import { Radio } from 'antd';\nimport { frameType, iconList, attributeList, stickerList, foilList } from '../../model';\nimport './input-panel.scss';\n\nconst { Button: RadioButton } = Radio;\n\nexport const foilButton = foilList.map(({ color, name }) => {\n    return <RadioButton key={name} value={name} style={{\n        color,\n        fontWeight: 'bold',\n    }}>\n        {name.toLocaleUpperCase()}\n    </RadioButton>;\n});\nexport const frameButton = frameType.map(({ color, name, backgroundColor }) => {\n    return <RadioButton key={name} value={name} style={{\n        backgroundColor,\n        color,\n    }}>\n        {name}\n    </RadioButton>;\n});\nexport const attributeButton = attributeList.map(({ name }) => <RadioButton key={name} value={name}>\n    <img alt={name} src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${name.toLowerCase()}.png`} />\n</RadioButton>);\nexport const iconButton = iconList.map(entry => <RadioButton key={entry} value={entry}>{entry}</RadioButton>);\nexport const starButton = [...Array(14)].map((e, index) => <RadioButton key={`${index}`} value={`${index}`}>{`${index}`}</RadioButton>);\nexport const stickerButton = stickerList.map(name => <RadioButton key={name} value={name}>\n    <img alt={name} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${name.toLowerCase()}.png`} />\n</RadioButton>);","import { useCallback, useEffect, useState } from 'react';\nimport Moveable from 'react-moveable';\nimport { EllipsisOutlined } from '@ant-design/icons';\nimport './char-picker.scss';\n\nfunction insertAtCursor(myField: HTMLTextAreaElement, myValue: string) {\n    //IE support\n    if ((document as any).selection) {\n        myField.focus();\n        const sel = (document as any).selection.createRange();\n        sel.text = myValue;\n\n        return {\n            value: myField.value,\n            position: 0,\n        };\n    }\n    //MOZILLA and others\n    else if (myField.selectionStart || myField.selectionStart === 0) {\n        const startPos = myField.selectionStart;\n        const endPos = myField.selectionEnd;\n        myField.value = myField.value.substring(0, startPos)\n            + myValue\n            + myField.value.substring(endPos, myField.value.length);\n        myField.selectionStart = startPos + myValue.length;\n        myField.selectionEnd = startPos + myValue.length;\n        myField.focus();\n\n        return {\n            value: myField.value,\n            position: startPos + myValue.length,\n        };\n    } else {\n        myField.value += myValue;\n\n        return {\n            value: myField.value,\n            position: 0,\n        };\n    }\n}\n\nexport type CharPicker = {\n    targetId: string,\n    onPick?: (value: string) => void,\n}\nexport const CharPicker = ({\n    targetId = '',\n    onPick = () => {},\n}: CharPicker) => {\n    const [target, setTarget] = useState<HTMLElement | null>(null);\n    const internalOnPick = (char: string) => {\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\n        if (inputTarget) {\n            const { value } = insertAtCursor(inputTarget, char);\n\n            onPick(value);\n        }\n    };\n\n    useEffect(() => {\n        setTarget(document.getElementById('char-picker'));\n    }, []);\n\n    const onDrag = useCallback(({\n        target,\n        left, top,\n        transform,\n    }) => {\n        target!.style.left = `${left}px`;\n        target!.style.top = `${top}px`;\n        target!.style.transform = transform;\n    }, []);\n\n    return <div className=\"char-picker-container\">\n        {<div id={'char-picker'} className=\"char-picker\">\n            <div className=\"handler\">\n                <EllipsisOutlined />\n            </div>\n            {[\n                '∞',\n                '☆',\n                '●',\n                '©',\n                '™',\n                'Ɐ',\n            ].map(entry => {\n                return <button key={entry} className=\"ant-btn\" onClick={() => internalOnPick(entry)}>{entry}</button>;\n            })}\n        </div>}\n        <Moveable\n            target={target}\n            container={null}\n\n            /* Resize event edges */\n            edge={false}\n\n            /* draggable */\n            draggable={true}\n            throttleDrag={0}\n            onDrag={onDrag}\n        />\n    </div>;\n};","import { Checkbox } from 'antd';\nimport React, { useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { TextStyle, TextStyleType } from '../../../model';\nimport './style-picker.scss';\n\nexport type StylePicker = {\n    defaultType: TextStyleType,\n\tdefaultValue: TextStyle,\n\tonChange: (type: TextStyleType, style: TextStyle) => void,\n}\nexport const StylePicker = React.memo(({\n    defaultType,\n    defaultValue,\n    onChange,\n}: StylePicker) => {\n    // const [isExpand, setExpand] = useState(false);\n    const [type, setType] = useState(defaultType);\n    const [value, setValue] = useState(defaultValue);\n    const [isVisible, setVisible] = useState(false);\n\n    return <div className=\"style-picker\">\n        <div className=\"style-picker-preview\" onClick={() => setVisible(cur => !cur)}>\n\t  \t\t<div className=\"style-picker-display\" style={{ background: `${type === 'auto' ? 'white' : value.fillStyle}` }}>\n                {type === 'auto' ? 'Auto' : <>&nbsp;</>}\n            </div>\n        </div>\n        {isVisible\n            ? <div className=\"style-picker-overlay\" style={{ position: 'absolute', zIndex: 2 }}>\n                <div className=\"style-picker-mask\" onClick={() => setVisible(false)} />\n                <div className=\"style-picker-auto\">\n                    <Checkbox value={'auto'} checked={type === 'auto'} onChange={() => {\n                        const newType = type === 'auto' ? 'custom' : 'auto';\n                        setType(newType);\n                        onChange(newType, value);\n                    }}>Auto</Checkbox>\n                    <CloseOutlined className=\"style-picker-close\" onClick={() => setVisible(false)} />\n                </div>\n                <div className={'custom-style-picker'}>\n                    {type === 'auto' && <div className=\"disable-overlay\" />}\n                    <h2>Text Color</h2>\n                    <CompactPicker color={value.fillStyle} onChange={color => {\n                        setType('custom');\n                        setValue(cur => {\n                            const newStyle = {\n                                ...cur,\n                                fillStyle: color.hex,\n                            };\n\n                            onChange('custom', newStyle);\n                            return newStyle;\n                        });\n                    }} />\n                </div>\n            </div>\n            : null}\n    </div>;\n}, () => true);","import React, { useRef, useState } from 'react';\nimport { Radio, Input, Checkbox, Tooltip } from 'antd';\nimport { Card, TextStyle, TextStyleType } from '../../model';\nimport { ImageCropper, LinkMarkChooser } from '../../component';\nimport { checkXyz, checkLink, checkMonster, randomPassword, randomSetID } from '../../util';\nimport { ExtractProps } from '../../type';\nimport { debounce } from 'lodash';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { foilButton, frameButton, starButton, iconButton, attributeButton, stickerButton } from './const';\nimport { CharPicker } from './char-picker';\nimport { StylePicker } from './style-picker';\nimport './input-panel.scss';\n\nconst { TextArea } = Input;\ntype RadioChangeEvent = Parameters<NonNullable<ExtractProps<typeof Radio>['onChange']>>[0];\n\nconst onChangeFactory = (\n    key: string,\n    mutateFunction: (func: (card: Card) => Card) => void,\n    valueTransform: (value: any) => any = (value) => value,\n) => {\n    return (e: any) => {\n        mutateFunction(current => ({\n            ...current,\n            [key]: valueTransform(typeof e === 'string' || Array.isArray(e) ? e : e?.target?.value),\n        }));\n    };\n};\n\ntype RandomButton = {\n    seeder: () => string,\n    onGenerate: (value: string) => void,\n}\nconst RandomButton = ({\n    seeder,\n    onGenerate,\n}: RandomButton) => {\n    return <span style={{ marginLeft: 10, paddingLeft: 10, borderLeft: '1px solid #222' }}>\n        <Tooltip overlay=\"Random\">\n            <SyncOutlined onClick={() => onGenerate(seeder())} />\n        </Tooltip>\n    </span>;\n};\n\nexport type CardInputPanelRef = {\n    getCroppedImageCanvasRef: () => HTMLCanvasElement | null\n}\nexport type CardInputPanel = {\n\tcurrentCard: Card,\n    receivingCanvasRef: HTMLCanvasElement | null,\n    defaultCropInfo: Partial<ReactCrop.Crop>,\n\tonCardChange: React.Dispatch<React.SetStateAction<Card>>,\n    onImageChange?: (cropInfo: Partial<ReactCrop.Crop>) => void,\n    children?: React.ReactNode,\n}\nexport const CardInputPanel = ({\n    currentCard,\n    receivingCanvasRef,\n    defaultCropInfo,\n    onCardChange,\n    onImageChange,\n    children,\n}: CardInputPanel) => {\n    const [isMirrorScale, setMirrorScale] = useState(true);\n    const setCard = (mutateFunc: (card: Card) => Card) => {\n        onCardChange(currentCard => mutateFunc(currentCard));\n    };\n    const onFoilChange = onChangeFactory('foil', setCard);\n    const onFrameChange = (e: RadioChangeEvent) => {\n        onCardChange(currentCard => {\n            const value = e?.target?.value;\n            const isST = value === 'spell' || value === 'trap';\n    \n            return {\n                ...currentCard,\n                frame: value,\n                isPendulum: value === 'link' || value === 'token' || isST ? false : currentCard.isPendulum,\n                subFamily: isST ? 'NO ICON' : currentCard.subFamily,\n            };\n        });\n    };\n    const onAttributeChange = onChangeFactory('attribute', setCard);\n    const onSubFamilyChange = onChangeFactory('subFamily', setCard);\n    const onNameChange = debounce(onChangeFactory('name', setCard), 250);\n    const onNameColorChange = (type: TextStyleType, value: TextStyle) => {\n        onCardChange(currentCard => {\n            return {\n                ...currentCard,\n                nameStyleType: type,\n                nameStyle: value,\n            };\n        });\n    };\n    const onStarChange = onChangeFactory('star', setCard);\n    const onIsPendulumChange = (e: any) => onCardChange(currentCard => {\n        return { ...currentCard, isPendulum: e.target.checked };\n    });\n    const onPictureChange = onChangeFactory('picture', setCard);\n    const onLinkMapChange = onChangeFactory('link_map', setCard);\n    const onRedScaleChange = onChangeFactory('red_scale', setCard);\n    const onBlueScaleChange = onChangeFactory('blue_scale', setCard);\n    const onPendulumEffectChange = debounce(onChangeFactory('pendulum_effect', setCard), 250);\n    const onEffectChange = debounce(onChangeFactory('effect', setCard), 250);\n    const onATKChange = onChangeFactory('atk', setCard);\n    const onDEFChange = onChangeFactory('def', setCard);\n    const onTypeAbilityChange = debounce((value: (string | number)[]) => {\n        setCard(current => ({\n            ...current,\n            type_ability: value.map(entry => `${entry}`),\n        }));\n    }, 250);\n    const onSetIDChange = onChangeFactory('set_id', setCard);\n    const onPasscodeChange = onChangeFactory('passcode', setCard);\n    const onStickerChange = onChangeFactory('sticker', setCard);\n    const onCreatorChange = onChangeFactory('creator', setCard);\n    const onFirstEditionChange = (e: any) => onCardChange(currentCard => {\n        return { ...currentCard, isFirstEdition: e.target.checked };\n    });\n\n    const {\n        frame, foil,\n        name, nameStyleType, nameStyle,\n        picture,\n        effect,\n        type_ability,\n        isPendulum, pendulum_effect, red_scale, blue_scale,\n        atk, def, link_map,\n        attribute,\n        subFamily,\n        star,\n        set_id,\n        passcode, isFirstEdition, creator, sticker,\n    } = currentCard;\n    const isXyz = checkXyz(currentCard);\n    const isLink = checkLink(currentCard);\n    const isMonster = checkMonster(currentCard);\n    const [displayTypeAbility, setDisplayTypeAbility] = useState(type_ability.join('/'));\n    const [displayName, setDisplayName] = useState(name);\n    const [displayEffect, setDisplayEffect] = useState(effect);\n    const [displayPendulumEffect, setDisplayPendulumEffect] = useState(pendulum_effect);\n    const [onlineCharPicker, setOnlineCharPicker] = useState('');\n    const ref = useRef();\n    \n\n    return <div className=\"card-info-panel\">\n        {children}\n        <CharPicker\n            targetId={onlineCharPicker}\n            onPick={value => {\n                if (ref.current) (ref.current as any)?.props?.onChange?.({\n                    target: { value }\n                });\n            }}\n        />\n        <Radio.Group className=\"foil-radio checkbox-train\" value={foil} onChange={onFoilChange}>\n            <label className=\"standalone-addon ant-input-group-addon\">\n                <span>Foil</span>\n            </label>\n            {foilButton}\n        </Radio.Group>\n        <Radio.Group className=\"frame-radio\" value={frame} onChange={onFrameChange}>\n            {frameButton}\n        </Radio.Group>\n        <hr />\n        <div className=\"card-header custom-gap\">\n            <Input\n                id=\"name\"\n                ref={onlineCharPicker === 'name' ? ref as any : null}\n                onFocus={() => setOnlineCharPicker('name')}\n                allowClear\n                addonBefore={<>Name <StylePicker defaultType={nameStyleType} defaultValue={nameStyle} onChange={onNameColorChange} /></>}\n                placeholder=\"Card Name\"\n                value={displayName}\n                className=\"name-input\"\n                onChange={ev => {\n                    onNameChange(ev);\n                    setDisplayName(ev.target.value);\n                }}\n            />\n            {isMonster\n                ? !isLink\n                    ? <Radio.Group className=\"checkbox-train\" value={`${star}`} onChange={onStarChange}>\n                        <label className=\"standalone-addon ant-input-group-addon\">\n                            <span>{isXyz ? 'Rank' : 'Level'}</span>\n                        </label>\n                        {starButton}\n                    </Radio.Group>\n                    : null\n                : <Radio.Group className=\"checkbox-train\" value={subFamily} onChange={onSubFamilyChange}>\n                    <label className=\"standalone-addon ant-input-group-addon\">\n                        <span>Icon</span>\n                    </label>\n                    {iconButton}\n                </Radio.Group>}\n            <Radio.Group className=\"checkbox-image-train checkbox-train\" value={attribute} onChange={onAttributeChange}>\n                <label className=\"standalone-addon ant-input-group-addon\">\n                    <span>Attribute</span>\n                </label>\n                {attributeButton}\n            </Radio.Group>\n        </div>\n        <div key=\"pic\" className=\"main-info\">\n            <div className=\"main-info-first\">\n                <Input\n                    id=\"set-id\"\n                    ref={onlineCharPicker === 'set-id' ? ref as any : null}\n                    onFocus={() => setOnlineCharPicker('set-id')}\n                    allowClear\n                    className=\"set-id-input\"\n                    addonBefore={<>Set ID<RandomButton seeder={randomSetID} onGenerate={onSetIDChange} /></>}\n                    onChange={onSetIDChange}\n                    placeholder=\"Set ID\"\n                    value={set_id}\n                />\n                {(isMonster && frame !== 'link' && frame !== 'token') && <div className=\"pendulum-container\">\n                    <div className=\"joined-row\">\n                        <Checkbox onChange={onIsPendulumChange} checked={isPendulum}>Is Pendulum?</Checkbox>\n                        {isPendulum && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>Mirror Scale?</Checkbox>}\n                    </div>\n                    {isPendulum && <>\n                        <div>\n                            <Input key=\"blue-scale\" addonBefore={<span>\n                                <span style={{ color: '#3b9dff' }}>Blue</span> Scale\n                            </span>}\n                            value={blue_scale}\n                            onChange={e => {\n                                onBlueScaleChange(e);\n                                if (isMirrorScale) onRedScaleChange(e);\n                            }} />\n                        </div>\n                        <div>\n                            <Input key=\"red-scale\" addonBefore={<span>\n                                <span style={{ color: '#ff6f6f' }}>Red</span> Scale\n                            </span>}\n                            value={red_scale}\n                            onChange={e => {\n                                if (isMirrorScale) onBlueScaleChange(e);\n                                onRedScaleChange(e);\n                            }} />\n                        </div>\n                        <div className=\"joined-row\" style={{ position: 'relative' }}>\n                            <TextArea key=\"pendulum-effect\"\n                                id=\"pendulum-effect\"\n                                ref={onlineCharPicker === 'pendulum-effect' ? ref as any : null}\n                                onFocus={() => setOnlineCharPicker('pendulum-effect')}\n                                allowClear\n                                placeholder=\"Pendulum effect\"\n                                value={displayPendulumEffect}\n                                onChange={ev => {\n                                    onPendulumEffectChange(ev);\n                                    setDisplayPendulumEffect(ev.target.value);\n                                }}\n                                rows={6}\n                            />\n                        </div>\n                    </>}\n                </div>}\n                <Input addonBefore=\"Type\"\n                    id=\"type\"\n                    ref={onlineCharPicker === 'type' ? ref as any : null}\n                    onFocus={() => setOnlineCharPicker('type')}\n                    allowClear\n                    className=\"hide-selected\"\n                    onChange={ev => {\n                        const value = ev.target.value;\n\n                        setDisplayTypeAbility(value);\n                        onTypeAbilityChange(value\n                            .split('/')\n                            .map(entry => entry.trim())\n                            .filter(entry => typeof entry === 'string' && entry.length > 0));\n                    }}\n                    placeholder=\"Type / Ability\"\n                    style={{ width: '100%' }}\n                    value={displayTypeAbility}\n                />\n                <TextArea key=\"effect\"\n                    id=\"card-effect\"\n                    ref={onlineCharPicker === 'card-effect' ? ref as any : null}\n                    onFocus={() => setOnlineCharPicker('card-effect')}\n                    allowClear\n                    placeholder=\"Card effect\"\n                    value={displayEffect}\n                    rows={10}\n                    onChange={ev => {\n                        onEffectChange(ev);\n                        setDisplayEffect(ev.target.value);\n                    }}\n                />\n                <div className=\"card-footer-input\">\n                    {isMonster\n                        ? <Input key=\"atk\"\n                            id=\"atk\"\n                            ref={onlineCharPicker === 'atk' ? ref as any : null}\n                            onFocus={() => setOnlineCharPicker('atk')}\n                            addonBefore=\"ATK\" allowClear value={atk} onChange={onATKChange} />\n                        : <div />}\n                    {isMonster\n                        ? <Input key=\"def\"\n                            id=\"def\"\n                            ref={onlineCharPicker === 'def' ? ref as any : null}\n                            onFocus={() => setOnlineCharPicker('def')}\n                            addonBefore=\"DEF\" allowClear value={def} onChange={onDEFChange} />\n                        : <div />\n                    }\n                    <Input\n                        id=\"password\"\n                        ref={onlineCharPicker === 'password' ? ref as any : null}\n                        onFocus={() => setOnlineCharPicker('password')}\n                        allowClear\n                        className=\"password-input\"\n                        addonBefore={<>Password<RandomButton seeder={randomPassword} onGenerate={onPasscodeChange} /></>}\n                        onChange={onPasscodeChange}\n                        placeholder=\"Password\"\n                        value={passcode}\n                    />\n                    <Checkbox\n                        className=\"input-1st\"\n                        onChange={onFirstEditionChange}\n                        checked={isFirstEdition}\n                    >\n                        Is 1st Edition?\n                    </Checkbox>\n                    <Input addonBefore=\"Creator\"\n                        id=\"creator\"\n                        ref={onlineCharPicker === 'creator' ? ref as any : null}\n                        onFocus={() => setOnlineCharPicker('creator')}\n                        allowClear\n                        className=\"creator-input\"\n                        onChange={onCreatorChange}\n                        placeholder=\"Creator\"\n                        value={creator}\n                    />\n                    <Radio.Group className=\"sticker-input checkbox-image-train checkbox-train\" value={sticker} onChange={onStickerChange}>\n                        <label className=\"standalone-addon ant-input-group-addon\">\n                            <span>Sticker</span>\n                        </label>\n                        {stickerButton}\n                    </Radio.Group>\n                </div>\n            </div>\n            <div className=\"main-info-second\">\n                <ImageCropper\n                    noRedrawNumber={1}\n                    defaultExternalSource={picture}\n                    defaultCropInfo={defaultCropInfo}\n                    previewCanvasRef={receivingCanvasRef}\n                    onSourceChange={onPictureChange}\n                    onImageChange={onImageChange}\n                >\n                    {isLink\n                        ? <LinkMarkChooser defaultValue={link_map} onChange={onLinkMapChange} />\n                        : <div />}\n                </ImageCropper>\n            </div>\n        </div>\n    </div>;\n};","export type FontSize = {\n    fontSize: number,\n    lineHeight: number,\n    lineCount: number,\n};\nexport type BoxSize = {\n\twidth: number,\n\ttop: number,\n\tleft: number,\n};\n\nexport const monsterFontList: FontSize[] = [\n    { fontSize: 17, lineHeight: 17, lineCount: 6 },\n    { fontSize: 14, lineHeight: 14, lineCount: 7 },\n    { fontSize: 12, lineHeight: 12, lineCount: 8 },\n    { fontSize: 11, lineHeight: 11, lineCount: 9 },\n    { fontSize: 10, lineHeight: 10, lineCount: 10 },\n    { fontSize: 9, lineHeight: 9, lineCount: 11 },\n    { fontSize: 8, lineHeight: 8, lineCount: 12 },\n];\nexport const monsterSizeList: BoxSize[] = [\n    { width: 463, top: 620, left: 43.89 },\n    { width: 463, top: 624, left: 43.89 },\n    { width: 463, top: 624, left: 43.89 },\n    { width: 463, top: 624, left: 43.89 },\n    { width: 463, top: 624, left: 43.89 },\n    { width: 463, top: 624, left: 43.89 },\n    { width: 463, top: 624, left: 43.89 },\n];\nexport const monsterVanillaFontList: FontSize[] = [\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 6 },\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 7 },\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 8 },\n];\n\nexport const pendulumFontList: FontSize[] = [\n    { fontSize: 16.41, lineHeight: 16.44, lineCount: 5 },\n    { fontSize: 16.41, lineHeight: 16.44, lineCount: 5 },\n];\nexport const pendulumSizeList: BoxSize[] = [\n    { width: 375, top: 504.5, left: 87.05 },\n    { width: 375, top: 504.5, left: 87.05 },\n];\n\nexport const stFontList: FontSize[] = [\n    { fontSize: 16.41, lineHeight: 16.74, lineCount: 8 },\n    { fontSize: 13.46, lineHeight: 14.28, lineCount: 10 },\n];\nexport const stSizeList: BoxSize[] = [\n    { width: 461, top: 601, left: 45 },\n    { width: 461, top: 601, left: 45 },\n];\n\nexport type TypeSize = {\n\ttop: number,\n\tleft: number,\n    bracketSize: {\n        char: number,\n        bracketSpace: number,\n        bracketOffsetTop: number,\n    },\n    upperCaseSize: number,\n    upperCaseScale: number,\n    lowerCaseSize: number,\n    lowerCaseScale: number,\n    spaceScale: number,\n    spaceSize: {\n        frontSpace: number,\n        char: number,\n        behindSpace: number,\n    },\n    iconSpace: number,\n};\nexport const typeSizeMap: Record<string, TypeSize> = {\n    small: {\n        top: 622,\n        left: 43,\n        bracketSize: {\n            char: 18.71,\n            bracketSpace: 8.51,\n            bracketOffsetTop: 1.64,\n        },\n        upperCaseSize: 20,\n        upperCaseScale: 1,\n        lowerCaseSize: 16,\n        lowerCaseScale: 1.1,\n        spaceScale: 1,\n        spaceSize: {\n            frontSpace: 5,\n            char: 21,\n            behindSpace: 15,\n        },\n        iconSpace: 0,\n    },\n    medium: {\n        top: 620.80,\n        left: 43,\n        bracketSize: {\n            char: 19.69,\n            bracketSpace: 8.51,\n            bracketOffsetTop: 1.64,\n        },\n        upperCaseSize: 21,\n        upperCaseScale: 1,\n        lowerCaseSize: 19,\n        lowerCaseScale: 0.95,\n        spaceScale: 1,\n        spaceSize: {\n            frontSpace: 5,\n            char: 23,\n            behindSpace: 15,\n        },\n        iconSpace: 0,\n    },\n    large: {\n        top: 126,\n        left: 494,\n        bracketSize: {\n            char: 25,\n            bracketSpace: 11,\n            bracketOffsetTop: 2,\n        },\n        upperCaseSize: 26,\n        upperCaseScale: 1.1,\n        lowerCaseSize: 23,\n        lowerCaseScale: 1,\n        spaceScale: 1.4,\n        spaceSize: {\n            frontSpace: 5,\n            char: 23,\n            behindSpace: 15,\n        },\n        iconSpace: 32,\n    },\n};","export const arrowPositionList = [\n    { top: 126, left: 46, width: 50, height: 51 },\n    { top: 116, left: 226, width: 99, height: 32 },\n    { top: 126, left: 453, width: 51, height: 51 },\n    { top: 305, left: 35, width: 33, height: 99 },\n    { top: 0, left: 0, width: 0, height: 0 },   // Middle\n    { top: 305, left: 482, width: 32, height: 99 },\n    { top: 534, left: 46, width: 50, height: 50 },\n    { top: 562, left: 226, width: 99, height: 33 },\n    { top: 534, left: 453, width: 51, height: 50 },\n];\n\nexport const foilPosition: Record<string, {\n    art: { left: number }\n}> = {\n    gold: {\n        art: {\n            left: 2,\n        }\n    },\n    platinum: {\n        art: {\n            left: 1,\n        }\n    },\n};","import { FontSize, monsterFontList, BoxSize, monsterSizeList } from '../const';\nimport { defaultTextStyle, TextStyle } from '../model';\nimport { splitEffect, createCondenser, quoteConvert } from '../util';\n\nexport const drawName = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    edge: number,\n    baseline: number,\n    maxWidth: number,\n    style: TextStyle,\n) => {\n    if (ctx) {\n        ctx.fillStyle = style.fillStyle;\n        const splittedText = quoteConvert(value).split(/([^&A-Za-z0-9\\-/\\s()])/g);\n        const contentWidth = splittedText\n            .reduce((prev, cur, index) => {\n                if (index % 2 === 0) ctx.font = '64.59px MatrixRegularSmallCaps';\n                else ctx.font = '54.59px matrix';\n\n                return prev + ctx.measureText(cur).width;\n            }, 0);\n\n        // ctx.fillText(value, edge, baseline, maxWidth);\n        if (contentWidth > 0) {\n            const condenseRatio = Math.min(maxWidth / contentWidth, 1);\n            ctx.scale(condenseRatio, 1);\n            splittedText\n                .reduce((prev, cur, index) => {\n                    // ctx.shadowColor = 'black';\n                    // ctx.shadowOffsetY = 1;\n                    // ctx.shadowBlur = 3;\n                    // ctx.globalAlpha = 0.8;\n                    if (index % 2 === 0) ctx.font = '64.59px MatrixRegularSmallCaps';\n                    else ctx.font = 'small-caps 54.59px matrix';\n    \n                    ctx.fillText(cur, prev / condenseRatio, baseline);\n                    return prev + ctx.measureText(cur).width * condenseRatio;\n                }, edge);\n            // ctx.globalAlpha = 1;\n            ctx.scale(1 / condenseRatio, 1);\n            ctx.fillStyle = defaultTextStyle.fillStyle;\n        }\n    }\n};\n\nexport const drawScale = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    edge: number,\n    baseline: number,\n) => {\n    if (ctx) {\n        const digitList = `${value}`.split('');\n        let totalWidth = 0;\n\n        digitList.forEach(digit => {\n            totalWidth += (digit === '1' ? ctx.measureText(digit).width * 0.65 : ctx.measureText(digit).width);\n        });\n        let accLeft = edge - totalWidth / 2;\n\n        digitList.forEach(digit => {\n            ctx.fillText(digit, digit === '1' ? accLeft - 3 : accLeft, baseline);\n            accLeft += (digit === '1' ? ctx.measureText(digit).width * 0.65 : ctx.measureText(digit).width);\n        });\n    }\n};\n\nexport const drawEffect = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    isPendulumEffect = false,\n    isNormal = false,\n    fontList: FontSize[] = monsterFontList,\n    sizeList: BoxSize[] = monsterSizeList,\n) => {\n    const normalizedContent = quoteConvert(content);\n    let effectIndexSize = 0;\n    if (ctx) {\n        const tolerantPerSentence: Record<string, number> = {\n            '1': 645,\n            '2': 665,\n            '3': 685,\n        };\n        const {\n            body: effectBody,\n            flavorCondition: effectFlavorCondition,\n            material: effectMaterial,\n        } = isPendulumEffect\n            ? {\n                body: normalizedContent,\n                flavorCondition: '',\n                material: '',\n            } : splitEffect(normalizedContent, isNormal);\n\n        const additionalLineCount = (effectMaterial.length > 0 ? 1 : 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\n        const sentencizeText = effectBody.split('\\n');\n        const bulletSymbol = '●';\n        const bulletSymbolWidth = 15;\n        const specialSymbol = '#@∞';\n        const breakableSymbol = '\\\\s-';\n        \n        const tokenizeR = new RegExp(`([${specialSymbol}${breakableSymbol}])`, 'g');\n        const specialSymbolReg = new RegExp(specialSymbol, 'g');\n\n        while(effectIndexSize < fontList.length) {\n            const { fontSize, lineHeight, lineCount } = fontList[effectIndexSize];\n            const { left, width, top } = sizeList[effectIndexSize];\n            const condenser = createCondenser();\n            let effectiveRatio = 1000;\n\n            const maxLine = Math.max(sentencizeText.length, lineCount);\n\n            ctx.font = `${isNormal ? 'italic' : ''} ${fontSize}px MatrixBook`;\n            ctx.textAlign = 'left';\n\n            const switchFont = (func: () => void) => {\n                const tempFont = ctx.font;\n                const largeSize = fontSize * 1.15;\n                ctx.font = tempFont.replace('MatrixBook', 'matrix').replace(`${fontSize}`, `${largeSize}`);\n                func();\n                ctx.font = tempFont;\n            };\n\n            // [CREATE SENTENCE ON EACH LINE]\n            let lineList: { text: string, width: number, isLast: boolean }[] = [];\n            const createSentence = () => {\n                lineList = [];\n\n                return sentencizeText.reduce((prev, curr) => {\n                    // The width is \"expand\" based on condense ratio so all the calculate does not need to be scaled\n                    const condenseRatio = condenser.getMedian() / 1000;\n                    const hypoWidth = width / condenseRatio;\n                    const tokenizedText = curr.split(tokenizeR);\n                    let currentLineCount = 1;\n                    let tokenSentence: string[] = [];\n                    let totalWidth = 0;\n\n                    for (let cnt = 0; cnt < tokenizedText.length; cnt++) {\n                        let tokenWidth = 0;\n                        /**\n                         * If bullet symbol is met, it will become \"wider\" based on condense ratio\n                         * so that when the whole line is condense, bullet symbol's width become\n                         * \"normal\", as if it were not condensed\n                         */\n                        if (tokenizedText[cnt] === bulletSymbol) tokenWidth = bulletSymbolWidth / condenseRatio;\n                        /**\n                         * Some special symbol required different font\n                         */\n                        else if (specialSymbolReg.test(tokenizedText[cnt])) {\n                            switchFont(() => {\n                                tokenWidth = ctx.measureText(tokenizedText[cnt]).width;\n                            });\n                        } else tokenWidth = ctx.measureText(tokenizedText[cnt]).width;\n                        if (totalWidth + tokenWidth > hypoWidth) {\n                            // If the next token cause overflow, wrap it down\n                            const fullString = tokenSentence.join('').trim();\n                            // Calculate the line width as if the bullet is wider\n                            const fullStringSplittedByBullet = fullString.split(bulletSymbol);\n                            lineList.push({\n                                text: fullString,\n                                width: fullStringSplittedByBullet.reduce((prev, curr) => prev + ctx.measureText(curr).width, 0)\n                                    + (fullStringSplittedByBullet.length - 1) * bulletSymbolWidth / condenseRatio,\n                                isLast: false,\n                            });\n                            totalWidth = tokenWidth;\n                            tokenSentence = [tokenizedText[cnt]];\n                            currentLineCount += 1;\n                        } else {\n                            totalWidth += tokenWidth;\n                            tokenSentence.push(tokenizedText[cnt]);\n                        }\n                    }\n\n                    const fullString = tokenSentence.join('').trim();\n                    const fullStringSplittedByBullet = fullString.split(bulletSymbol);\n                    lineList.push({\n                        text: fullString,\n                        width: fullStringSplittedByBullet.reduce((prev, curr) => prev + ctx.measureText(curr).width, 0)\n                            + (fullStringSplittedByBullet.length - 1) * bulletSymbolWidth / condenseRatio,\n                        isLast: true,\n                    });\n    \n                    return prev + currentLineCount;\n                }, 0) + additionalLineCount;\n            };\n\n            // [FIND SUITABLE CONDENSE RATIO]\n            while (condenser.getIterateCount() >= 0) {\n                if (condenser.getIterateCount() <= 0) {\n                    // When out of iteration, return the concluded median\n                    effectiveRatio = condenser.getMedian();\n                    break;\n                } else {\n                    const lineCount = createSentence();\n\n                    if (lineCount > maxLine) {\n                        // If overflow, lower the median and apply it\n                        condenser.searchDown();\n                    } else {\n                        if (condenser.getMedian() === 1000) break;\n                        else effectiveRatio = condenser.reverseSearch();\n                    }\n                }\n            }\n\n            // [START DRAWING]\n            const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number) => {\n                ctx.beginPath();\n                ctx.arc(edge + 7, baseline - 5.5, 5.5, 0, 2 * Math.PI, false);\n                ctx.fill();\n                ctx.lineWidth = 1;\n                ctx.strokeStyle = '#003300';\n                ctx.stroke();\n            };\n            if (effectiveRatio < (tolerantPerSentence[`${sentencizeText.length}`] ?? tolerantPerSentence['3'])) {\n                effectIndexSize += 1;\n            } else {\n                ctx?.clearRect(0, 0, 549, 750);\n                let baseline = top + lineHeight;\n                if (effectMaterial.length > 0) {\n                    let actualWidth = ctx.measureText(effectMaterial).width;\n                    let condenseRatio = Math.min(width / actualWidth, 1);\n\n                    ctx.scale(condenseRatio, 1);\n                    ctx.fillText(effectMaterial, left / condenseRatio, baseline);\n                    baseline += lineHeight;\n                    ctx.scale(1 / condenseRatio, 1);\n                }\n\n                const sigmoidRatio = effectiveRatio / 1000; // Fancy way to force ratio in to 0-1 range\n                lineList.forEach(({\n                    text,\n                    width: actualWidth,\n                    isLast,\n                }) => {\n                    const condenseRatio = isLast\n                        ? Math.min(sigmoidRatio, 1)\n                        : width / actualWidth;\n\n                    if (condenseRatio <= 1) {\n                        ctx.scale(condenseRatio, 1);\n                        const splitter = new RegExp(`([${bulletSymbol}${specialSymbol}])`, 'g');\n                        const splittedText = text.split(splitter);\n\n                        splittedText.reduce((prev, cur, index) => {\n                            let edge = prev;\n\n                            // Normal text\n                            if (index % 2 === 0) {\n                                ctx.fillText(cur, edge / condenseRatio, baseline);\n                                edge += ctx.measureText(cur).width * condenseRatio;\n                            } else {\n                                // Special bullet\n                                if (cur === bulletSymbol) {\n                                    ctx.scale(1 / condenseRatio, 1);\n                                    drawBullet(ctx, edge, baseline);\n                                    edge += 15;\n                                    ctx.scale(condenseRatio, 1);\n                                } else {\n                                    switchFont(() => {\n                                        ctx.fillText(cur, edge / condenseRatio, baseline);\n                                        edge += ctx.measureText(cur).width * condenseRatio;\n                                    });\n                                }\n                            }\n\n                            return edge;\n                        }, left);\n                        baseline += lineHeight;\n                        ctx.scale(1 / condenseRatio, 1);\n                    } else {\n                        const splitter = new RegExp(`([${bulletSymbol}${specialSymbol} ])`, 'g');\n                        const spaceSeparatedText = text.split(splitter);\n                        ctx.scale(1, 1);\n                        let nonSpaceWidth = 0;\n                        let spaceCount = 0;\n\n                        spaceSeparatedText.forEach(entry => {\n                            if (entry === ' ') spaceCount += 1;\n                            else if (entry === bulletSymbol) nonSpaceWidth += 15;\n                            else if (specialSymbolReg.test(entry)) {\n                                switchFont(() => nonSpaceWidth += ctx.measureText(entry).width);\n                            } else nonSpaceWidth += ctx.measureText(entry).width;\n                        });\n                        // Split text by \"space\", then distribute remaining width to those spaces, resulting in \"widen\" space\n                        const spaceWidth = spaceCount > 0 ? (width - nonSpaceWidth) / spaceCount : 0;\n\n                        spaceSeparatedText.reduce((prev, cur, index) => {\n                            let edge = prev;\n\n                            // Normal text\n                            if (index % 2 === 0) {\n                                ctx.fillText(cur, edge, baseline);\n                                edge += ctx.measureText(cur).width;\n                            } else {\n                                // Special bullet\n                                if (cur === bulletSymbol) {\n                                    drawBullet(ctx, edge, baseline);\n                                    edge += 15;\n                                } else if (cur === ' ') {\n                                    edge += spaceWidth;\n                                } else {\n                                    switchFont(() => {\n                                        ctx.fillText(cur, edge, baseline);\n                                        edge += ctx.measureText(cur).width;\n                                    });\n                                }\n                            }\n\n                            return edge;\n                        }, left);\n                        baseline += lineHeight;\n                    }\n                });\n\n                if (effectFlavorCondition.length > 0) {\n                    let actualWidth = ctx.measureText(effectFlavorCondition).width;\n                    let condenseRatio = Math.min(width / actualWidth, 1);\n\n                    ctx.font = `${fontSize}px MatrixBook`;\n                    ctx.scale(condenseRatio, 1);\n                    ctx.fillText(effectFlavorCondition, left / condenseRatio, baseline);\n                    baseline += lineHeight;\n                    ctx.scale(1 / condenseRatio, 1);\n                }\n                break;\n            }\n        }\n\n        return effectIndexSize;\n    }\n    return effectIndexSize;\n};","export const measureWithSymbol = (\n    ctx: CanvasRenderingContext2D,\n    content: string,\n    symbol: string,\n    maxWidth: number,\n) => {\n    const splittedContent = content.split(symbol);\n    const splittedWidth = splittedContent.map(entry => ctx.measureText(entry).width);\n    const symbolWidth = ctx.measureText(symbol).width;\n    const totalCondensableWidth = splittedWidth.reduce((prev, curr) => prev + curr, 0);\n    const returnBundle = {\n        splittedContent,\n        splittedWidth,\n        symbolWidth,\n        totalCondensableWidth,\n        condenseRatio: 1,\n    };\n\n    if (totalCondensableWidth > 0) {\n        // Calculate as if the \"symbol\" always appear as full width\n        returnBundle.condenseRatio = Math.min((maxWidth - (splittedWidth.length - 1) * symbolWidth) / totalCondensableWidth, 1);\n    }\n\n    return returnBundle;\n};\n\nexport const fillTextLeftWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacingRatio: number,\n    edge: number,\n    baseline: number,\n) => {\n    if (ctx) {\n        ctx.textAlign = 'left';\n        const charList = str.split('');\n        let curLeft = edge;\n\n        charList.forEach(char => {\n            ctx.fillText(char, curLeft, baseline);\n            curLeft += ctx.measureText(char).width * (1 + (letterSpacingRatio / 2));\n        });\n    }\n};\nexport const fillTextRightWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacingRatio: number,\n    edge: number,\n    baseline: number,\n) => {\n    if (ctx) {\n        ctx.textAlign = 'right';\n        const charList = str.split('');\n        let curRight = edge;\n\n        charList.forEach((c, index) => {\n            const char = charList[charList.length - index - 1];\n            ctx.fillText(char, curRight, baseline);\n            curRight -= ctx.measureText(char).width * (1 + (letterSpacingRatio / 2));\n        });\n        return curRight;\n    };\n    return edge;\n};\n\nexport const fillTextLeftWithLimit = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    edge: number,\n    baseline: number,\n    maxWidth: number,\n) => {\n    if (ctx) {\n        const contentWidth = ctx.measureText(content).width;\n\n        if (contentWidth > 0) {\n            const condenseRatio = Math.min(maxWidth / contentWidth, 1);\n            ctx.scale(condenseRatio, 1);\n            ctx.fillText(content, edge / condenseRatio, baseline);\n            ctx.scale(1 / condenseRatio, 1);\n            ctx.fillStyle = '#000000';\n        }\n    }\n};","import { fillTextRightWithSpacing, measureWithSymbol } from './util';\n\nexport const draw1stEdition = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n) => {\n    if (ctx) {\n        ctx.font = 'bold 16px palatino-linotype-bold';\n\n        let left = 95;\n        ctx.fillText('1', left, 777);\n        left += ctx.measureText('1').width - 2;\n\n        ctx.font = 'bold 12px palatino-linotype-bold';\n        ctx.fillText('st', left, 777 - 5);\n        left += ctx.measureText('st').width;\n\n        ctx.font = 'bold 15px palatino-linotype-bold';\n        ctx.fillText(' Edition', left, 777);\n    }\n};\n\nexport const drawCreatorText = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n) => {\n    if (ctx) {\n        ctx.font = '16px stone-serif-regular';\n\n        const uncondensableSymbol = '©';\n        const {\n            splittedContent,\n            splittedWidth,\n            symbolWidth,\n            condenseRatio,\n        } = measureWithSymbol(ctx, content, uncondensableSymbol, 257);\n\n        if (condenseRatio < 1) {\n            ctx.textAlign = 'left';\n            ctx.scale(condenseRatio, 1);\n            splittedContent.reduce((prev, cur, index) => {\n                // Fill condense text at the current edge\n                ctx.fillText(cur, prev / condenseRatio, 777);\n                // Increase edge equal to the draw text (condense ratio factored)\n                let nextEdge = prev + splittedWidth[index] * condenseRatio;\n                if (index < splittedContent.length - 1) {\n                    // Restore 1:1 ratio\n                    ctx.scale(1 / condenseRatio, 1);\n                    // Increase edge equal to the character \"©\" (condense ratio is 1 so no factored)\n                    ctx.fillText(uncondensableSymbol, nextEdge, 777);\n                    nextEdge += symbolWidth;\n                    // Restore condense ratio\n                    ctx.scale(condenseRatio, 1);\n                }\n                return nextEdge;\n            }, 496 - 257);\n            ctx.scale(1 / condenseRatio, 1);\n        } else {\n            ctx.textAlign = 'right';\n            fillTextRightWithSpacing(ctx, content, -0.15, 496 / condenseRatio, 777);\n        }\n        ctx.textAlign = 'left';\n    }\n};\n\nexport const drawAD = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    $value: string | number,\n    edge: number,\n    baseline: number,\n) => {\n    if (ctx) {\n        ctx.textAlign = 'left';\n        const tokenizedText = `${$value}`.split('?');\n\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\n            ctx.font = '25px MatrixBoldSmallCaps';\n            let nextWidth = prev + ctx.measureText(curr).width;\n\n            if (index < tokenizedText.length - 1) {\n                ctx.font = '25px matrix';\n                nextWidth += ctx.measureText('?').width;\n            }\n\n            return nextWidth;\n        }, 0);\n\n        if (totalWidth > 0) {\n            const condenseRatio = Math.min(49.94 / totalWidth, 1);\n\n            ctx.scale(condenseRatio, 1);\n            tokenizedText.reduce((prev, curr, index, arr) => {\n                const curText = arr[arr.length - 1 - index];\n                let nextEdge = prev;\n                ctx.font = '25px MatrixBoldSmallCaps';\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\n\n                if (index < tokenizedText.length - 1) {\n                    ctx.font = 'bold 25px matrix';\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\n                }\n    \n                return nextEdge;\n            }, edge + 49.94);\n            ctx.scale(1 / condenseRatio, 1);\n        }\n    }\n};","import { TypeSize } from '../const';\n\ntype Aligment = 'left' | 'right';\nexport const drawBracketTemplate = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    size: TypeSize,\n    alignment: Aligment,\n) => {\n    return (edge: number) => {\n        if (ctx) {\n            const {\n                top: baseline,\n                bracketSize: { char: bracketChar, bracketOffsetTop }\n            } = size;\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\n\n            ctx.font = `bold ${bracketChar}px stone-serif-bold`;\n            ctx.textAlign = alignment;\n            ctx.fillText(content, edge, baseline - bracketOffsetTop);\n            return edge + ctx.measureText(content).width * alignmentOffset;\n        }\n        return edge;\n    };\n};\nexport const drawIconSpaceTemplate = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    size: TypeSize,\n    alignment: Aligment,\n) => {\n    return (edge: number) => {\n        if (ctx) {\n            const { iconSpace } = size;\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\n\n            return edge + iconSpace * alignmentOffset;\n        }\n        return edge;\n    };\n};\nexport const drawBracketSpaceTemplate = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    size: TypeSize,\n    alignment: Aligment,\n) => {\n    return (edge: number) => {\n        if (ctx) {\n            const { top: baseline, bracketSize: { bracketSpace } } = size;\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\n\n            ctx.font = `bold ${bracketSpace}px stone-serif-bold`;\n            ctx.textAlign = alignment;\n            ctx.fillText(content, edge, baseline);\n            return edge + ctx.measureText(content).width * alignmentOffset;\n        }\n        return edge;\n    };\n};\nexport const drawTextTemplate = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    isLast = false,\n    size: TypeSize,\n    alignment: Aligment,\n) => {\n    const {\n        top: baseline,\n        spaceSize: { frontSpace, char: spaceChar, behindSpace },\n        upperCaseScale,\n        upperCaseSize,\n        lowerCaseScale,\n        lowerCaseSize,\n        spaceScale,\n    } = size;\n    const alignmentOffset = alignment === 'left' ? 1 : -1;\n    const drawSlashTemplate = (\n        ctx: CanvasRenderingContext2D,\n        baseOffset: number,\n    ) => {\n        let totalOffset = baseOffset;\n        ctx.font = `bold ${frontSpace}px stone-serif-bold`;\n        ctx.fillText(' ', totalOffset, baseline);\n        totalOffset += ctx.measureText(' ').width * alignmentOffset;\n\t\n        ctx.font = `oblique bold ${spaceChar}px stone-serif-bold`;\n        ctx.scale(0.65, 1);\n        ctx.fillText('/', totalOffset / 0.65, baseline);\n        totalOffset += ctx.measureText('/').width * 0.65 * alignmentOffset;\n        ctx.scale(1 / 0.65, 1);\n\t\n        ctx.font = `bold ${behindSpace}px stone-serif-bold`;\n        ctx.fillText(' ', totalOffset, baseline);\n        totalOffset += ctx.measureText(' ').width * alignmentOffset;\n        return totalOffset;\n    };\n\n    return (left: number) => {\n        let totalOffset = left;\n        if (ctx) {\n            ctx.textAlign = alignment;\n\n            if (!isLast && alignment === 'right') totalOffset = drawSlashTemplate(ctx, totalOffset);\n            content\n                .split('')\n                .forEach((c, index, arr) => {\n                    const char = alignment === 'left' ? arr[index] : arr[arr.length - 1 - index];\n                    if (/[A-Z]/.test(char)) {\n                        ctx.font = `bold ${upperCaseSize}px stone-serif-bold`;\n                        ctx.scale(upperCaseScale, 1);\n                        ctx.fillText(char, totalOffset / upperCaseScale, baseline);\n                        totalOffset += ctx.measureText(char).width * upperCaseScale * alignmentOffset;\n                        ctx.scale(1 / upperCaseScale, 1);\n                    } else if (/\\s/.test(char)) {\n                        ctx.font = `bold ${lowerCaseSize}px stone-serif-bold`;\n                        ctx.scale(spaceScale, 1);\n                        ctx.fillText(char, totalOffset / spaceScale, baseline);\n                        totalOffset += ctx.measureText(char).width * spaceScale * alignmentOffset;\n                        ctx.scale(1 / spaceScale, 1);\n                    } else {\n                        const upperChar = char.toLocaleUpperCase();\n                        ctx.font = `bold ${lowerCaseSize}px stone-serif-bold`;\n                        ctx.scale(lowerCaseScale, 1);\n                        ctx.fillText(upperChar, totalOffset / lowerCaseScale, baseline);\n                        totalOffset += ctx.measureText(upperChar).width * lowerCaseScale * alignmentOffset;\n                        ctx.scale(1 / lowerCaseScale, 1);\n                    }\n                });\n            if (!isLast && alignment === 'left') totalOffset = drawSlashTemplate(ctx, totalOffset);\n            return totalOffset;\n        }\n        return totalOffset;\n    };\n};","const imageCacheMap: Record<string, {\n    image: HTMLImageElement,\n    ready: boolean,\n}> = {};\n\nexport const drawFromSource = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number),\n    sy: number | ((image: HTMLImageElement) => number),\n) => {\n    if (!ctx) return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        if (imageCacheMap[source]?.ready === true) {\n            const img = imageCacheMap[source].image;\n            let normalizedX = typeof sx === 'number' ? sx : sx(img);\n            let normalizedY = typeof sy === 'number' ? sy : sy(img);\n            ctx.drawImage(img, normalizedX, normalizedY);\n            resolve(true);\n        } else {\n            const img = new Image();\n            img.src = process.env.PUBLIC_URL + source;\n            img.onload = () => {\n                let normalizedX = typeof sx === 'number' ? sx : sx(img);\n                let normalizedY = typeof sy === 'number' ? sy : sy(img);\n                ctx.drawImage(img, normalizedX, normalizedY);\n                imageCacheMap[source].ready = true;\n                resolve(true);\n            };\n            img.onerror = () => {\n                resolve(false);\n            };\n            imageCacheMap[source] = {\n                image: img,\n                ready: false,\n            };\n        }\n    });\n};\n\nexport const drawFromSourceWithSize = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number),\n    sy: number | ((image: HTMLImageElement) => number),\n    dw: number, dh: number,\n) => {\n    if (!ctx) return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        if (imageCacheMap[source]?.ready === true) {\n            const img = imageCacheMap[source].image;\n            let normalizedX = typeof sx === 'number' ? sx : sx(img);\n            let normalizedY = typeof sy === 'number' ? sy : sy(img);\n            ctx.drawImage(img, normalizedX, normalizedY, dw, dh);\n            resolve(true);\n        } else {\n            const img = new Image();\n            img.src = process.env.PUBLIC_URL + source;\n            img.onload = () => {\n                let normalizedX = typeof sx === 'number' ? sx : sx(img);\n                let normalizedY = typeof sy === 'number' ? sy : sy(img);\n                ctx.drawImage(img, normalizedX, normalizedY, dw, dh);\n                imageCacheMap[source].ready = true;\n                resolve(true);\n            };\n            img.onerror = () => {\n                resolve(false);\n            };\n            imageCacheMap[source] = {\n                image: img,\n                ready: false,\n            };\n        }\n    });\n};","\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport './app.scss';\nimport 'antd/dist/antd.css';\nimport {\n    Card,\n    defaultMonster,\n    defaultTextStyle,\n    iconList,\n} from './model';\nimport {\n    checkLink,\n    checkMonster,\n    checkNormal,\n    checkXyz,\n    getCardFrame,\n} from './util';\nimport { CardInputPanel } from './page';\nimport {\n    arrowPositionList,\n    foilPosition,\n    pendulumFontList,\n    pendulumSizeList,\n    stFontList,\n    stSizeList,\n    TypeSize,\n    typeSizeMap,\n} from './const';\nimport {\n    draw1stEdition,\n    drawAD,\n    drawBracketSpaceTemplate,\n    drawBracketTemplate,\n    drawCreatorText,\n    drawEffect,\n    drawIconSpaceTemplate,\n    drawName,\n    drawScale,\n    drawTextTemplate,\n    fillTextLeftWithSpacing,\n    fillTextRightWithSpacing,\n    drawFromSource,\n    drawFromSourceWithSize,\n} from './draw';\nimport WebFont from 'webfontloader';\nimport { ExclamationCircleOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { Popover } from 'antd';\n\nfunction App() {\n    const [isInitializing, setInitializing] = useState(true);\n    const [error, setError] = useState('');\n    const [currentCard, setCard] = useState<Card>(defaultMonster);\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n    const drawCanvasRef = useRef<HTMLCanvasElement>(null);\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const artCanvasRef = useRef<HTMLCanvasElement>(null);\n    const specialFrameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const subFamilyCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const attributeCanvasRef = useRef<HTMLCanvasElement>(null);\n    const ADCanvasRef = useRef<HTMLCanvasElement>(null);\n    const setIdRef = useRef<HTMLCanvasElement>(null);\n    const passcodeRef = useRef<HTMLCanvasElement>(null);\n    const firstEditionRef = useRef<HTMLCanvasElement>(null);\n    const creatorRef = useRef<HTMLCanvasElement>(null);\n    const stickerRef = useRef<HTMLCanvasElement>(null);\n\n    const {\n        frame, foil,\n        name, nameStyleType, nameStyle,\n        pictureCrop,\n        effect,\n        type_ability,\n        isPendulum, pendulum_effect, blue_scale, red_scale,\n        atk, def, link_map,\n        attribute,\n        subFamily,\n        star,\n        set_id,\n        passcode, isFirstEdition, creator, sticker,\n    } = currentCard;\n    const isNormal = checkNormal(currentCard);\n    const isXyz = checkXyz(currentCard);\n    const isLink = checkLink(currentCard);\n    const isMonster = checkMonster(currentCard);\n    const pendulumSize = 'medium';\n\n    const drawingPipeline = useRef<Record<string, () => Promise<any>>>({\n        frame: () => Promise.resolve(),\n        star: () => Promise.resolve(),\n        attribute: () => Promise.resolve(),\n        specialFrame: () => Promise.resolve(),\n        sticker: () => Promise.resolve(),\n    });\n    const [imageChangeCount, setImageChangeCount] = useState(0);\n\n    useEffect(() => {\n        const ctx = frameCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.frame = async () => {\n            ctx?.clearRect(0, 0, 549, 800);\n            const cardType = getCardFrame(frame);\n            const hasFoil = foil !== 'normal';\n\n            await drawFromSource(ctx, `/asset/image/frame/frame-${cardType}.png`, 0, 0);\n            if (hasFoil) {\n                const { art } = foilPosition[foil];\n\n                await drawFromSource(ctx, `/asset/image/frame/frame-art-${foil}.png`, art.left, 120);\n                await drawFromSource(ctx, `/asset/image/frame/frame-effect-${foil}.png`, 0, 580);\n            }\n        };\n    }, [foil, frame]);\n\n    useEffect(() => {\n        const ctx = artCanvasRef.current?.getContext('2d');\n        const previewCtx = previewCanvasRef.current;\n        if (previewCtx && ctx) {\n            ctx.clearRect(0, 0, 548, 650);\n            if (isPendulum) {\n                ctx.drawImage(previewCtx, 38, 144, 474, 470);\n            } else {\n                ctx.drawImage(previewCtx, 67, 147, 416, 416);\n            }\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isPendulum, imageChangeCount]);\n\n    useEffect(() => {\n        const ctx = specialFrameCanvasRef.current?.getContext('2d');\n        \n        drawingPipeline.current.specialFrame = async () => {\n            ctx?.clearRect(0, 0, 549, 800);\n            const hasFoil = foil !== 'normal';\n\n            const cardType = getCardFrame(frame);\n            if (isPendulum && !isLink) {\n                if (!isXyz) await drawFromSource(ctx, `/asset/image/pendulum/overlay-pendulum-${cardType}.png`, 0, 0);\n                await drawFromSource(ctx, `/asset/image/frame/frame-pendulum-${pendulumSize}.png`, 0, 0);\n                if (hasFoil) await drawFromSource(ctx, `/asset/image/frame/frame-pendulum-${pendulumSize}-${foil}.png`, 0, 0);\n            }\n\n            const foiledBorder = !hasFoil ? '/asset/image/frame/frame-border.png' : `/asset/image/frame/frame-border-${foil}.png`;\n            await drawFromSource(ctx, foiledBorder, 0, 0);\n            if (!isPendulum && isLink) {\n                if (hasFoil) await drawFromSource(ctx, `./asset/image/link/link-overlay-${foil}.png`, 0, 110);\n                else await drawFromSource(ctx, '/asset/image/link/link-overlay.png', 66, 146);\n                if (hasFoil) await drawFromSource(ctx, `/asset/image/link/link-overlay-arrow-${foil}.png`, 0, 110);\n\n                await Promise.all(link_map\n                    .map(entry => {\n                        const { left, top, height, width } = arrowPositionList[parseInt(entry) - 1];\n                        if (hasFoil) return drawFromSourceWithSize(ctx, `/asset/image/link/link-arrow-${entry}-${foil}.png`, left, top, width, height);\n                        else return drawFromSourceWithSize(ctx, `/asset/image/link/link-arrow-${entry}.png`, left, top, width, height);\n                    })\n                );\n                if (ctx) {\n                    ctx.textAlign = 'right';\n                    ctx.scale(1.2, 1);\n                    ctx.font = 'bold 24px Yugioh Rush Duel Numbers V4';\n                    ctx.fillText(`${link_map.length}`, 505 / 1.2, 746);\n                    ctx.scale(1 / 1.2, 1);\n                    ctx.textAlign = 'left';\n                }\n            }\n        };\n    }, [foil, frame, isLink, isPendulum, isXyz, link_map]);\n\n    useEffect(() => {\n        const ctx = attributeCanvasRef.current?.getContext('2d');\n        drawingPipeline.current.attribute = () => {\n            ctx?.clearRect(0, 0, 549, 100);\n\n            return drawFromSource(ctx, `/asset/image/attribute/attr-${attribute.toLowerCase()}.png`, 458, 37);\n        };\n    }, [attribute]);\n\n    useEffect(() => {\n        const ctx = subFamilyCanvasRef.current?.getContext('2d');\n        drawingPipeline.current.star = () => {\n            ctx?.clearRect(0, 0, 549, 150);\n            if (isMonster && !isLink) {\n                let counter = Math.min(13, star ?? 0);\n                let type = isXyz ? 'rank' : 'level';\n                let offset = 0 - (34 + 2.3636);\n                let totalWidth = 34 * counter + 2.3636 * (counter - 1);\n                let edge = counter <= 12\n                    ? isXyz\n                        ? 57 - 34\n                        : 492\n                    : isXyz\n                        ? (549 - totalWidth) / 2 - 34\n                        : (549 - totalWidth) / 2 + totalWidth;\n    \n                return Promise.all([...Array(counter)]\n                    .map(() => {\n                        offset += (34 + 2.3636);\n                        return drawFromSource(\n                            ctx,\n                            `/asset/image/sub-family/subfamily-${type}.png`,\n                            edge + (34 + offset) * (isXyz ? 1 : -1),\n                            99,\n                        );\n                    })\n                );\n            } else if (!isMonster) {\n                const normalizedSubFamily = subFamily.toUpperCase();\n                const hasSTIcon = normalizedSubFamily !== 'no icon'\n                        && iconList.includes(normalizedSubFamily);\n    \n                return hasSTIcon\n                    ? drawFromSourceWithSize(ctx, `/asset/image/sub-family/subfamily-${normalizedSubFamily}.png`,\n                        (image) => 491 - image.naturalWidth - 7,\n                        103,\n                        29, 29)\n                    : new Promise(resolve => resolve(true));\n            };\n            return new Promise(resolve => resolve(true));\n        };\n    }, [isLink, isMonster, isXyz, star, subFamily]);\n\n    useEffect(() => {\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 600);\n        if (ctx && isPendulum) {\n            let fontSize = 43;\n            let top = 532 + fontSize;\n\n            ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\n            ctx.textAlign = 'left';\n\n            drawScale(ctx, blue_scale ?? 0, 57, top);\n            drawScale(ctx, red_scale ?? 0, 493, top);\n        }\n    }, [isInitializing, blue_scale, isPendulum, red_scale]);\n\n    useEffect(() => {\n        const ctx = nameCanvasRef.current?.getContext('2d');\n        if (ctx) {\n            ctx.clearRect(0, 0, 549, 100);\n            ctx.textAlign = 'left';\n            const style = nameStyleType === 'auto'\n                ? { ...defaultTextStyle, fillStyle: isXyz ? '#ffffff' : '#000000' }\n                : nameStyle;\n\n            drawName(ctx, name, 40.52, 78, 409, style);\n        }\n    }, [isInitializing, isXyz, name, nameStyle, nameStyleType]);\n\n    useEffect(() => {\n        const ctx = ADCanvasRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 800);\n        if (isMonster) {\n            drawAD(ctx, atk, 343.51, 747);\n            if (!isLink) {\n                drawAD(ctx, def, 454.93, 747);\n            }\n        }\n    }, [isInitializing, atk, def, isLink, isMonster]);\n\n    useEffect(() => {\n        const ctx = setIdRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 800);\n        if (ctx) {\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\n            else ctx.fillStyle = '#000';\n            ctx.font = '15px stone-serif-regular';\n\n            if (isPendulum) {\n                fillTextLeftWithSpacing(ctx, set_id, -0.1, 44, 746);\n            } else if (isLink) {\n                fillTextLeftWithSpacing(ctx, set_id, -0.1, 367, 590);\n            } else fillTextRightWithSpacing(ctx, set_id, -0.1, 492, 589);\n        }\n    }, [isInitializing, isLink, isPendulum, isXyz, set_id]);\n\n    useEffect(() => {\n        const ctx = passcodeRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 800);\n        if (ctx) {\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\n            else ctx.fillStyle = '#000';\n            ctx.font = '15px stone-serif-regular';\n\n            fillTextLeftWithSpacing(ctx, passcode, -0.1, 25, 777);\n        }\n    }, [isInitializing, isLink, isPendulum, isXyz, passcode]);\n\n    useEffect(() => {\n        const ctx = firstEditionRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 800);\n        if (ctx && isFirstEdition === true) {\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\n            else ctx.fillStyle = '#000';\n\n            draw1stEdition(ctx);\n        }\n    }, [isInitializing, isLink, isPendulum, isXyz, isFirstEdition]);\n\n    useEffect(() => {\n        const ctx = creatorRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 800);\n        if (ctx) {\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\n            else ctx.fillStyle = '#000';\n            \n            drawCreatorText(ctx, creator);\n        }\n    }, [isInitializing, isLink, isPendulum, isXyz, creator]);\n\n    useEffect(() => {\n        const ctx = stickerRef.current?.getContext('2d');\n        drawingPipeline.current.sticker = () => {\n            ctx?.clearRect(0, 0, 549, 800);\n\n            return drawFromSource(ctx, `/asset/image/sticker/sticker-${sticker.toLowerCase()}.png`, 499, 750);\n        };\n    }, [sticker]);\n\n    const drawTypeAbility  = useCallback((\n        ctx: CanvasRenderingContext2D | null | undefined,\n        size: TypeSize = typeSizeMap['medium'],\n        alignment: 'left' | 'right' = 'left',\n    ) => {\n        if (ctx) {\n            ctx?.clearRect(0, 0, 549, 700);\n            const { left } = size;\n            const normalizedSubFamily = subFamily.toUpperCase();\n            const instructionList = [\n                drawBracketTemplate(ctx, '[', size, alignment),\n                drawBracketSpaceTemplate(ctx, ' ', size, alignment),\n                ...type_ability.map((entry, index) => drawTextTemplate(\n                    ctx,\n                    entry,\n                    index === type_ability.length - 1,\n                    size, alignment)),\n                normalizedSubFamily === 'NO ICON'\n                    ? (edge: number) => edge + 4 * (alignment === 'left' ? 1 : -1)\n                    : drawIconSpaceTemplate(ctx, size, alignment),\n                drawBracketTemplate(ctx, ']', size, alignment),\n            ];\n            (alignment === 'left'\n                ? instructionList\n                : instructionList.reverse()).reduce((prev, curr) => {\n                return curr(prev);\n            }, left);\n            ctx.textAlign = 'left';\n        }\n    }, [subFamily, type_ability]);\n    useEffect(() => {\n        const ctx = effectCanvasRef.current?.getContext('2d');\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 750);\n        if (isMonster) {\n            const effectIndexSize = drawEffect(ctx, effect, false, isNormal);\n            drawTypeAbility(typeCtx, effectIndexSize === 0\n                ? typeSizeMap['medium']\n                : typeSizeMap['small']);\n        } else {\n            drawEffect(\n                ctx,\n                effect,\n                false,\n                false,\n                stFontList,\n                stSizeList,\n            );\n            drawTypeAbility(typeCtx, typeSizeMap['large'], 'right');\n        }\n    }, [isInitializing, drawTypeAbility, effect, isMonster, isNormal]);\n    useEffect(() => {\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 600);\n        if (isMonster && isPendulum) {\n            drawEffect(\n                ctx,\n                pendulum_effect,\n                true,\n                false,\n                pendulumFontList,\n                pendulumSizeList,\n            );\n        }\n    }, [isInitializing, isMonster, isPendulum, pendulum_effect]);\n\n    // const drawRefrenceImage = useCallback(async (ctx: CanvasRenderingContext2D | null | undefined) => {\n    //     let leftOffset = -5;\n    //     let topOffset = 150;\n    // let leftOffset = -4;\n    // let topOffset = 300;\n    // let leftOffset = -300;\n    // let topOffset = -7;\n    // let leftOffset = -1;\n    // let topOffset = 100;\n    // await drawFromSourceWithSize(ctx, '/asset/image/MP19-EN-C-1E.png', -leftOffset, -topOffset, 541, 800 * (541 / 549));\n    // }, []);\n\n    useEffect(() => {\n        const ctx = drawCanvasRef.current?.getContext('2d');\n        if (ctx) {\n            const pixelRatio = window.devicePixelRatio;\n            ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            ctx.imageSmoothingQuality = 'high';\n            ctx.clearRect(0, 0, 549, 800);\n        }\n        \n        // let fontLoaded = false;\n        WebFont.load({\n            custom: {\n                families: [\n                    'stone-serif-bold',\n                    'stone-serif-bold',\n                    'stone-serif-regular',\n                    'matrix',\n                    'palatino-linotype-bold',\n                    'MatrixBook',\n                    'MatrixBoldSmallCaps',\n                    'MatrixRegularSmallCaps',\n                    'Yugioh Rush Duel Numbers V4',\n                ],\n                urls: ['asset/font.css']\n            },\n            active: () => {\n                const localCardVersion = window.localStorage.getItem('card-version');\n                const localCardData = window.localStorage.getItem('card-data');\n\n                if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\n                    setCard(JSON.parse(localCardData));\n                }\n                setInitializing(false);\n            },\n            inactive: () => {\n                setError('Font could not be loaded');\n                setInitializing(false);\n            },\n        });\n    }, []);\n\n    const exportRef = useRef({\n        currentPipeline: Promise.resolve(),\n        queuedPipeline: false,\n    });\n    useEffect(() => {\n        let relevant = true;\n        if (isInitializing === false) {\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n        }\n        // localStorage.setItem('card-created', new Date().toISOString());\n\n        /**\n         * Run export pipeline\n         * - While it is running, every effect just mark pipeline as queued, then wait the current pipeline\n         * - If the pipeline is complete and there is no effect, run another pipeline and remove the queue\n         */\n        (async () => {\n            const canvasRef = drawCanvasRef.current;\n            if (canvasRef) {\n                document.querySelector('#export-canvas-guard')?.setAttribute('style', '');\n                exportRef.current.queuedPipeline = true;\n                await exportRef.current.currentPipeline;\n\n                if (relevant) {\n                    exportRef.current.currentPipeline = onExport({ isPendulum });\n                    exportRef.current.queuedPipeline = false;\n\n                    await exportRef.current.currentPipeline;\n                    if (relevant) {\n                        document.querySelector('#export-canvas-guard')?.setAttribute('style', 'display: none');\n                    }\n                }\n                // onExport({ isPendulum })\n            }\n        })();\n\n        return () => {\n            relevant = false;\n        };\n    });\n\n    const onExport = useRef(async (exportProps: {\n        isPendulum: boolean,\n    }) => {\n        const {\n            isPendulum = false\n        } = exportProps;\n        const canvasRef = drawCanvasRef.current;\n        const exportCtx = canvasRef?.getContext('2d');\n        const generateLayer = (canvasLayer: React.RefObject<HTMLCanvasElement>, ctx: CanvasRenderingContext2D | null | undefined) => {\n            return new Promise<boolean>(resolve => {\n                if (canvasLayer.current && ctx) {\n                    const layerData = canvasLayer.current.toDataURL('image/png');\n\n                    if (layerData) {\n                        var layer = new Image();\n                        layer.src = layerData;\n                        layer.onload = () => {\n                            ctx.drawImage(layer, 0, 0);\n                            resolve(true);\n                        };\n                        layer.onerror = () => resolve(false);\n                    } else resolve(false);\n                } else resolve(false);\n            });\n        };\n\n        if (canvasRef && exportCtx) {\n            exportCtx.clearRect(0, 0, 549, 800);\n            await Promise.all(Object\n                .values(drawingPipeline.current)\n                .map(callDraw => {\n                    return callDraw();\n                }));\n            await generateLayer(frameCanvasRef, exportCtx);\n            const previewCtx = previewCanvasRef.current;\n            if (previewCtx && exportCtx) {\n                if (isPendulum) {\n                    exportCtx.drawImage(previewCtx, 38, 144, 474, 470);\n                } else {\n                    exportCtx.drawImage(previewCtx, 67, 147, 416, 416);\n                }\n            }\n            await generateLayer(specialFrameCanvasRef, exportCtx);\n            const layerList = [\n                nameCanvasRef,\n                attributeCanvasRef,\n                subFamilyCanvasRef,\n                pendulumScaleCanvasRef,\n                pendulumEffectCanvasRef,\n                typeCanvasRef,\n                effectCanvasRef,\n                ADCanvasRef,\n                setIdRef,\n                firstEditionRef,\n                passcodeRef,\n                creatorRef,\n                stickerRef,\n            ];\n            await Promise.all([\n                layerList.map(currentlayer => generateLayer(currentlayer, exportCtx)),\n            ]);\n            // await drawRefrenceImage(exportCtx);\n        }\n    }).current;\n\n    return (\n        <div className={'app-container'} style={{\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\n        }}>\n            {isInitializing && <div className=\"full-loading\">\n                {error.length > 0 ? <span style={{ color: '#e04040' }}>\n                    {error}\n                </span> : 'Loading fonts and scripts...'}\n            </div>}\n            <div className=\"card-filter-panel\">\n            </div>\n            {isInitializing === false && <CardInputPanel\n                receivingCanvasRef={previewCanvasRef.current}\n                currentCard={currentCard}\n                onCardChange={setCard}\n                defaultCropInfo={pictureCrop}\n                onImageChange={cropInfo => {\n                    setImageChangeCount(cnt => cnt + 1);\n                    if (cropInfo) setCard(curr => ({\n                        ...curr,\n                        pictureCrop: cropInfo,\n                    }));\n                }}\n            >\n                <div className=\"app-header\">\n                    <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={48} />\n                    <div className=\"app-description\">\n                        <h1>Yugioh Carder <small>v{process.env.REACT_APP_VERSION ?? 'unknown'}</small></h1>\n                        <div className=\"app-contribution\">\n                            <span>GUI: <b>Lauqerm</b></span>\n                            <span>Template: <b>Grezar</b> and others (<a\n                                href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\">Deviant Art</a>)</span>\n                            <Popover overlayClassName=\"disclaimer-overlay\" content={<div className=\"disclaimer\">\n                                <h2>Disclaimer</h2>\n                                <ul>\n                                    <li>This is a personal project, not an \"official\" card maker.</li>\n                                    <li>I holds no liability for cards created by this app, including picture, card text and any product that related to it.</li>\n                                    <li>I do not own any of Yu-Gi-Oh card layers and fonts use in this project.</li>\n                                </ul>\n                            </div>}>\n                                <ExclamationCircleOutlined className=\"disclaimer-icon\" />\n                            </Popover>\n                        </div>\n                    </div>\n                </div>\n                <br />\n            </CardInputPanel>}\n            <div className=\"card-preview-panel\">\n                <button className=\"export-button\">Save Card:<br />Right click the card → \"Save image as...\" / \"Copy Image\"</button>\n                <div className=\"card-canvas-group\">\n                    <canvas id=\"export-canvas\" ref={drawCanvasRef} width={549} height={800} />\n                    <div id=\"export-canvas-guard\">\n                        <div className=\"canvas-guard-alert\">Generating...</div>\n                        <LoadingOutlined />\n                    </div>\n                    <canvas id=\"frameCanvas\" ref={frameCanvasRef} width={549} height={800} />\n                    <canvas id=\"artCanvas\" ref={artCanvasRef} width={549} height={650} />\n                    <canvas id=\"specialFrameCanvas\" ref={specialFrameCanvasRef} width={549} height={800} />\n                    <canvas id=\"nameCanvas\" ref={nameCanvasRef} width={549} height={100} />\n                    <canvas id=\"attributeCanvas\" ref={attributeCanvasRef} width={549} height={100} />\n                    <canvas id=\"subFamilyCanvas\" ref={subFamilyCanvasRef} width={549} height={150} />\n                    <canvas id=\"pendulumScaleCanvas\" ref={pendulumScaleCanvasRef} width={549} height={600} />\n                    <canvas id=\"pendulumEffectCanvas\" ref={pendulumEffectCanvasRef} width={549} height={600} />\n                    <canvas id=\"typeCanvas\" ref={typeCanvasRef} width={549} height={700} />\n                    <canvas id=\"effectCanvas\" ref={effectCanvasRef} width={549} height={750} />\n                    <canvas id=\"ADCanvas\" ref={ADCanvasRef} width={549} height={800} />\n                    <canvas id=\"setId\" ref={setIdRef} width={549} height={800} />\n                    <canvas id=\"passcode\" ref={passcodeRef} width={549} height={800} />\n                    <canvas id=\"firstEdition\" ref={firstEditionRef} width={549} height={800} />\n                    <canvas id=\"creator\" ref={creatorRef} width={549} height={800} />\n                    <canvas id=\"sticker\" ref={stickerRef} width={549} height={800} />\n                    <canvas className=\"crop-canvas\" ref={previewCanvasRef} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}