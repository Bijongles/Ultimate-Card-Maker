{"version":3,"sources":["model/index.tsx","util/categorize.tsx","3rd/index.ts","util/condenser.ts","util/index.tsx","component/card-picture/index.tsx","component/link-marker/index.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/style-picker/index.tsx","page/input-panel/input-train/index.tsx","page/input-panel/index.tsx","page/app-header/index.tsx","const/size.ts","const/position.ts","draw/text.ts","draw/util.ts","draw/predefine.ts","draw/type-ability.ts","draw/image.ts","app.tsx","reportWebVitals.js","index.js"],"names":["defaultTextStyle","fillStyle","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","hasShadow","defaultCard","frame","foil","name","nameStyleType","nameStyle","attribute","subFamily","star","picture","pictureCrop","x","y","width","height","unit","aspect","link_map","isPendulum","pendulum_effect","red_scale","blue_scale","type_ability","effect","set_id","atk","def","passcode","sticker","isFirstEdition","creator","frameType","color","backgroundColor","iconList","foilStyleMap","gold","platinum","foilList","textStyle","checkXyz","card","checkLink","checkMonster","getCardFrame","find","entry","toLowerCase","JSONCrush","e","n","r","o","includes","String","fromCharCode","push","t","unshift","replace","JSONCrushSwap","length","i","l","f","h","substr","a","charCodeAt","g","indexOf","d","encodeURI","encodeURIComponent","split","join","JSONUncrush","substring","pop","RegExp","createCondenser","minThreshold","maxThreshold","min","max","median","lastEffective","iterateCount","magnitude","reverseSearch","finish","Math","searchDown","reset","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","cardFieldShortenMap","_newKey","cardDataCondenser","shortenMap","crush","condensedCard","Object","keys","forEach","cardKey","cardValue","Array","isArray","newKey","curshedCard","JSON","stringify","console","log","reverseCardDataCondenser","normalizedCondensedCard","parse","decodeURIComponent","fullCard","fullKey","shortendValue","shortendKey","randomCharacter","charSet","result","charactersLength","charAt","floor","random","randomSetID","randomPassword","splitEffect","isNormal","effectBody","effectMaterial","materialRegex","materialReplacement","exec","material","effectFlavorCondition","flavorConditionRegex","flavorCondition","body","quoteConvert","text","normalizedString","insertUrlParam","key","value","window","history","pushState","searchParams","URLSearchParams","location","search","set","newurl","protocol","host","pathname","toString","path","ImageCropper","noRedrawNumber","defaultExternalSource","previewCanvasRef","children","ratio","defaultCropInfo","onSourceChange","onImageChange","useState","sourceType","setSourceType","internalSource","setInternalSource","externalSource","setExternalSource","imgRef","useRef","crop","setCrop","completedCrop","setCompletedCrop","onLoad","useCallback","img","current","useEffect","image","canvas","ctx","getContext","scaleX","naturalWidth","scaleY","naturalHeight","pixelRatio","devicePixelRatio","boundingWidth","ceil","getBoundingClientRect","boundingHeight","setTransform","imageSmoothingQuality","drawImage","className","Group","onChange","target","Button","addonBefore","placeholder","source","maxLength","type","accept","files","reader","FileReader","addEventListener","readAsDataURL","disabled","onClick","toBlob","blob","previewUrl","URL","createObjectURL","anchor","document","createElement","download","href","click","revokeObjectURL","generateDownload","style","src","onImageLoaded","cropData","onComplete","ruleOfThirds","LinkMarkChooser","defaultValue","choosenArrow","setChoosenArrow","rotateMap","literalChoosenArrow","map","index","normalizedIndex","overlay","cur","newMap","filter","transform","foilButton","label","toLocaleUpperCase","props","fontWeight","frameButton","attributeButton","alt","process","iconButton","starButton","stickerButton","CharPicker","targetId","onPick","setTarget","internalOnPick","char","inputTarget","getElementById","myField","myValue","selection","focus","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","onDrag","left","top","id","EllipsisOutlined","container","edge","draggable","throttleDrag","StylePicker","React","memo","defaultType","undebouncedOnChange","setType","setValue","isVisible","setVisible","debounce","setCustomValue","inputValue","curValue","newStyle","boxShadow","background","zIndex","checked","newType","CloseOutlined","hex","axis","styles","track","gridRow","thumb","xmax","xmin","ymax","ymin","size","CheckboxTrain","optionList","combinedClass","isChecked","TextArea","Input","onChangeFactory","mutateFunction","valueTransform","RandomButton","seeder","onGenerate","marginLeft","paddingLeft","borderLeft","SyncOutlined","CardInputPanel","currentCard","receivingCanvasRef","onCardChange","isMirrorScale","setMirrorScale","setCard","mutateFunc","onFoilChange","onAttributeChange","onSubFamilyChange","onNameChange","onStarChange","onPictureChange","onLinkMapChange","onRedScaleChange","onBlueScaleChange","onPendulumEffectChange","onEffectChange","onATKChange","onDEFChange","onTypeAbilityChange","onSetIDChange","onPasscodeChange","onStickerChange","onCreatorChange","isXyz","isLink","isMonster","displayTypeAbility","setDisplayTypeAbility","displayName","setDisplayName","displayEffect","setDisplayEffect","displayPendulumEffect","setDisplayPendulumEffect","onlineCharPicker","setOnlineCharPicker","ref","frameValue","isST","newTypeAbility","toUpperCase","onFocus","allowClear","ev","rows","trim","AppHeader","rel","overlayClassName","content","ExclamationCircleOutlined","monsterFontList","fontSize","lineHeight","lineCount","monsterSizeList","pendulumFontList","pendulumSizeList","stFontList","stSizeList","typeSizeMap","small","bracketSize","bracketSpace","bracketOffsetTop","upperCaseSize","upperCaseScale","lowerCaseSize","lowerCaseScale","spaceScale","spaceSize","frontSpace","behindSpace","iconSpace","medium","large","arrowPositionList","foilPosition","art","drawScale","baseline","digitList","totalWidth","digit","measureText","accLeft","fillText","drawEffect","isPendulumEffect","fontList","sizeList","normalizedContent","effectIndexSize","tolerantPerSentence","additionalLineCount","sentencizeText","bulletSymbol","specialSymbol","tokenizeR","specialSymbolReg","basedWidth","condenser","effectiveRatio","maxLine","font","textAlign","switchFont","func","tempFont","largeSize","lineList","reduce","prev","curr","condenseRatio","hypoWidth","tokenizedText","currentLineCount","tokenSentence","cnt","tokenWidth","test","fullString","fullStringSplittedByBullet","isLast","drawBullet","beginPath","arc","PI","fill","lineWidth","strokeStyle","stroke","clearRect","actualWidth","scale","sigmoidRatio","splitter","spaceSeparatedText","nonSpaceWidth","spaceCount","spaceWidth","fillTextLeftWithSpacing","str","letterSpacingRatio","charList","curLeft","fillTextRightWithSpacing","curRight","c","drawCreatorText","symbol","maxWidth","splittedContent","splittedWidth","symbolWidth","totalCondensableWidth","returnBundle","measureWithSymbol","nextEdge","drawAD","$value","nextWidth","arr","curText","drawBracketTemplate","alignment","bracketChar","alignmentOffset","drawIconSpaceTemplate","drawBracketSpaceTemplate","drawTextTemplate","spaceChar","drawSlashTemplate","baseOffset","totalOffset","upperChar","imageCacheMap","drawFromSource","sx","sy","Promise","resolve","ready","normalizedX","normalizedY","Image","onload","onerror","drawFromSourceWithSize","dw","dh","App","isInitializing","setInitializing","error","setError","drawCanvasRef","frameCanvasRef","artCanvasRef","specialFrameCanvasRef","subFamilyCanvasRef","pendulumScaleCanvasRef","pendulumEffectCanvasRef","typeCanvasRef","effectCanvasRef","nameCanvasRef","attributeCanvasRef","ADCanvasRef","setIdRef","passcodeRef","creatorRef","stickerRef","pendulumSize","drawingPipeline","specialFrame","imageChangeCount","setImageChangeCount","cardType","hasFoil","previewCtx","foiledBorder","all","parseInt","counter","offset","normalizedSubFamily","splittedText","contentWidth","drawName","endOfPasscode","draw1stEdition","drawTypeAbility","textSize","instructionList","totalLeft","reverse","typeCtx","WebFont","load","custom","families","urls","active","localCardVersion","localStorage","getItem","localCardData","urlParam","get","inactive","exportRef","currentPipeline","queuedPipeline","relevant","setItem","querySelector","setAttribute","onExport","exportProps","canvasRef","exportCtx","generateLayer","canvasLayer","layerData","toDataURL","layer","values","callDraw","layerList","currentlayer","backgroundImage","cropInfo","LoadingOutlined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6704b302.chunk.js","sourcesContent":["export type TextStyleType = 'auto' | 'custom';\nexport type TextStyle = typeof defaultTextStyle;\nexport const defaultTextStyle = {\n    fillStyle: '#000000',\n    shadowColor: '#000000',\n    shadowOffsetY: 0,\n    shadowOffsetX: 0,\n    shadowBlur: 0,\n    hasShadow: false,\n};\n\nexport type Card = typeof defaultCard;\nexport const defaultCard = {\n    frame: 'fusion',\n    foil: 'normal',\n    name: 'Junko',\n    nameStyleType: 'auto' as TextStyleType,\n    nameStyle: {\n        fillStyle: '#000000',\n        shadowColor: '#000000',\n        shadowOffsetY: 0,\n        shadowOffsetX: 0,\n        shadowBlur: 0,\n        hasShadow: false,\n    } as TextStyle,\n    attribute: 'LIGHT',\n    subFamily: 'NO ICON',\n    star: 6,\n    picture: 'https://i.imgur.com/h5kXZeC.png',\n    pictureCrop: {\n        x: 0,\n        y: 12,\n        width: 269,\n        height: 269,\n        unit: 'px',\n        aspect: 1,\n    } as Partial<ReactCrop.Crop>,\n    link_map: ['1', '3', '7', '9'] as string[],\n    isPendulum: false,\n    pendulum_effect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\n    red_scale: '4',\n    blue_scale: '4',\n    type_ability: ['Fairy', 'Fusion', 'Effect'] as string[],\n    effect: `[2+ Effect Monsters]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    set_id: 'YGOC-EN001',\n    atk: '2000',\n    def: '2000',\n    passcode: '18111996',\n    sticker: 'holo5',\n    isFirstEdition: true,\n    creator: '©2020 Studio Dice/SHUEISHA TV TOKYO, KONAMI',\n};\n\nexport const frameType = [\n    { name: 'normal', color: '#fff', backgroundColor: '#c49c5e' },\n    { name: 'effect', color: '#fff', backgroundColor: '#b96c49' },\n    { name: 'fusion', color: '#fff', backgroundColor: '#8948a4' },\n    { name: 'synchro', color: '#000', backgroundColor: '#efefef' },\n    { name: 'xyz', color: '#fff', backgroundColor: '#000' },\n    { name: 'link', color: '#fff', backgroundColor: '#0c8ac6' },\n    { name: 'ritual', color: '#fff', backgroundColor: '#5e85c9' },\n    { name: 'spell', color: '#fff', backgroundColor: '#1b8f83' },\n    { name: 'trap', color: '#fff', backgroundColor: '#c32a8c' },\n    { name: 'token', color: '#fff', backgroundColor: '#6f6c6b' },\n];\n\nexport const iconList = [\n    'NO ICON',\n    'FIELD',\n    'CONTINUOUS',\n    'QUICK-PLAY',\n    'RITUAL',\n    'COUNTER',\n];\n\nexport const foilStyleMap: Record<string, TextStyle> = {\n    gold: {\n        fillStyle: '#b88c43',\n        shadowColor: '#FCC400',\n        shadowOffsetY: 1,\n        shadowOffsetX: 0,\n        shadowBlur: 1,\n        hasShadow: true,\n    },\n    platinum: {\n        fillStyle: '#CCCCCC',\n        shadowColor: '#FFFFFF',\n        shadowOffsetY: 1,\n        shadowOffsetX: 0,\n        shadowBlur: 1,\n        hasShadow: true,\n    },\n};\nexport const foilList = [\n    { name: 'normal', color: '#747b95', textStyle: defaultTextStyle },\n    { name: 'gold', color: '#cfa65f' },\n    { name: 'platinum', color: '#b1b1b1' },\n];\n\nexport const stickerList = [\n    'gold',\n    'silver',\n    'beta',\n    'holo5',\n    'holo4',\n    'holo3',\n    'holo2',\n    'holo1',\n];\n\nexport const attributeList = [\n    { name: 'DARK', color: '#b41dda' },\n    { name: 'EARTH', color: '#8d8e8e' },\n    { name: 'FIRE', color: '#e51b23' },\n    { name: 'LIGHT', color: '#bfae32' },\n    { name: 'WATER', color: '#008ecd' },\n    { name: 'WIND', color: '#28ab35' },\n    { name: 'DIVINE', color: '#ef6300' },\n    { name: 'SPELL', color: '#1b8f83' },\n    { name: 'TRAP', color: '#c32a8c' },\n];","import { Card, frameType } from '../model';\n\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'normal' && checkMonster(card);\n};\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'xyz';\n};\nexport const checkLink = (card: Pick<Card, 'frame' | 'type_ability'>) => {\n    return card.frame === 'link' && checkMonster(card);\n};\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\n    return card.frame !== 'spell' && card.frame !== 'trap';\n};\n\nexport const getCardFrame = (frame: string) => {\n    return frameType.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\n};","// @ts-nocheck\n/* eslint-disable */\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\n\"use strict\"\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { JSONCrush, JSONUncrush } from '../3rd';\n\nexport const createCondenser = (minThreshold = 0, maxThreshold = 1000) => {\n    let min = minThreshold;\n    let max = maxThreshold;\n    let median = max;\n    let lastEffective = median;\n    let iterateCount = 30;\n    let magnitude = 100;\n\n    const reverseSearch = () => {\n        if (magnitude === 1) finish();\n        else {\n            median += magnitude;\n            magnitude /= 10;\n            median -= magnitude;\n        }\n\n        return Math.min(median, max);\n    };\n\n    const searchDown = () => {\n        median -= magnitude;\n        iterateCount -= 1;\n\n        return median;\n    };\n\n    const reset = (minThreshold = min, maxThreshold = max) => {\n        min = minThreshold;\n        max = maxThreshold;\n        median = maxThreshold;\n        iterateCount = 30;\n        magnitude = 100;\n        lastEffective = maxThreshold;\n    };\n\n    const getMedian = () => median;\n    const setMedian = (newMedian: number) => median = newMedian;\n\t\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\n    const getLastEffective = () => lastEffective;\n    const applyLastEffective = () => {\n        median = lastEffective;\n        iterateCount = -1;\n        return median;\n    };\n\t\n    const getIterateCount = () => iterateCount;\n    const finish = () => iterateCount = -1;\n\n    return {\n        reset,\n        searchDown,\n        reverseSearch,\n        finish,\n        getMedian,\n        setMedian,\n        setLastEffective,\n        getLastEffective,\n        applyLastEffective,\n        getIterateCount,\n    };\n};\n\nconst cardFieldShortenMap: Record<string, string | Record<string, string>> = {\n    frame: 'fr',\n    foil: 'fo',\n    name: 'na',\n    nameStyleType: 'nst',\n    nameStyle: {\n        _newKey: 'ns',\n        fillStyle: 'nsfs',\n        shadowColor: 'nssc',\n        shadowOffsetY: 'nssoy',\n        shadowOffsetX: 'nssox',\n        shadowBlur: 'nssb',\n        hasShadow: 'nshs',\n    },\n    attribute: 'at',\n    subFamily: 'sf',\n    star: 'st',\n    picture: 'pt',\n    pictureCrop: {\n        _newKey: 'ptc',\n        x: 'ptx',\n        y: 'pty',\n        width: 'ptw',\n        height: 'pth',\n        unit: 'ptu',\n        aspect: 'pta',\n    },\n    link_map: 'lm',\n    isPendulum: 'ip',\n    pendulum_effect: 'pe',\n    red_scale: 'rs',\n    blue_scale: 'bs',\n    type_ability: 'ta',\n    effect: 'ef',\n    set_id: 'si',\n    atk: 'atk',\n    def: 'def',\n    passcode: 'pc',\n    sticker: 'sti',\n    isFirstEdition: 'ife',\n    creator: 'cr',\n};\nexport const cardDataCondenser = (\n    card: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n    crush = true,\n) => {\n    const condensedCard: Record<string, any> = {};\n    Object.keys(card).forEach(cardKey => {\n        const cardValue = card[cardKey];\n\n        if (typeof cardValue === 'object' && cardValue !== null && !Array.isArray(cardValue)) {\n            const newKey = shortenMap[cardKey]?._newKey;\n\n            if (newKey) {\n                condensedCard[newKey] = cardDataCondenser(cardValue, shortenMap[cardKey], false);\n            }\n        } else {\n            const newKey = shortenMap[cardKey];\n\n            if (typeof newKey === 'string') condensedCard[newKey] = cardValue;\n        }\n    });\n\n    if (crush) {\n        const curshedCard = JSONCrush(JSON.stringify(condensedCard));\n        console.log('🚀 ~ file: condenser.ts ~ line 132 ~ curshedCard', condensedCard, curshedCard);\n\n        return curshedCard;\n    }\n    return condensedCard;\n    // return condensedCard;\n};\nexport const reverseCardDataCondenser = (\n    condensedCard: Record<string, any> | string,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const normalizedCondensedCard = typeof condensedCard === 'string'\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\n        : condensedCard;\n\n    const fullCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortendValue = shortenMap[fullKey];\n\n        if (typeof shortendValue === 'object' && shortendValue !== null && !Array.isArray(shortendValue)) {\n            const shortendKey = shortendValue?._newKey;\n\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\n                fullCard[fullKey] = reverseCardDataCondenser(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (normalizedCondensedCard[shortendValue]) {\n                fullCard[fullKey] = normalizedCondensedCard[shortendValue];\n            }\n        }\n    });\n    return fullCard;\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\n    let result           = '';\n    const charactersLength = charSet.length;\n    for ( let i = 0; i < length; i++) {\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n};\n\nexport const randomSetID = () => {\n    return `${randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)}-EN${randomCharacter('0123456789', 3)}`;\n};\n\nexport const randomPassword = () => {\n    return `${randomCharacter('0123456789', 8)}`;\n};\n\nexport const splitEffect = (effect: string, isNormal = false) => {\n    let effectBody = effect;\n\n    let effectMaterial = '';\n    const materialRegex = /^(\\[([^\\]]*)\\]\\s*)/m;\n    const materialReplacement = materialRegex.exec(effectBody)?.[1];\n    const material = materialRegex.exec(effectBody)?.[2];\n    if (material && materialReplacement) {\n        effectMaterial = material;\n        effectBody = effectBody.replace(materialReplacement, '');\n    } else effectMaterial = '';\n\n    let effectFlavorCondition = '';\n    const flavorConditionRegex = /(\\n^[\\r\\t\\f\\v \\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]*\\([\\w\\W]+\\))\\s*$/m;\n    const flavorCondition = flavorConditionRegex.exec(effect)?.[1];\n    if (flavorCondition && isNormal) {\n        effectFlavorCondition = flavorCondition;\n        effectBody = effectBody.replace(flavorCondition, '');\n    } else effectFlavorCondition = '';\n\n    return {\n        material: effectMaterial,\n        body: effectBody,\n        flavorCondition: effectFlavorCondition\n    };\n};\n\nexport const quoteConvert = (text?: string) => {\n    let normalizedString = (text ?? '');\n    normalizedString = normalizedString.replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')\n        .replace(/'/g, '\\u2019')\n        .replace(/(^|[-\\u2014/[(\\u2018\\s])\"/g, '$1\\u201c')\n        .replace(/\"/g, '\\u201d')\n        .replace(/--/g, '\\u2014');\n    return normalizedString;\n};\n\nexport function insertUrlParam(key: string, value: string) {\n    if (window.history.pushState) {\n        let searchParams = new URLSearchParams(window.location.search);\n        searchParams.set(key, value);\n        let newurl = window.location.protocol + '//' + window.location.host + window.location.pathname + '?' + searchParams.toString();\n        window.history.pushState({path: newurl}, '', newurl);\n    }\n}\n\nexport * from './categorize';\nexport * from './condenser';","import { Button, Input, Radio } from 'antd';\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './card-picture.scss';\n\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\n    if (!crop || !canvas) return;\n    canvas.toBlob(\n        (blob) => {\n            const previewUrl = window.URL.createObjectURL(blob);\n\n            const anchor = document.createElement('a');\n            anchor.download = 'cropPreview.png';\n            anchor.href = URL.createObjectURL(blob);\n            anchor.click();\n\n            window.URL.revokeObjectURL(previewUrl);\n        },\n        'image/png',\n        1\n    );\n}\n\nexport type ImageCropper = {\n    noRedrawNumber?: number,\n\tdefaultExternalSource?: string,\n    previewCanvasRef?: HTMLCanvasElement | null,\n    children?: React.ReactNode,\n    ratio?: number,\n    defaultCropInfo: Partial<ReactCrop.Crop>,\n    onSourceChange?: (source: string) => void,\n    onImageChange?: (cropInfo: Partial<ReactCrop.Crop>) => void,\n}\nexport const ImageCropper = ({\n    noRedrawNumber = 0,\n    defaultExternalSource = '',\n    previewCanvasRef,\n    children,\n    ratio = 1,\n    defaultCropInfo,\n    onSourceChange = () => {},\n    onImageChange = () => {},\n}: ImageCropper) => {\n    const [sourceType, setSourceType] = useState('external');\n    const [internalSource, setInternalSource] = useState('');\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\n    const imgRef = useRef<HTMLImageElement | null>(null);\n    const [crop, setCrop] = useState<ReactCrop.Crop>(defaultCropInfo);\n    const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\n\n    const onSelectFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const reader = new FileReader();\n            reader.addEventListener('load', () => {\n                if (typeof reader.result === 'string') {\n                    setInternalSource(reader.result);\n                    setSourceType('internal');\n                }\n            });\n            reader.readAsDataURL(e.target.files[0]);\n        }\n    };\n\n    const onLoad = useCallback((img) => {\n        imgRef.current = img;\n    }, []);\n\t\n    const onExternalSourceChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const source = e.target.value;\n\n        onSourceChange(source);\n        setExternalSource(source);\n    };\n\n    useEffect(() => {\n        const image = imgRef.current;\n        const canvas = previewCanvasRef;\n        const crop = completedCrop;\n        if (!crop || !canvas || !image) return;\n\n        const ctx = canvas.getContext('2d');\n        if (!ctx) return;\n\n        const scaleX = image.naturalWidth / image.width;\n        const scaleY = image.naturalHeight / image.height;\n        const pixelRatio = window.devicePixelRatio;\n        const boundingWidth = Math.ceil(canvas.getBoundingClientRect().width);\n        const boundingHeight = Math.ceil(canvas.getBoundingClientRect().height);\n\n        canvas.width = (boundingWidth ?? 0) * pixelRatio;\n        canvas.height = (boundingHeight ?? 0) * pixelRatio;\n\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        ctx.imageSmoothingQuality = 'high';\n\n        ctx.drawImage(\n            image,\n            (crop.x ?? 0) * scaleX,\n            (crop.y ?? 0) * scaleY,\n            (crop.width ?? 0) * scaleX,\n            (crop.height ?? 0) * scaleY,\n            0,\n            0,\n            (boundingWidth ?? 0),\n            (boundingHeight ?? 0)\n        );\n        onImageChange(crop);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [completedCrop, previewCanvasRef, noRedrawNumber]);\n\n    return (\n        <div className=\"card-image-cropper\">\n            <div className=\"card-image-source-input\">\n                {children}\n                <Radio.Group onChange={e => setSourceType(e.target.value)} value={sourceType}>\n                    <Radio.Button value={'external'}>\n                        <Input key=\"key\"\n                            addonBefore=\"Link\" placeholder=\"https://my-online-image...\"\n                            value={externalSource}\n                            onChange={onExternalSourceChange} maxLength={256} />\n                    </Radio.Button>\n                    <Radio.Button value={'internal'}>\n                        <Input type=\"file\"  accept=\"image/*\" onChange={onSelectFile} />\n                        <div>\n                            {sourceType === 'internal' && <>\n                                <Button\n                                    className=\"download-button\"\n                                    disabled={!completedCrop?.width || !completedCrop?.height}\n                                    onClick={() => previewCanvasRef && generateDownload(previewCanvasRef, completedCrop)}\n                                >\n                                Download cropped image\n                                </Button>\n                                <span style={{ color: '#FF6F6F' }}>Offline images are not auto saved!</span>\n                            </>}\n                        </div>\n                    </Radio.Button>\n                </Radio.Group>\n            </div>\n            <div className=\"card-cropper\">\n                <ReactCrop key={sourceType}\n                    src={sourceType === 'internal' ? internalSource : externalSource}\n                    onImageLoaded={onLoad}\n                    crop={crop}\n                    onChange={cropData => setCrop({ ...cropData, aspect: ratio })}\n                    onComplete={cropData => setCompletedCrop(cropData)}\n                    ruleOfThirds={true}\n                />\n            </div>\n        </div>\n    );\n};\n","import { Tooltip } from 'antd';\nimport { useEffect, useState } from 'react';\nimport './link-marker.scss';\n\nexport type LinkMarkChooser = {\n    defaultValue?: string[],\n    onChange?: (value: string[]) => void,\n};\nexport const LinkMarkChooser = ({\n    defaultValue = [],\n    onChange = () => {},\n}: LinkMarkChooser) => {\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\n    const rotateMap = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\n\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\n    useEffect(() => {\n        onChange(choosenArrow);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [literalChoosenArrow]);\n\n    return <div className=\"link-marker-chooser\">\n        <div className=\"title\">\n            Link Arrows\n        </div>\n        <div className=\"container\">\n            {[...Array(9)].map((entry, index) => {\n                const normalizedIndex = `${index + 1}`;\n\n                if (normalizedIndex === '5') return <Tooltip key=\"5\" overlay=\"Reset\">\n                    <div className=\"link-marker-reset\" onClick={() => {\n                        setChoosenArrow([]);\n                    }}>R</div>\n                </Tooltip>;\n\n                return <div key={normalizedIndex}\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\n                    onClick={() => {\n                        setChoosenArrow(cur => {\n                            let newMap = [...cur];\n\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\n                            else newMap.push(normalizedIndex);\n\n                            return newMap;\n                        });\n                    }}\n                >\n                    <div className={`link-marker-icon link-marker-icon-${index + 1}`} style={{ transform: `rotate(${rotateMap[index]}deg)` }} />\n                </div>;\n            })}\n        </div>\n    </div>;\n};","import { frameType, iconList, attributeList, stickerList, foilList } from '../../model';\nimport './input-panel.scss';\n\nexport const foilButton = foilList.map(({ color, name }) => ({\n    label: name.toLocaleUpperCase(),\n    value: name,\n    props: {\n        style: {\n            color,\n            fontWeight: 'bold',\n        } as React.CSSProperties,\n    }\n}));\nexport const frameButton = frameType.map(({ color, name, backgroundColor }) => ({\n    label: name,\n    value: name,\n    props: {\n        style: {\n            backgroundColor,\n            color,\n        } as React.CSSProperties,\n    }\n}));\nexport const attributeButton = attributeList.map(({ name }) => ({\n    label: <img alt={name} src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${name.toLowerCase()}.png`} />,\n    value: name,\n}));\nexport const iconButton = iconList.map(entry => ({\n    label: entry,\n    value: entry,\n}));\nexport const starButton = [...Array(14)].map((e, index) => ({ label: index, value: index }));\nexport const stickerButton = stickerList.map(name => ({\n    label: <img alt={name} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${name.toLowerCase()}.png`} />,\n    value: name,\n}));","import { useCallback, useEffect, useState } from 'react';\nimport Moveable from 'react-moveable';\nimport { EllipsisOutlined } from '@ant-design/icons';\nimport './char-picker.scss';\n\nfunction insertAtCursor(myField: HTMLTextAreaElement, myValue: string) {\n    //IE support\n    if ((document as any).selection) {\n        myField.focus();\n        const sel = (document as any).selection.createRange();\n        sel.text = myValue;\n\n        return {\n            value: myField.value,\n            position: 0,\n        };\n    }\n    //MOZILLA and others\n    else if (myField.selectionStart || myField.selectionStart === 0) {\n        const startPos = myField.selectionStart;\n        const endPos = myField.selectionEnd;\n        myField.value = myField.value.substring(0, startPos)\n            + myValue\n            + myField.value.substring(endPos, myField.value.length);\n        myField.selectionStart = startPos + myValue.length;\n        myField.selectionEnd = startPos + myValue.length;\n        myField.focus();\n\n        return {\n            value: myField.value,\n            position: startPos + myValue.length,\n        };\n    } else {\n        myField.value += myValue;\n\n        return {\n            value: myField.value,\n            position: 0,\n        };\n    }\n}\n\nexport type CharPicker = {\n    targetId: string,\n    onPick?: (value: string) => void,\n}\nexport const CharPicker = ({\n    targetId = '',\n    onPick = () => {},\n}: CharPicker) => {\n    const [target, setTarget] = useState<HTMLElement | null>(null);\n    const internalOnPick = (char: string) => {\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\n        if (inputTarget) {\n            const { value } = insertAtCursor(inputTarget, char);\n\n            onPick(value);\n        }\n    };\n\n    useEffect(() => {\n        setTarget(document.getElementById('char-picker'));\n    }, []);\n\n    const onDrag = useCallback(({\n        target,\n        left, top,\n        transform,\n    }) => {\n        target!.style.left = `${left}px`;\n        target!.style.top = `${top}px`;\n        target!.style.transform = transform;\n    }, []);\n\n    return <div className=\"char-picker-container\">\n        {<div id={'char-picker'} className=\"char-picker\">\n            <div className=\"handler\">\n                <EllipsisOutlined />\n            </div>\n            {[\n                '∞',\n                '☆',\n                '●',\n                '©',\n                '™',\n                'Ɐ',\n            ].map(entry => {\n                return <button key={entry} className=\"ant-btn\" onClick={() => internalOnPick(entry)}>{entry}</button>;\n            })}\n        </div>}\n        <Moveable\n            target={target}\n            container={null}\n\n            /* Resize event edges */\n            edge={false}\n\n            /* draggable */\n            draggable={true}\n            throttleDrag={0}\n            onDrag={onDrag}\n        />\n    </div>;\n};","import { Checkbox, InputNumber, Slider } from 'antd';\nimport React, { useRef, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { TextStyle, TextStyleType } from '../../../model';\nimport PowerSlider from 'react-input-slider';\nimport { debounce } from 'lodash';\nimport './style-picker.scss';\n\nexport type StylePicker = {\n    defaultType: TextStyleType,\n\tdefaultValue: TextStyle,\n\tonChange: (type: TextStyleType, style: TextStyle) => void,\n}\nexport const StylePicker = React.memo(({\n    defaultType,\n    defaultValue,\n    onChange: undebouncedOnChange,\n}: StylePicker) => {\n    const [type, setType] = useState(defaultType);\n    const [value, setValue] = useState(defaultValue);\n    const [isVisible, setVisible] = useState(false);\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\n\n    const setCustomValue = <ValueType extends any>(key: keyof TextStyle) => {\n        return (inputValue: ValueType) => {\n            setValue(curValue => {\n                const newStyle = { ...curValue, [key]: inputValue };\n\n                onChange('custom', newStyle);\n                return newStyle;\n            });\n        };\n    };\n\n    return <div className=\"style-picker\">\n        <div className=\"style-picker-preview\"\n            style={type === 'auto'\n                ? {}\n                : { boxShadow: `${value.shadowOffsetX}px ${value.shadowOffsetY}px ${value.shadowBlur}px 0 ${value.shadowColor}` }}\n            onClick={() => setVisible(cur => !cur)}\n        >\n            <div className=\"style-picker-display\" style={type === 'auto' ? { background: 'white' } : { background: value.fillStyle }}>\n                {type === 'auto' ? 'Auto' : <>&nbsp;</>}\n            </div>\n        </div>\n        {isVisible\n            ? <div className=\"style-picker-overlay\" style={{ position: 'absolute', zIndex: 2 }}>\n                <div className=\"style-picker-mask\" onClick={() => setVisible(false)} />\n                <div className=\"style-picker-auto\">\n                    <Checkbox value={'auto'} checked={type === 'auto'} onChange={() => {\n                        const newType = type === 'auto' ? 'custom' : 'auto';\n                        setType(newType);\n                        onChange(newType, value);\n                    }}>Auto</Checkbox>\n                    <CloseOutlined className=\"style-picker-close\" onClick={() => setVisible(false)} />\n                </div>\n                <div className={'custom-style-picker'}>\n                    <div className=\"custom-style-text\">\n                        {/* {type === 'auto' && <div className=\"disable-overlay\" />} */}\n                        <h2>Text Color</h2>\n                        <CompactPicker color={value.fillStyle} onChange={color => {\n                            setType('custom');\n                            setValue(cur => {\n                                const newStyle = { ...cur, fillStyle: color.hex };\n\n                                onChange('custom', newStyle);\n                                return newStyle;\n                            });\n                        }} />\n                    </div>\n                    <h3 className=\"custom-style-expand\">\n                        <Checkbox value={'has-shadow'} checked={value.hasShadow} onChange={() => {\n                            setType('custom');\n                            setValue(cur => {\n                                const newStyle = { ...cur, hasShadow: !cur.hasShadow };\n\n                                onChange('custom', newStyle);\n                                return newStyle;\n                            });\n                        }}>Has Shadow?</Checkbox>\n                    </h3>\n                    {value.hasShadow && <div className=\"custom-style-shadow\">\n                        {/* {type === 'auto' && <div className=\"disable-overlay\" />} */}\n                        <h2>Position</h2>\n                        <div className=\"shadow-position\">\n                            <PowerSlider axis=\"xy\"\n                                styles={{\n                                    track: {\n                                        backgroundColor: '#009ce0',\n                                        width: 100,\n                                        height: 100,\n                                        gridRow: 'span 3',\n                                        position: 'relative',\n                                    },\n                                    thumb: {\n                                        backgroundColor: '#91d5ff',\n                                        zIndex: 10,\n                                    },\n                                }}\n                                xmax={5} xmin={-5}\n                                ymax={5} ymin={-5}\n                                x={value.shadowOffsetX}\n                                y={value.shadowOffsetY}\n                                onChange={({ x, y }) => {\n                                    setValue(cur => {\n                                        const newStyle = { ...cur,\n                                            ...cur,\n                                            shadowOffsetX: x,\n                                            shadowOffsetY: y,\n                                        };\n\n                                        onChange('custom', newStyle);\n                                        return newStyle;\n                                    });\n                                }} />\n                            <div className=\"single-slider\">\n                                X Offset: <InputNumber size=\"small\" value={value.shadowOffsetX}\n                                    onChange={setCustomValue('shadowOffsetX')} />\n                            </div>\n                            <div className=\"single-slider\">\n                                Y Offset: <InputNumber size=\"small\" value={value.shadowOffsetY}\n                                    onChange={setCustomValue('shadowOffsetY')} />\n                            </div>\n                            <div className=\"single-slider\">\n                                Blur: <Slider value={value.shadowBlur} min={0} max={10} onChange={(value: number) => {\n                                    if (typeof value === 'number') setValue(cur => {\n                                        const newStyle = { ...cur, shadowBlur: value };\n\n                                        onChange('custom', newStyle);\n                                        return newStyle;\n                                    });\n                                }} />\n                            </div>\n                            <div />\n                        </div>\n                        <h2>Color</h2>\n                        <CompactPicker color={value.shadowColor} onChange={color => {\n                            setValue(cur => {\n                                const newStyle = { ...cur, shadowColor: color.hex };\n\n                                onChange('custom', newStyle);\n                                return newStyle;\n                            });\n                        }} />\n                    </div>}\n                </div>\n            </div>\n            : null}\n    </div>;\n}, () => true);","import React from 'react';\n\n\n\nexport type CheckboxTrain = {\n\tclassName?: string,\n\tvalue: string,\n\toptionList: { label: React.ReactNode, value: string | number, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\n\tonChange: (value: string | number) => void,\n\tchildren?: React.ReactNode,\n}\nexport const CheckboxTrain = ({\n    onChange,\n    value,\n    optionList,\n    children,\n    className,\n}: CheckboxTrain) => {\n    const combinedClass = ['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ');\n\n    return <div className={combinedClass}>\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        {optionList.map(entry => {\n            const isChecked = `${entry.value}` === `${value}`;\n\n            return <label key={entry.value}\n                {...entry.props}\n                className={`ant-radio-button-wrapper ${isChecked ? 'ant-radio-button-wrapper-checked' : ''}`}\n                onClick={() => {\n                    onChange(entry.value);\n                }}\n            >\n                <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                    <span className=\"ant-radio-button-inner\"></span>\n                </span>\n                <span>{entry.label}</span>\n            </label>;\n        })}\n    </div>;\n};","import React, { useRef, useState } from 'react';\nimport { Input, Checkbox, Tooltip } from 'antd';\nimport { Card, TextStyle, TextStyleType } from '../../model';\nimport { ImageCropper, LinkMarkChooser } from '../../component';\nimport { checkXyz, checkLink, checkMonster, randomPassword, randomSetID } from '../../util';\nimport { debounce } from 'lodash';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { foilButton, frameButton, starButton, iconButton, attributeButton, stickerButton } from './const';\nimport { CharPicker } from './char-picker';\nimport { StylePicker } from './style-picker';\nimport { CheckboxTrain } from './input-train';\nimport './input-panel.scss';\n\nconst { TextArea } = Input;\n\nconst onChangeFactory = (\n    key: string,\n    mutateFunction: (func: (card: Card) => Card) => void,\n    valueTransform: (value: any) => any = (value) => value,\n) => {\n    return (e: any) => {\n        mutateFunction(current => ({\n            ...current,\n            [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\n        }));\n    };\n};\n\ntype RandomButton = {\n    seeder: () => string,\n    onGenerate: (value: string) => void,\n}\nconst RandomButton = ({\n    seeder,\n    onGenerate,\n}: RandomButton) => {\n    return <span style={{ marginLeft: 10, paddingLeft: 10, borderLeft: '1px solid #222' }}>\n        <Tooltip overlay=\"Random\">\n            <SyncOutlined onClick={() => onGenerate(seeder())} />\n        </Tooltip>\n    </span>;\n};\n\nexport type CardInputPanelRef = {\n    getCroppedImageCanvasRef: () => HTMLCanvasElement | null\n}\nexport type CardInputPanel = {\n\tcurrentCard: Card,\n    receivingCanvasRef: HTMLCanvasElement | null,\n    defaultCropInfo: Partial<ReactCrop.Crop>,\n\tonCardChange: React.Dispatch<React.SetStateAction<Card>>,\n    onImageChange?: (cropInfo: Partial<ReactCrop.Crop>) => void,\n    children?: React.ReactNode,\n}\nexport const CardInputPanel = ({\n    currentCard,\n    receivingCanvasRef,\n    defaultCropInfo,\n    onCardChange,\n    onImageChange,\n    children,\n}: CardInputPanel) => {\n    const [isMirrorScale, setMirrorScale] = useState(true);\n    const setCard = (mutateFunc: (card: Card) => Card) => {\n        onCardChange(currentCard => mutateFunc(currentCard));\n    };\n    const onFoilChange = onChangeFactory('foil', setCard);\n    const onFrameChange = (frameValue: number | string) => {\n        onCardChange(currentCard => {\n            const value = `${frameValue}`;\n            const isST = value === 'spell' || value === 'trap';\n            const newTypeAbility = value === 'spell'\n                ? ['Spell Card']\n                : value === 'trap' ? ['Trap Card'] : currentCard.type_ability;\n            if (isST) setDisplayTypeAbility(newTypeAbility[0]);\n    \n            return {\n                ...currentCard,\n                frame: value,\n                isPendulum: value === 'link' || value === 'token' || isST ? false : currentCard.isPendulum,\n                subFamily: isST ? 'NO ICON' : currentCard.subFamily,\n                attribute: isST\n                    ? `${value}`.toUpperCase()\n                    : currentCard.attribute,\n                type_ability: value === 'spell'\n                    ? ['Spell Card']\n                    : value === 'trap' ? ['Trap Card'] : currentCard.type_ability,\n            };\n        });\n    };\n    const onAttributeChange = onChangeFactory('attribute', setCard);\n    const onSubFamilyChange = onChangeFactory('subFamily', setCard);\n    const onNameChange = debounce(onChangeFactory('name', setCard), 250);\n    const onNameColorChange = (type: TextStyleType, value: TextStyle) => {\n        onCardChange(currentCard => {\n            return {\n                ...currentCard,\n                nameStyleType: type,\n                nameStyle: value,\n            };\n        });\n    };\n    const onStarChange = onChangeFactory('star', setCard);\n    const onIsPendulumChange = (e: any) => onCardChange(currentCard => {\n        return { ...currentCard, isPendulum: e.target.checked };\n    });\n    const onPictureChange = onChangeFactory('picture', setCard);\n    const onLinkMapChange = onChangeFactory('link_map', setCard);\n    const onRedScaleChange = onChangeFactory('red_scale', setCard);\n    const onBlueScaleChange = onChangeFactory('blue_scale', setCard);\n    const onPendulumEffectChange = debounce(onChangeFactory('pendulum_effect', setCard), 250);\n    const onEffectChange = debounce(onChangeFactory('effect', setCard), 250);\n    const onATKChange = onChangeFactory('atk', setCard);\n    const onDEFChange = onChangeFactory('def', setCard);\n    const onTypeAbilityChange = debounce((value: (string | number)[]) => {\n        setCard(current => ({\n            ...current,\n            type_ability: value.map(entry => `${entry}`),\n        }));\n    }, 250);\n    const onSetIDChange = onChangeFactory('set_id', setCard);\n    const onPasscodeChange = onChangeFactory('passcode', setCard);\n    const onStickerChange = onChangeFactory('sticker', setCard);\n    const onCreatorChange = onChangeFactory('creator', setCard);\n    const onFirstEditionChange = (e: any) => onCardChange(currentCard => {\n        return { ...currentCard, isFirstEdition: e.target.checked };\n    });\n\n    const {\n        frame, foil,\n        name, nameStyleType, nameStyle,\n        picture,\n        effect,\n        type_ability,\n        isPendulum, pendulum_effect, red_scale, blue_scale,\n        atk, def, link_map,\n        attribute,\n        subFamily,\n        star,\n        set_id,\n        passcode, isFirstEdition, creator, sticker,\n    } = currentCard;\n    const isXyz = checkXyz(currentCard);\n    const isLink = checkLink(currentCard);\n    const isMonster = checkMonster(currentCard);\n    const [displayTypeAbility, setDisplayTypeAbility] = useState(type_ability.join('/'));\n    const [displayName, setDisplayName] = useState(name);\n    const [displayEffect, setDisplayEffect] = useState(effect);\n    const [displayPendulumEffect, setDisplayPendulumEffect] = useState(pendulum_effect);\n    const [onlineCharPicker, setOnlineCharPicker] = useState('');\n    const ref = useRef();\n    \n\n    return <div className=\"card-info-panel\">\n        {children}\n        <CharPicker\n            targetId={onlineCharPicker}\n            onPick={value => {\n                if (ref.current) (ref.current as any)?.props?.onChange?.({\n                    target: { value }\n                });\n            }}\n        />\n        <CheckboxTrain className=\"foil-radio\" value={foil} onChange={onFoilChange} optionList={foilButton}>\n            <span>Foil</span>\n        </CheckboxTrain>\n        <CheckboxTrain className=\"frame-radio\" value={frame} onChange={onFrameChange} optionList={frameButton} />\n        <hr />\n        <div className=\"card-header custom-gap\">\n            <Input\n                id=\"name\"\n                ref={onlineCharPicker === 'name' ? ref as any : null}\n                onFocus={() => setOnlineCharPicker('name')}\n                allowClear\n                addonBefore={<>Name <StylePicker defaultType={nameStyleType} defaultValue={nameStyle} onChange={onNameColorChange} /></>}\n                placeholder=\"Card Name\"\n                value={displayName}\n                className=\"name-input\"\n                onChange={ev => {\n                    onNameChange(ev);\n                    setDisplayName(ev.target.value);\n                }}\n            />\n            {isMonster\n                ? !isLink\n                    ? <CheckboxTrain value={`${star}`} onChange={onStarChange} optionList={starButton}>\n                        <span>{isXyz ? 'Rank' : 'Level'}</span>\n                    </CheckboxTrain>\n                    : null\n                : <CheckboxTrain value={subFamily} onChange={onSubFamilyChange} optionList={iconButton}>\n                    <span>Icon</span>\n                </CheckboxTrain>\n            }\n            <CheckboxTrain className=\"checkbox-image-train\" value={attribute} onChange={onAttributeChange} optionList={attributeButton}>\n                <span>Attribute</span>\n            </CheckboxTrain>\n        </div>\n        <div key=\"pic\" className=\"main-info\">\n            <div className=\"main-info-first\">\n                <Input\n                    id=\"set-id\"\n                    ref={onlineCharPicker === 'set-id' ? ref as any : null}\n                    onFocus={() => setOnlineCharPicker('set-id')}\n                    allowClear\n                    className=\"set-id-input\"\n                    addonBefore={<>Set ID<RandomButton seeder={randomSetID} onGenerate={onSetIDChange} /></>}\n                    onChange={onSetIDChange}\n                    placeholder=\"Set ID\"\n                    value={set_id}\n                />\n                {(isMonster && frame !== 'link' && frame !== 'token') && <div className=\"pendulum-container\">\n                    <div className=\"joined-row\">\n                        <Checkbox onChange={onIsPendulumChange} checked={isPendulum}>Is Pendulum?</Checkbox>\n                        {isPendulum && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>Mirror Scale?</Checkbox>}\n                    </div>\n                    {isPendulum && <>\n                        <div>\n                            <Input key=\"blue-scale\" addonBefore={<span>\n                                <span style={{ color: '#3b9dff' }}>Blue</span> Scale\n                            </span>}\n                            value={blue_scale}\n                            onChange={e => {\n                                onBlueScaleChange(e);\n                                if (isMirrorScale) onRedScaleChange(e);\n                            }} />\n                        </div>\n                        <div>\n                            <Input key=\"red-scale\" addonBefore={<span>\n                                <span style={{ color: '#ff6f6f' }}>Red</span> Scale\n                            </span>}\n                            value={red_scale}\n                            onChange={e => {\n                                if (isMirrorScale) onBlueScaleChange(e);\n                                onRedScaleChange(e);\n                            }} />\n                        </div>\n                        <div className=\"joined-row\" style={{ position: 'relative' }}>\n                            <TextArea key=\"pendulum-effect\"\n                                id=\"pendulum-effect\"\n                                ref={onlineCharPicker === 'pendulum-effect' ? ref as any : null}\n                                onFocus={() => setOnlineCharPicker('pendulum-effect')}\n                                allowClear\n                                placeholder=\"Pendulum effect\"\n                                value={displayPendulumEffect}\n                                onChange={ev => {\n                                    onPendulumEffectChange(ev);\n                                    setDisplayPendulumEffect(ev.target.value);\n                                }}\n                                rows={6}\n                            />\n                        </div>\n                    </>}\n                </div>}\n                <Input addonBefore=\"Type\"\n                    id=\"type\"\n                    ref={onlineCharPicker === 'type' ? ref as any : null}\n                    onFocus={() => setOnlineCharPicker('type')}\n                    allowClear\n                    onChange={ev => {\n                        const value = ev.target.value;\n\n                        setDisplayTypeAbility(value);\n                        onTypeAbilityChange(value\n                            .split('/')\n                            .map(entry => entry.trim())\n                            .filter(entry => typeof entry === 'string' && entry.length > 0));\n                    }}\n                    placeholder=\"Type / Ability\"\n                    style={{ width: '100%' }}\n                    value={displayTypeAbility}\n                />\n                <TextArea key=\"effect\"\n                    id=\"card-effect\"\n                    ref={onlineCharPicker === 'card-effect' ? ref as any : null}\n                    onFocus={() => setOnlineCharPicker('card-effect')}\n                    allowClear\n                    placeholder=\"Card effect\"\n                    value={displayEffect}\n                    rows={10}\n                    onChange={ev => {\n                        onEffectChange(ev);\n                        setDisplayEffect(ev.target.value);\n                    }}\n                />\n                <div className=\"card-footer-input\">\n                    {isMonster\n                        ? <Input key=\"atk\"\n                            id=\"atk\"\n                            ref={onlineCharPicker === 'atk' ? ref as any : null}\n                            onFocus={() => setOnlineCharPicker('atk')}\n                            addonBefore=\"ATK\" allowClear value={atk} onChange={onATKChange} />\n                        : <div />}\n                    {isMonster\n                        ? <Input key=\"def\"\n                            id=\"def\"\n                            ref={onlineCharPicker === 'def' ? ref as any : null}\n                            onFocus={() => setOnlineCharPicker('def')}\n                            addonBefore=\"DEF\" allowClear value={def} onChange={onDEFChange} />\n                        : <div />\n                    }\n                    <Input\n                        id=\"password\"\n                        ref={onlineCharPicker === 'password' ? ref as any : null}\n                        onFocus={() => setOnlineCharPicker('password')}\n                        allowClear\n                        className=\"password-input\"\n                        addonBefore={<>Password<RandomButton seeder={randomPassword} onGenerate={onPasscodeChange} /></>}\n                        onChange={onPasscodeChange}\n                        placeholder=\"Password\"\n                        value={passcode}\n                    />\n                    <Checkbox\n                        className=\"input-1st\"\n                        onChange={onFirstEditionChange}\n                        checked={isFirstEdition}\n                    >\n                        Is 1st Edition?\n                    </Checkbox>\n                    <Input addonBefore=\"Creator\"\n                        id=\"creator\"\n                        ref={onlineCharPicker === 'creator' ? ref as any : null}\n                        onFocus={() => setOnlineCharPicker('creator')}\n                        allowClear\n                        className=\"creator-input\"\n                        onChange={onCreatorChange}\n                        placeholder=\"Creator\"\n                        value={creator}\n                    />\n                    <CheckboxTrain className=\"sticker-input checkbox-image-train\" value={sticker} onChange={onStickerChange} optionList={stickerButton}>\n                        <span>Sticker</span>\n                    </CheckboxTrain>\n                </div>\n            </div>\n            <div className=\"main-info-second\">\n                <ImageCropper\n                    noRedrawNumber={1}\n                    defaultExternalSource={picture}\n                    defaultCropInfo={defaultCropInfo}\n                    previewCanvasRef={receivingCanvasRef}\n                    onSourceChange={onPictureChange}\n                    onImageChange={onImageChange}\n                >\n                    {isLink\n                        ? <LinkMarkChooser defaultValue={link_map} onChange={onLinkMapChange} />\n                        : <div />}\n                </ImageCropper>\n            </div>\n        </div>\n    </div>;\n};","import React from 'react';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Popover } from 'antd';\nimport './app-header.scss';\n\nexport const AppHeader = React.memo(() => {\n    return <div className=\"app-header\">\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={48} />\n        <div className=\"app-description\">\n            <h1>Yugioh Carder <small>v{process.env.REACT_APP_VERSION ?? 'unknown'}</small></h1>\n            <div className=\"app-contribution\">\n                <span>GUI: <b>Lauqerm</b></span>\n                <span>Template: <b>Grezar</b> and others (<a\n                    href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\">Deviant Art</a>)</span>\n                <Popover overlayClassName=\"disclaimer-overlay\" content={<div className=\"disclaimer\">\n                    <h2>Disclaimer</h2>\n                    <ul>\n                        <li>This is a personal project, not an \"official\" card maker.</li>\n                        <li>I holds no liability for cards created by this app, including picture, card text and any product that related to it.</li>\n                        <li>I do not own any of Yu-Gi-Oh card layers and fonts use in this project.</li>\n                        <li>If you want to modify card layers, or use it in any public project, please contact <a\n                            href=\"https://www.deviantart.com/grezar\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\">Grezar</a> directly.</li>\n                    </ul>\n                </div>}>\n                    <ExclamationCircleOutlined className=\"disclaimer-icon\" />\n                </Popover>\n            </div>\n        </div>\n    </div>;\n}, () => true);","export type FontSize = {\n    fontSize: number,\n    lineHeight: number,\n    lineCount: number,\n};\nexport type BoxSize = {\n\twidth: number,\n\ttop: number,\n\tleft: number,\n};\n\nexport const monsterFontList: FontSize[] = [\n    { fontSize: 17, lineHeight: 17, lineCount: 6 },\n    { fontSize: 14, lineHeight: 14, lineCount: 7 },\n    { fontSize: 12, lineHeight: 12, lineCount: 8 },\n    { fontSize: 11, lineHeight: 11, lineCount: 9 },\n    { fontSize: 10, lineHeight: 10, lineCount: 10 },\n    { fontSize: 9, lineHeight: 9, lineCount: 11 },\n    { fontSize: 8, lineHeight: 8, lineCount: 12 },\n];\nexport const monsterSizeList: BoxSize[] = [\n    { width: 463, top: 620, left: 43.89 },\n    { width: 463, top: 624, left: 43.89 },\n    { width: 463, top: 624, left: 43.89 },\n    { width: 463, top: 624, left: 43.89 },\n    { width: 463, top: 624, left: 43.89 },\n    { width: 463, top: 624, left: 43.89 },\n    { width: 463, top: 624, left: 43.89 },\n];\nexport const monsterVanillaFontList: FontSize[] = [\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 6 },\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 7 },\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 8 },\n];\n\nexport const pendulumFontList: FontSize[] = [\n    { fontSize: 16.41, lineHeight: 16.44, lineCount: 5 },\n    { fontSize: 16.41, lineHeight: 16.44, lineCount: 5 },\n];\nexport const pendulumSizeList: BoxSize[] = [\n    { width: 375, top: 504.5, left: 87.05 },\n    { width: 375, top: 504.5, left: 87.05 },\n];\n\nexport const stFontList: FontSize[] = [\n    { fontSize: 16.41, lineHeight: 16.74, lineCount: 8 },\n    { fontSize: 13.46, lineHeight: 14.28, lineCount: 10 },\n];\nexport const stSizeList: BoxSize[] = [\n    { width: 461, top: 601, left: 45 },\n    { width: 461, top: 601, left: 45 },\n];\n\nexport type TypeSize = {\n\ttop: number,\n\tleft: number,\n    bracketSize: {\n        char: number,\n        bracketSpace: number,\n        bracketOffsetTop: number,\n    },\n    upperCaseSize: number,\n    upperCaseScale: number,\n    lowerCaseSize: number,\n    lowerCaseScale: number,\n    spaceScale: number,\n    spaceSize: {\n        frontSpace: number,\n        char: number,\n        behindSpace: number,\n    },\n    iconSpace: number,\n};\nexport const typeSizeMap: Record<string, TypeSize> = {\n    small: {\n        top: 622,\n        left: 43,\n        bracketSize: {\n            char: 18.71,\n            bracketSpace: 8.51,\n            bracketOffsetTop: 1.64,\n        },\n        upperCaseSize: 20,\n        upperCaseScale: 1,\n        lowerCaseSize: 16,\n        lowerCaseScale: 1.1,\n        spaceScale: 1,\n        spaceSize: {\n            frontSpace: 5,\n            char: 21,\n            behindSpace: 15,\n        },\n        iconSpace: 0,\n    },\n    medium: {\n        top: 620.80,\n        left: 43,\n        bracketSize: {\n            char: 19.69,\n            bracketSpace: 8.51,\n            bracketOffsetTop: 1.64,\n        },\n        upperCaseSize: 21,\n        upperCaseScale: 1,\n        lowerCaseSize: 18,\n        lowerCaseScale: 0.95,\n        spaceScale: 1,\n        spaceSize: {\n            frontSpace: 5,\n            char: 23,\n            behindSpace: 15,\n        },\n        iconSpace: 0,\n    },\n    large: {\n        top: 126,\n        left: 494,\n        bracketSize: {\n            char: 25,\n            bracketSpace: 11,\n            bracketOffsetTop: 2,\n        },\n        upperCaseSize: 26,\n        upperCaseScale: 1.1,\n        lowerCaseSize: 23,\n        lowerCaseScale: 1,\n        spaceScale: 1.4,\n        spaceSize: {\n            frontSpace: 5,\n            char: 23,\n            behindSpace: 15,\n        },\n        iconSpace: 32,\n    },\n};","export const arrowPositionList = [\n    { top: 126, left: 46, width: 50, height: 51 },\n    { top: 116, left: 226, width: 99, height: 32 },\n    { top: 126, left: 453, width: 51, height: 51 },\n    { top: 305, left: 35, width: 33, height: 99 },\n    { top: 0, left: 0, width: 0, height: 0 },   // Middle\n    { top: 305, left: 482, width: 32, height: 99 },\n    { top: 534, left: 46, width: 50, height: 50 },\n    { top: 562, left: 226, width: 99, height: 33 },\n    { top: 534, left: 453, width: 51, height: 50 },\n];\n\nexport const foilPosition: Record<string, {\n    art: { left: number }\n}> = {\n    gold: {\n        art: {\n            left: 2,\n        }\n    },\n    platinum: {\n        art: {\n            left: 1,\n        }\n    },\n};","import { FontSize, monsterFontList, BoxSize, monsterSizeList } from '../const';\nimport { defaultTextStyle, TextStyle } from '../model';\nimport { splitEffect, createCondenser, quoteConvert } from '../util';\n\nexport const drawName = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    edge: number,\n    baseline: number,\n    maxWidth: number,\n    style: TextStyle,\n) => {\n    if (ctx) {\n        ctx.fillStyle = style.fillStyle;\n        if (style.hasShadow) {\n            ctx.shadowColor = style.shadowColor;\n            ctx.shadowOffsetY = style.shadowOffsetY;\n            ctx.shadowOffsetX = style.shadowOffsetX;\n            ctx.shadowBlur = style.shadowBlur;\n        }\n        const splittedText = quoteConvert(value).split(/([^&A-Za-z0-9\\-/\\s()])/g);\n        const contentWidth = splittedText\n            .reduce((prev, cur, index) => {\n                if (index % 2 === 0) ctx.font = '64.59px MatrixRegularSmallCaps';\n                else ctx.font = '54.59px matrix';\n\n                return prev + ctx.measureText(cur).width;\n            }, 0);\n\n        // ctx.fillText(value, edge, baseline, maxWidth);\n        if (contentWidth > 0) {\n            const condenseRatio = Math.min(maxWidth / contentWidth, 1);\n            ctx.scale(condenseRatio, 1);\n            splittedText\n                .reduce((prev, cur, index) => {\n                    if (index % 2 === 0) ctx.font = '64.59px MatrixRegularSmallCaps';\n                    else ctx.font = 'small-caps 54.59px matrix';\n    \n                    ctx.fillText(cur, prev / condenseRatio, baseline);\n                    return prev + ctx.measureText(cur).width * condenseRatio;\n                }, edge);\n            ctx.scale(1 / condenseRatio, 1);\n        }\n        ctx.fillStyle = defaultTextStyle.fillStyle;\n        ctx.shadowColor = defaultTextStyle.shadowColor;\n        ctx.shadowOffsetY = defaultTextStyle.shadowOffsetY;\n        ctx.shadowOffsetX = defaultTextStyle.shadowOffsetX;\n        ctx.shadowBlur = defaultTextStyle.shadowBlur;\n    }\n};\n\nexport const drawScale = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    edge: number,\n    baseline: number,\n) => {\n    if (ctx) {\n        const digitList = `${value}`.split('');\n        let totalWidth = 0;\n\n        digitList.forEach(digit => {\n            totalWidth += (digit === '1' ? ctx.measureText(digit).width * 0.65 : ctx.measureText(digit).width);\n        });\n        let accLeft = edge - totalWidth / 2;\n\n        digitList.forEach(digit => {\n            ctx.fillText(digit, digit === '1' ? accLeft - 3 : accLeft, baseline);\n            accLeft += (digit === '1' ? ctx.measureText(digit).width * 0.65 : ctx.measureText(digit).width);\n        });\n    }\n};\n\nexport const drawEffect = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    isPendulumEffect = false,\n    isNormal = false,\n    fontList: FontSize[] = monsterFontList,\n    sizeList: BoxSize[] = monsterSizeList,\n) => {\n    const normalizedContent = quoteConvert(content);\n    let effectIndexSize = 0;\n    if (ctx) {\n        const tolerantPerSentence: Record<string, number> = {\n            '1': 645,\n            '2': 665,\n            '3': 685,\n        };\n        const {\n            body: effectBody,\n            flavorCondition: effectFlavorCondition,\n            material: effectMaterial,\n        } = isPendulumEffect\n            ? {\n                body: normalizedContent,\n                flavorCondition: '',\n                material: '',\n            } : splitEffect(normalizedContent, isNormal);\n\n        const additionalLineCount = (effectMaterial.length > 0 ? 1 : 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\n        const sentencizeText = effectBody.split('\\n');\n        const bulletSymbol = '●';\n        const bulletSymbolWidth = 15;\n        const specialSymbol = '#@∞';\n        const breakableSymbol = '\\\\s-';\n        \n        const tokenizeR = new RegExp(`([${specialSymbol}${breakableSymbol}])`, 'g');\n        const specialSymbolReg = new RegExp(specialSymbol, 'g');\n\n        while(effectIndexSize < fontList.length) {\n            const { fontSize, lineHeight, lineCount } = fontList[effectIndexSize];\n            const { left, width: basedWidth, top } = sizeList[effectIndexSize];\n            const width = isNormal ? basedWidth - 2 : basedWidth;\n            const condenser = createCondenser();\n            let effectiveRatio = 1000;\n\n            const maxLine = Math.max(sentencizeText.length, lineCount);\n\n            ctx.font = `${isNormal ? 'italic' : ''} ${fontSize}px MatrixBook`;\n            ctx.textAlign = 'left';\n\n            const switchFont = (func: () => void) => {\n                const tempFont = ctx.font;\n                const largeSize = fontSize * 1.15;\n                ctx.font = tempFont.replace('MatrixBook', 'matrix').replace(`${fontSize}`, `${largeSize}`);\n                func();\n                ctx.font = tempFont;\n            };\n\n            // [CREATE SENTENCE ON EACH LINE]\n            let lineList: { text: string, width: number, isLast: boolean }[] = [];\n            const createSentence = () => {\n                lineList = [];\n\n                return sentencizeText.reduce((prev, curr) => {\n                    // The width is \"expand\" based on condense ratio so all the calculate does not need to be scaled\n                    const condenseRatio = condenser.getMedian() / 1000;\n                    const hypoWidth = width / condenseRatio;\n                    const tokenizedText = curr.split(tokenizeR);\n                    let currentLineCount = 1;\n                    let tokenSentence: string[] = [];\n                    let totalWidth = 0;\n\n                    for (let cnt = 0; cnt < tokenizedText.length; cnt++) {\n                        let tokenWidth = 0;\n                        /**\n                         * If bullet symbol is met, it will become \"wider\" based on condense ratio\n                         * so that when the whole line is condense, bullet symbol's width become\n                         * \"normal\", as if it were not condensed\n                         */\n                        if (tokenizedText[cnt] === bulletSymbol) tokenWidth = bulletSymbolWidth / condenseRatio;\n                        /**\n                         * Some special symbol required different font\n                         */\n                        else if (specialSymbolReg.test(tokenizedText[cnt])) {\n                            switchFont(() => {\n                                tokenWidth = ctx.measureText(tokenizedText[cnt]).width;\n                            });\n                        } else tokenWidth = ctx.measureText(tokenizedText[cnt]).width;\n                        if (totalWidth + tokenWidth > hypoWidth) {\n                            // If the next token cause overflow, wrap it down\n                            const fullString = tokenSentence.join('').trim();\n                            // Calculate the line width as if the bullet is wider\n                            const fullStringSplittedByBullet = fullString.split(bulletSymbol);\n                            lineList.push({\n                                text: fullString,\n                                width: fullStringSplittedByBullet.reduce((prev, curr) => prev + ctx.measureText(curr).width, 0)\n                                    + (fullStringSplittedByBullet.length - 1) * bulletSymbolWidth / condenseRatio,\n                                isLast: false,\n                            });\n                            totalWidth = tokenWidth;\n                            tokenSentence = [tokenizedText[cnt]];\n                            currentLineCount += 1;\n                        } else {\n                            totalWidth += tokenWidth;\n                            tokenSentence.push(tokenizedText[cnt]);\n                        }\n                    }\n\n                    const fullString = tokenSentence.join('').trim();\n                    const fullStringSplittedByBullet = fullString.split(bulletSymbol);\n                    lineList.push({\n                        text: fullString,\n                        width: fullStringSplittedByBullet.reduce((prev, curr) => prev + ctx.measureText(curr).width, 0)\n                            + (fullStringSplittedByBullet.length - 1) * bulletSymbolWidth / condenseRatio,\n                        isLast: true,\n                    });\n    \n                    return prev + currentLineCount;\n                }, 0) + additionalLineCount;\n            };\n\n            // [FIND SUITABLE CONDENSE RATIO]\n            while (condenser.getIterateCount() >= 0) {\n                if (condenser.getIterateCount() <= 0) {\n                    // When out of iteration, return the concluded median\n                    effectiveRatio = condenser.getMedian();\n                    break;\n                } else {\n                    const lineCount = createSentence();\n\n                    if (lineCount > maxLine) {\n                        // If overflow, lower the median and apply it\n                        condenser.searchDown();\n                    } else {\n                        if (condenser.getMedian() === 1000) break;\n                        else effectiveRatio = condenser.reverseSearch();\n                    }\n                }\n            }\n\n            // [START DRAWING]\n            const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number) => {\n                ctx.beginPath();\n                ctx.arc(edge + 7, baseline - 5.5, 5.5, 0, 2 * Math.PI, false);\n                ctx.fill();\n                ctx.lineWidth = 1;\n                ctx.strokeStyle = '#003300';\n                ctx.stroke();\n            };\n            if ((effectiveRatio < (tolerantPerSentence[`${sentencizeText.length}`] ?? tolerantPerSentence['3']))\n            && effectIndexSize < fontList.length - 1) {\n                effectIndexSize += 1;\n            } else {\n                ctx?.clearRect(0, 0, 549, 750);\n                let baseline = top + lineHeight;\n                if (effectMaterial.length > 0) {\n                    let actualWidth = ctx.measureText(effectMaterial).width;\n                    let condenseRatio = Math.min(width / actualWidth, 1);\n\n                    ctx.scale(condenseRatio, 1);\n                    ctx.fillText(effectMaterial, left / condenseRatio, baseline);\n                    baseline += lineHeight;\n                    ctx.scale(1 / condenseRatio, 1);\n                }\n\n                const sigmoidRatio = effectiveRatio / 1000; // Fancy way to force ratio in to 0-1 range\n                lineList.forEach(({\n                    text,\n                    width: actualWidth,\n                    isLast,\n                }) => {\n                    const condenseRatio = isLast\n                        ? Math.min(sigmoidRatio, 1)\n                        : width / actualWidth;\n\n                    if (condenseRatio <= 1) {\n                        ctx.scale(condenseRatio, 1);\n                        const splitter = new RegExp(`([${bulletSymbol}${specialSymbol}])`, 'g');\n                        const splittedText = text.split(splitter);\n\n                        splittedText.reduce((prev, cur, index) => {\n                            let edge = prev;\n\n                            // Normal text\n                            if (index % 2 === 0) {\n                                ctx.fillText(cur, edge / condenseRatio, baseline);\n                                edge += ctx.measureText(cur).width * condenseRatio;\n                            } else {\n                                // Special bullet\n                                if (cur === bulletSymbol) {\n                                    ctx.scale(1 / condenseRatio, 1);\n                                    drawBullet(ctx, edge, baseline);\n                                    edge += 15;\n                                    ctx.scale(condenseRatio, 1);\n                                } else {\n                                    switchFont(() => {\n                                        ctx.fillText(cur, edge / condenseRatio, baseline);\n                                        edge += ctx.measureText(cur).width * condenseRatio;\n                                    });\n                                }\n                            }\n\n                            return edge;\n                        }, left);\n                        baseline += lineHeight;\n                        ctx.scale(1 / condenseRatio, 1);\n                    } else {\n                        const splitter = new RegExp(`([${bulletSymbol}${specialSymbol} ])`, 'g');\n                        const spaceSeparatedText = text.split(splitter);\n                        ctx.scale(1, 1);\n                        let nonSpaceWidth = 0;\n                        let spaceCount = 0;\n\n                        spaceSeparatedText.forEach(entry => {\n                            if (entry === ' ') spaceCount += 1;\n                            else if (entry === bulletSymbol) nonSpaceWidth += 15;\n                            else if (specialSymbolReg.test(entry)) {\n                                switchFont(() => nonSpaceWidth += ctx.measureText(entry).width);\n                            } else nonSpaceWidth += ctx.measureText(entry).width;\n                        });\n                        // Split text by \"space\", then distribute remaining width to those spaces, resulting in \"widen\" space\n                        const spaceWidth = spaceCount > 0 ? (width - nonSpaceWidth) / spaceCount : 0;\n\n                        spaceSeparatedText.reduce((prev, cur, index) => {\n                            let edge = prev;\n\n                            // Normal text\n                            if (index % 2 === 0) {\n                                ctx.fillText(cur, edge, baseline);\n                                edge += ctx.measureText(cur).width;\n                            } else {\n                                // Special bullet\n                                if (cur === bulletSymbol) {\n                                    drawBullet(ctx, edge, baseline);\n                                    edge += 15;\n                                } else if (cur === ' ') {\n                                    edge += spaceWidth;\n                                } else {\n                                    switchFont(() => {\n                                        ctx.fillText(cur, edge, baseline);\n                                        edge += ctx.measureText(cur).width;\n                                    });\n                                }\n                            }\n\n                            return edge;\n                        }, left);\n                        baseline += lineHeight;\n                    }\n                });\n\n                if (effectFlavorCondition.length > 0) {\n                    let actualWidth = ctx.measureText(effectFlavorCondition).width;\n                    let condenseRatio = Math.min(width / actualWidth, 1);\n\n                    ctx.font = `${fontSize}px MatrixBook`;\n                    ctx.scale(condenseRatio, 1);\n                    ctx.fillText(effectFlavorCondition, left / condenseRatio, baseline);\n                    baseline += lineHeight;\n                    ctx.scale(1 / condenseRatio, 1);\n                }\n                break;\n            }\n        }\n\n        return effectIndexSize;\n    }\n    return effectIndexSize;\n};","export const measureWithSymbol = (\n    ctx: CanvasRenderingContext2D,\n    content: string,\n    symbol: string,\n    maxWidth: number,\n) => {\n    const splittedContent = content.split(symbol);\n    const splittedWidth = splittedContent.map(entry => ctx.measureText(entry).width);\n    const symbolWidth = ctx.measureText(symbol).width;\n    const totalCondensableWidth = splittedWidth.reduce((prev, curr) => prev + curr, 0);\n    const returnBundle = {\n        splittedContent,\n        splittedWidth,\n        symbolWidth,\n        totalCondensableWidth,\n        condenseRatio: 1,\n    };\n\n    if (totalCondensableWidth > 0) {\n        // Calculate as if the \"symbol\" always appear as full width\n        returnBundle.condenseRatio = Math.min((maxWidth - (splittedWidth.length - 1) * symbolWidth) / totalCondensableWidth, 1);\n    }\n\n    return returnBundle;\n};\n\nexport const fillTextLeftWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacingRatio: number,\n    edge: number,\n    baseline: number,\n) => {\n    if (ctx) {\n        ctx.textAlign = 'left';\n        const charList = str.split('');\n        let curLeft = edge;\n\n        charList.forEach(char => {\n            ctx.fillText(char, curLeft, baseline);\n            curLeft += ctx.measureText(char).width * (1 + (letterSpacingRatio / 2));\n        });\n\n        return curLeft;\n    }\n    return 0;\n};\nexport const fillTextRightWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacingRatio: number,\n    edge: number,\n    baseline: number,\n) => {\n    if (ctx) {\n        ctx.textAlign = 'right';\n        const charList = str.split('');\n        let curRight = edge;\n\n        charList.forEach((c, index) => {\n            const char = charList[charList.length - index - 1];\n            ctx.fillText(char, curRight, baseline);\n            curRight -= ctx.measureText(char).width * (1 + (letterSpacingRatio / 2));\n        });\n        return curRight;\n    };\n    return edge;\n};\n\nexport const fillTextLeftWithLimit = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    edge: number,\n    baseline: number,\n    maxWidth: number,\n) => {\n    if (ctx) {\n        const contentWidth = ctx.measureText(content).width;\n\n        if (contentWidth > 0) {\n            const condenseRatio = Math.min(maxWidth / contentWidth, 1);\n            ctx.scale(condenseRatio, 1);\n            ctx.fillText(content, edge / condenseRatio, baseline);\n            ctx.scale(1 / condenseRatio, 1);\n            ctx.fillStyle = '#000000';\n        }\n    }\n};","import { fillTextRightWithSpacing, measureWithSymbol } from './util';\n\nexport const draw1stEdition = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    edge = 99,\n) => {\n    if (ctx) {\n        ctx.font = 'bold 16px palatino-linotype-bold';\n\n        let left = edge;\n        ctx.fillText('1', left, 777);\n        left += ctx.measureText('1').width - 2;\n\n        ctx.font = 'bold 12px palatino-linotype-bold';\n        ctx.fillText('st', left, 777 - 5);\n        left += ctx.measureText('st').width;\n\n        ctx.font = 'bold 15px palatino-linotype-bold';\n        ctx.fillText(' Edition', left, 777);\n    }\n};\n\nexport const drawCreatorText = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n) => {\n    if (ctx) {\n        ctx.font = '16px stone-serif-regular';\n\n        const uncondensableSymbol = '©';\n        const {\n            splittedContent,\n            splittedWidth,\n            symbolWidth,\n            condenseRatio,\n        } = measureWithSymbol(ctx, content, uncondensableSymbol, 257);\n\n        if (condenseRatio < 1) {\n            ctx.textAlign = 'left';\n            ctx.scale(condenseRatio, 1);\n            splittedContent.reduce((prev, cur, index) => {\n                // Fill condense text at the current edge\n                ctx.fillText(cur, prev / condenseRatio, 777);\n                // Increase edge equal to the draw text (condense ratio factored)\n                let nextEdge = prev + splittedWidth[index] * condenseRatio;\n                if (index < splittedContent.length - 1) {\n                    // Restore 1:1 ratio\n                    ctx.scale(1 / condenseRatio, 1);\n                    // Increase edge equal to the character \"©\" (condense ratio is 1 so no factored)\n                    ctx.fillText(uncondensableSymbol, nextEdge, 777);\n                    nextEdge += symbolWidth;\n                    // Restore condense ratio\n                    ctx.scale(condenseRatio, 1);\n                }\n                return nextEdge;\n            }, 496 - 257);\n            ctx.scale(1 / condenseRatio, 1);\n        } else {\n            ctx.textAlign = 'right';\n            fillTextRightWithSpacing(ctx, content, -0.15, 496 / condenseRatio, 777);\n        }\n        ctx.textAlign = 'left';\n    }\n};\n\nexport const drawAD = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    $value: string | number,\n    edge: number,\n    baseline: number,\n) => {\n    if (ctx) {\n        ctx.textAlign = 'left';\n        const tokenizedText = `${$value}`.split('?');\n\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\n            ctx.font = '25px MatrixBoldSmallCaps';\n            let nextWidth = prev + ctx.measureText(curr).width;\n\n            if (index < tokenizedText.length - 1) {\n                ctx.font = '25px matrix';\n                nextWidth += ctx.measureText('?').width;\n            }\n\n            return nextWidth;\n        }, 0);\n\n        if (totalWidth > 0) {\n            const condenseRatio = Math.min(49.94 / totalWidth, 1);\n\n            ctx.scale(condenseRatio, 1);\n            tokenizedText.reduce((prev, curr, index, arr) => {\n                const curText = arr[arr.length - 1 - index];\n                let nextEdge = prev;\n                ctx.font = '25px MatrixBoldSmallCaps';\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\n\n                if (index < tokenizedText.length - 1) {\n                    ctx.font = 'bold 25px matrix';\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\n                }\n    \n                return nextEdge;\n            }, edge + 49.94);\n            ctx.scale(1 / condenseRatio, 1);\n        }\n    }\n};","import { TypeSize } from '../const';\n\ntype Aligment = 'left' | 'right';\nexport const drawBracketTemplate = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    size: TypeSize,\n    alignment: Aligment,\n) => {\n    return (edge: number) => {\n        if (ctx) {\n            const {\n                top: baseline,\n                bracketSize: { char: bracketChar, bracketOffsetTop }\n            } = size;\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\n\n            ctx.font = `bold ${bracketChar}px stone-serif-bold`;\n            ctx.textAlign = alignment;\n            ctx.fillText(content, edge, baseline - bracketOffsetTop);\n            return edge + ctx.measureText(content).width * alignmentOffset;\n        }\n        return edge;\n    };\n};\nexport const drawIconSpaceTemplate = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    size: TypeSize,\n    alignment: Aligment,\n) => {\n    return (edge: number) => {\n        if (ctx) {\n            const { iconSpace } = size;\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\n\n            return edge + iconSpace * alignmentOffset;\n        }\n        return edge;\n    };\n};\nexport const drawBracketSpaceTemplate = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    size: TypeSize,\n    alignment: Aligment,\n) => {\n    return (edge: number) => {\n        if (ctx) {\n            const { top: baseline, bracketSize: { bracketSpace } } = size;\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\n\n            ctx.font = `bold ${bracketSpace}px stone-serif-bold`;\n            ctx.textAlign = alignment;\n            ctx.fillText(content, edge, baseline);\n            return edge + ctx.measureText(content).width * alignmentOffset;\n        }\n        return edge;\n    };\n};\nexport const drawTextTemplate = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    isLast = false,\n    size: TypeSize,\n    alignment: Aligment,\n) => {\n    const {\n        top: baseline,\n        spaceSize: { frontSpace, char: spaceChar, behindSpace },\n        upperCaseScale,\n        upperCaseSize,\n        lowerCaseScale,\n        lowerCaseSize,\n        spaceScale,\n    } = size;\n    const alignmentOffset = alignment === 'left' ? 1 : -1;\n    const drawSlashTemplate = (\n        ctx: CanvasRenderingContext2D,\n        baseOffset: number,\n    ) => {\n        let totalOffset = baseOffset;\n        ctx.font = `bold ${frontSpace}px stone-serif-bold`;\n        ctx.fillText(' ', totalOffset, baseline);\n        totalOffset += ctx.measureText(' ').width * alignmentOffset;\n\t\n        ctx.font = `oblique bold ${spaceChar}px stone-serif-bold`;\n        ctx.scale(0.65, 1);\n        ctx.fillText('/', totalOffset / 0.65, baseline);\n        totalOffset += ctx.measureText('/').width * 0.65 * alignmentOffset;\n        ctx.scale(1 / 0.65, 1);\n\t\n        ctx.font = `bold ${behindSpace}px stone-serif-bold`;\n        ctx.fillText(' ', totalOffset, baseline);\n        totalOffset += ctx.measureText(' ').width * alignmentOffset;\n        return totalOffset;\n    };\n\n    return (left: number) => {\n        let totalOffset = left;\n        if (ctx) {\n            ctx.textAlign = alignment;\n\n            if (!isLast && alignment === 'right') totalOffset = drawSlashTemplate(ctx, totalOffset);\n            content\n                .split('')\n                .forEach((c, index, arr) => {\n                    const char = alignment === 'left' ? arr[index] : arr[arr.length - 1 - index];\n                    if (/[A-Z]/.test(char)) {\n                        ctx.font = `bold ${upperCaseSize}px stone-serif-bold`;\n                        ctx.scale(upperCaseScale, 1);\n                        ctx.fillText(char, totalOffset / upperCaseScale, baseline);\n                        totalOffset += ctx.measureText(char).width * upperCaseScale * alignmentOffset;\n                        ctx.scale(1 / upperCaseScale, 1);\n                    } else if (/\\s/.test(char)) {\n                        ctx.font = `bold ${lowerCaseSize}px stone-serif-bold`;\n                        ctx.scale(spaceScale, 1);\n                        ctx.fillText(char, totalOffset / spaceScale, baseline);\n                        totalOffset += ctx.measureText(char).width * spaceScale * alignmentOffset;\n                        ctx.scale(1 / spaceScale, 1);\n                    } else {\n                        const upperChar = char.toLocaleUpperCase();\n                        ctx.font = `bold ${lowerCaseSize}px stone-serif-bold`;\n                        ctx.scale(lowerCaseScale, 1);\n                        ctx.fillText(upperChar, totalOffset / lowerCaseScale, baseline);\n                        totalOffset += ctx.measureText(upperChar).width * lowerCaseScale * alignmentOffset;\n                        ctx.scale(1 / lowerCaseScale, 1);\n                    }\n                });\n            if (!isLast && alignment === 'left') totalOffset = drawSlashTemplate(ctx, totalOffset);\n            return totalOffset;\n        }\n        return totalOffset;\n    };\n};","const imageCacheMap: Record<string, {\n    image: HTMLImageElement,\n    ready: boolean,\n}> = {};\n\nexport const drawFromSource = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number),\n    sy: number | ((image: HTMLImageElement) => number),\n) => {\n    if (!ctx) return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        if (imageCacheMap[source]?.ready === true) {\n            const img = imageCacheMap[source].image;\n            let normalizedX = typeof sx === 'number' ? sx : sx(img);\n            let normalizedY = typeof sy === 'number' ? sy : sy(img);\n            ctx.drawImage(img, normalizedX, normalizedY);\n            resolve(true);\n        } else {\n            const img = new Image();\n            img.src = process.env.PUBLIC_URL + source;\n            img.onload = () => {\n                let normalizedX = typeof sx === 'number' ? sx : sx(img);\n                let normalizedY = typeof sy === 'number' ? sy : sy(img);\n                ctx.drawImage(img, normalizedX, normalizedY);\n                imageCacheMap[source].ready = true;\n                resolve(true);\n            };\n            img.onerror = () => {\n                resolve(false);\n            };\n            imageCacheMap[source] = {\n                image: img,\n                ready: false,\n            };\n        }\n    });\n};\n\nexport const drawFromSourceWithSize = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number),\n    sy: number | ((image: HTMLImageElement) => number),\n    dw: number, dh: number,\n) => {\n    if (!ctx) return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        if (imageCacheMap[source]?.ready === true) {\n            const img = imageCacheMap[source].image;\n            let normalizedX = typeof sx === 'number' ? sx : sx(img);\n            let normalizedY = typeof sy === 'number' ? sy : sy(img);\n            ctx.drawImage(img, normalizedX, normalizedY, dw, dh);\n            resolve(true);\n        } else {\n            const img = new Image();\n            img.src = process.env.PUBLIC_URL + source;\n            img.onload = () => {\n                let normalizedX = typeof sx === 'number' ? sx : sx(img);\n                let normalizedY = typeof sy === 'number' ? sy : sy(img);\n                ctx.drawImage(img, normalizedX, normalizedY, dw, dh);\n                imageCacheMap[source].ready = true;\n                resolve(true);\n            };\n            img.onerror = () => {\n                resolve(false);\n            };\n            imageCacheMap[source] = {\n                image: img,\n                ready: false,\n            };\n        }\n    });\n};","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport './app.scss';\nimport 'antd/dist/antd.css';\nimport {\n    Card,\n    defaultCard,\n    defaultTextStyle,\n    foilStyleMap,\n    iconList,\n} from './model';\nimport {\n    cardDataCondenser,\n    checkLink,\n    checkMonster,\n    checkNormal,\n    checkXyz,\n    getCardFrame,\n    insertUrlParam,\n    reverseCardDataCondenser,\n} from './util';\nimport { AppHeader, CardInputPanel } from './page';\nimport {\n    arrowPositionList,\n    foilPosition,\n    pendulumFontList,\n    pendulumSizeList,\n    stFontList,\n    stSizeList,\n    typeSizeMap,\n} from './const';\nimport {\n    draw1stEdition,\n    drawAD,\n    drawBracketSpaceTemplate,\n    drawBracketTemplate,\n    drawCreatorText,\n    drawEffect,\n    drawIconSpaceTemplate,\n    drawName,\n    drawScale,\n    drawTextTemplate,\n    fillTextLeftWithSpacing,\n    fillTextRightWithSpacing,\n    drawFromSource,\n    drawFromSourceWithSize,\n} from './draw';\nimport WebFont from 'webfontloader';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nfunction App() {\n    const [isInitializing, setInitializing] = useState(true);\n    const [error, setError] = useState('');\n    const [currentCard, setCard] = useState<Card>(defaultCard);\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n    const drawCanvasRef = useRef<HTMLCanvasElement>(null);\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const artCanvasRef = useRef<HTMLCanvasElement>(null);\n    const specialFrameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const subFamilyCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const attributeCanvasRef = useRef<HTMLCanvasElement>(null);\n    const ADCanvasRef = useRef<HTMLCanvasElement>(null);\n    const setIdRef = useRef<HTMLCanvasElement>(null);\n    const passcodeRef = useRef<HTMLCanvasElement>(null);\n    const creatorRef = useRef<HTMLCanvasElement>(null);\n    const stickerRef = useRef<HTMLCanvasElement>(null);\n\n    const {\n        frame, foil,\n        name, nameStyleType, nameStyle,\n        pictureCrop,\n        effect,\n        type_ability,\n        isPendulum, pendulum_effect, blue_scale, red_scale,\n        atk, def, link_map,\n        attribute,\n        subFamily,\n        star,\n        set_id,\n        passcode, isFirstEdition, creator, sticker,\n    } = currentCard;\n    const isNormal = checkNormal(currentCard);\n    const isXyz = checkXyz(currentCard);\n    const isLink = checkLink(currentCard);\n    const isMonster = checkMonster(currentCard);\n    const pendulumSize = 'medium';\n\n    const drawingPipeline = useRef<Record<string, () => Promise<any>>>({\n        frame: () => Promise.resolve(),\n        star: () => Promise.resolve(),\n        attribute: () => Promise.resolve(),\n        specialFrame: () => Promise.resolve(),\n        sticker: () => Promise.resolve(),\n    });\n    const [imageChangeCount, setImageChangeCount] = useState(0);\n\n    useEffect(() => {\n        const ctx = frameCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.frame = async () => {\n            ctx?.clearRect(0, 0, 549, 800);\n            const cardType = getCardFrame(frame);\n            const hasFoil = foil !== 'normal';\n\n            await drawFromSource(ctx, `/asset/image/frame/frame-${cardType}.png`, 0, 0);\n            if (hasFoil) {\n                const { art } = foilPosition[foil];\n\n                await drawFromSource(ctx, `/asset/image/frame/frame-art-${foil}.png`, art.left, 120);\n                await drawFromSource(ctx, `/asset/image/frame/frame-effect-${foil}.png`, 0, 580);\n            }\n        };\n    }, [foil, frame]);\n\n    useEffect(() => {\n        const ctx = artCanvasRef.current?.getContext('2d');\n        const previewCtx = previewCanvasRef.current;\n        if (previewCtx && ctx) {\n            ctx.clearRect(0, 0, 548, 650);\n            if (isPendulum) {\n                ctx.drawImage(previewCtx, 38, 144, 474, 470);\n            } else {\n                ctx.drawImage(previewCtx, 67, 147, 416, 416);\n            }\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isPendulum, imageChangeCount]);\n\n    useEffect(() => {\n        const ctx = specialFrameCanvasRef.current?.getContext('2d');\n        \n        drawingPipeline.current.specialFrame = async () => {\n            ctx?.clearRect(0, 0, 549, 800);\n            const hasFoil = foil !== 'normal';\n\n            const cardType = getCardFrame(frame);\n            if (isPendulum && !isLink) {\n                if (!isXyz) await drawFromSource(ctx, `/asset/image/pendulum/overlay-pendulum-${cardType}.png`, 0, 0);\n                await drawFromSource(ctx, `/asset/image/frame/frame-pendulum-${pendulumSize}.png`, 0, 0);\n                if (hasFoil) await drawFromSource(ctx, `/asset/image/frame/frame-pendulum-${pendulumSize}-${foil}.png`, 0, 0);\n            }\n\n            const foiledBorder = !hasFoil ? '/asset/image/frame/frame-border.png' : `/asset/image/frame/frame-border-${foil}.png`;\n            await drawFromSource(ctx, foiledBorder, 0, 0);\n            if (!isPendulum && isLink) {\n                if (hasFoil) await drawFromSource(ctx, `./asset/image/link/link-overlay-${foil}.png`, 0, 110);\n                else await drawFromSource(ctx, '/asset/image/link/link-overlay.png', 66, 146);\n                if (hasFoil) await drawFromSource(ctx, `/asset/image/link/link-overlay-arrow-${foil}.png`, 0, 110);\n\n                await Promise.all(link_map\n                    .map(entry => {\n                        const { left, top, height, width } = arrowPositionList[parseInt(entry) - 1];\n                        if (hasFoil) return drawFromSourceWithSize(ctx, `/asset/image/link/link-arrow-${entry}-${foil}.png`, left, top, width, height);\n                        else return drawFromSourceWithSize(ctx, `/asset/image/link/link-arrow-${entry}.png`, left, top, width, height);\n                    })\n                );\n                if (ctx) {\n                    ctx.textAlign = 'right';\n                    ctx.scale(1.2, 1);\n                    ctx.font = 'bold 24px Yugioh Rush Duel Numbers V4';\n                    ctx.fillText(`${link_map.length}`, 505 / 1.2, 746);\n                    ctx.scale(1 / 1.2, 1);\n                    ctx.textAlign = 'left';\n                }\n            }\n        };\n    }, [foil, frame, isLink, isPendulum, isXyz, link_map]);\n\n    useEffect(() => {\n        const ctx = attributeCanvasRef.current?.getContext('2d');\n        drawingPipeline.current.attribute = () => {\n            ctx?.clearRect(0, 0, 549, 100);\n\n            return drawFromSource(ctx, `/asset/image/attribute/attr-${attribute.toLowerCase()}.png`, 458, 37);\n        };\n    }, [attribute]);\n\n    useEffect(() => {\n        const ctx = subFamilyCanvasRef.current?.getContext('2d');\n        drawingPipeline.current.star = () => {\n            ctx?.clearRect(0, 0, 549, 150);\n            if (isMonster && !isLink) {\n                let counter = Math.min(13, star ?? 0);\n                let type = isXyz ? 'rank' : 'level';\n                let offset = 0 - (34 + 2.3636);\n                let totalWidth = 34 * counter + 2.3636 * (counter - 1);\n                let edge = counter <= 12\n                    ? isXyz\n                        ? 57 - 34\n                        : 492\n                    : isXyz\n                        ? (549 - totalWidth) / 2 - 34\n                        : (549 - totalWidth) / 2 + totalWidth;\n    \n                return Promise.all([...Array(counter)]\n                    .map(() => {\n                        offset += (34 + 2.3636);\n                        return drawFromSource(\n                            ctx,\n                            `/asset/image/sub-family/subfamily-${type}.png`,\n                            edge + (34 + offset) * (isXyz ? 1 : -1),\n                            99,\n                        );\n                    })\n                );\n            } else if (!isMonster) {\n                const normalizedSubFamily = subFamily.toUpperCase();\n                const hasSTIcon = normalizedSubFamily !== 'NO ICON'\n                        && iconList.includes(normalizedSubFamily);\n    \n                return hasSTIcon\n                    ? drawFromSourceWithSize(ctx, `/asset/image/sub-family/subfamily-${normalizedSubFamily.toLowerCase()}.png`,\n                        (image) => 491 - image.naturalWidth - 7,\n                        103,\n                        29, 29)\n                    : new Promise(resolve => resolve(true));\n            };\n            return new Promise(resolve => resolve(true));\n        };\n    }, [isLink, isMonster, isXyz, star, subFamily]);\n\n    useEffect(() => {\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 600);\n        if (ctx && isPendulum) {\n            let fontSize = 43;\n            let top = 532 + fontSize;\n\n            ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\n            ctx.textAlign = 'left';\n\n            drawScale(ctx, blue_scale ?? 0, 57, top);\n            drawScale(ctx, red_scale ?? 0, 493, top);\n        }\n    }, [isInitializing, blue_scale, isPendulum, red_scale]);\n\n    useEffect(() => {\n        const ctx = nameCanvasRef.current?.getContext('2d');\n        if (ctx) {\n            ctx.clearRect(0, 0, 549, 100);\n            ctx.textAlign = 'left';\n            const style = nameStyleType === 'auto'\n                ? foil !== 'normal'\n                    ? foilStyleMap[foil] ?? defaultTextStyle\n                    : { ...defaultTextStyle, fillStyle: isXyz ? '#ffffff' : '#000000' }\n                : nameStyle;\n\n            drawName(ctx, name, 40.52, 78, 409, style);\n        }\n    }, [foil, isInitializing, isXyz, name, nameStyle, nameStyleType]);\n\n    useEffect(() => {\n        const ctx = ADCanvasRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 800);\n        if (isMonster) {\n            drawAD(ctx, atk, 343.51, 747);\n            if (!isLink) {\n                drawAD(ctx, def, 454.93, 747);\n            }\n        }\n    }, [isInitializing, atk, def, isLink, isMonster]);\n\n    useEffect(() => {\n        const ctx = setIdRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 800);\n        if (ctx) {\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\n            else ctx.fillStyle = '#000';\n            ctx.font = '15px stone-serif-regular';\n\n            if (isPendulum) {\n                fillTextLeftWithSpacing(ctx, set_id, -0.1, 45, 746);\n            } else if (isLink) {\n                fillTextLeftWithSpacing(ctx, set_id, -0.1, 364, 590);\n            } else fillTextRightWithSpacing(ctx, set_id, -0.1, 492, 589);\n        }\n    }, [isInitializing, isLink, isPendulum, isXyz, set_id]);\n\n    useEffect(() => {\n        const ctx = passcodeRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 800);\n        if (ctx) {\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\n            else ctx.fillStyle = '#000';\n            ctx.font = '15px stone-serif-regular';\n\n            const endOfPasscode = fillTextLeftWithSpacing(ctx, passcode, 0.1, 25, 777);\n            if (isFirstEdition) {\n                if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\n                else ctx.fillStyle = '#000';\n\n                draw1stEdition(ctx, endOfPasscode + 10);\n            }\n        }\n    }, [isFirstEdition, isInitializing, isLink, isPendulum, isXyz, passcode]);\n\n    useEffect(() => {\n        const ctx = creatorRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 800);\n        if (ctx) {\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\n            else ctx.fillStyle = '#000';\n            \n            drawCreatorText(ctx, creator);\n        }\n    }, [isInitializing, isLink, isPendulum, isXyz, creator]);\n\n    useEffect(() => {\n        const ctx = stickerRef.current?.getContext('2d');\n        drawingPipeline.current.sticker = () => {\n            ctx?.clearRect(0, 0, 549, 800);\n\n            return drawFromSource(ctx, `/asset/image/sticker/sticker-${sticker.toLowerCase()}.png`, 499, 750);\n        };\n    }, [sticker]);\n\n    const drawTypeAbility  = useCallback((\n        ctx: CanvasRenderingContext2D | null | undefined,\n        textSize: 'small' | 'medium' | 'large',\n        alignment: 'left' | 'right' = 'left',\n    ) => {\n        if (ctx) {\n            ctx?.clearRect(0, 0, 549, 700);\n            const size = typeSizeMap[textSize] ?? typeSizeMap['medium'];\n            const { left } = size;\n            const normalizedSubFamily = subFamily.toUpperCase();\n            const instructionList = [\n                drawBracketTemplate(ctx, '[', size, alignment),\n                drawBracketSpaceTemplate(ctx, ' ', size, alignment),\n                ...type_ability.map((entry, index) => drawTextTemplate(\n                    ctx,\n                    entry,\n                    index === type_ability.length - 1,\n                    size, alignment)),\n                textSize === 'large'\n                    ? normalizedSubFamily === 'NO ICON'\n                        ? (edge: number) => edge + 4 * (alignment === 'left' ? 1 : -1)\n                        : drawIconSpaceTemplate(ctx, size, alignment)\n                    : (edge: number) => edge,\n                drawBracketTemplate(ctx, ']', size, alignment),\n            ];\n            const totalLeft = (alignment === 'left'\n                ? instructionList\n                : instructionList.reverse()).reduce((prev, curr) => {\n                return curr(prev);\n            }, left);\n            ctx.textAlign = 'left';\n            if (totalLeft > 508 && textSize === 'medium') drawTypeAbility(ctx, 'small', alignment);\n        }\n    }, [subFamily, type_ability]);\n    useEffect(() => {\n        const ctx = effectCanvasRef.current?.getContext('2d');\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 750);\n        if (isMonster) {\n            const effectIndexSize = drawEffect(ctx, effect, false, isNormal);\n            drawTypeAbility(typeCtx, effectIndexSize === 0\n                ? 'medium'\n                : 'small');\n        } else {\n            drawEffect(\n                ctx,\n                effect,\n                false,\n                false,\n                stFontList,\n                stSizeList,\n            );\n            drawTypeAbility(typeCtx, 'large', 'right');\n        }\n    }, [isInitializing, drawTypeAbility, effect, isMonster, isNormal]);\n    useEffect(() => {\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\n        ctx?.clearRect(0, 0, 549, 600);\n        if (isMonster && isPendulum) {\n            drawEffect(\n                ctx,\n                pendulum_effect,\n                true,\n                false,\n                pendulumFontList,\n                pendulumSizeList,\n            );\n        }\n    }, [isInitializing, isMonster, isPendulum, pendulum_effect]);\n\n    // const drawRefrenceImage = useCallback(async (ctx: CanvasRenderingContext2D | null | undefined) => {\n    //     let leftOffset = -5;\n    //     let topOffset = 150;\n    // let leftOffset = -4;\n    // let topOffset = 300;\n    // let leftOffset = -300;\n    // let topOffset = -7;\n    // let leftOffset = -1;\n    // let topOffset = 100;\n    // await drawFromSourceWithSize(ctx, '/asset/image/MP19-EN-C-1E.png', -leftOffset, -topOffset, 541, 800 * (541 / 549));\n    // }, []);\n\n    useEffect(() => {\n        const ctx = drawCanvasRef.current?.getContext('2d');\n        if (ctx) {\n            const pixelRatio = window.devicePixelRatio;\n            ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            ctx.imageSmoothingQuality = 'high';\n            ctx.clearRect(0, 0, 549, 800);\n        }\n        \n        // let fontLoaded = false;\n        WebFont.load({\n            custom: {\n                families: [\n                    'stone-serif-bold',\n                    'stone-serif-bold',\n                    'stone-serif-regular',\n                    'matrix',\n                    'palatino-linotype-bold',\n                    'MatrixBook',\n                    'MatrixBoldSmallCaps',\n                    'MatrixRegularSmallCaps',\n                    'Yugioh Rush Duel Numbers V4',\n                ],\n                urls: ['asset/font.css']\n            },\n            active: () => {\n                try {\n                    const localCardVersion = window.localStorage.getItem('card-version');\n                    const localCardData = window.localStorage.getItem('card-data');\n\n                    const urlParam = (new URLSearchParams(window.location.search)).get('data');\n                    if (urlParam) {\n                        console.log('🚀 ~ file: app.tsx ~ line 512 ~ useEffect ~ reverseCardDataCondenser(urlParam)', reverseCardDataCondenser(urlParam));\n                        setCard(reverseCardDataCondenser(urlParam) as any);\n                    } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\n                        setCard(JSON.parse(localCardData));\n                    }\n                } catch (e) {\n                    setCard(defaultCard);\n                }\n                setInitializing(false);\n            },\n            inactive: () => {\n                setError('Font could not be loaded');\n                setInitializing(false);\n            },\n        });\n    }, []);\n\n    const exportRef = useRef({\n        currentPipeline: Promise.resolve(),\n        queuedPipeline: false,\n    });\n    useEffect(() => {\n        let relevant = true;\n        if (isInitializing === false) {\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n\n            /**\n             * Run export pipeline\n             * - While it is running, every effect just mark pipeline as queued, then wait the current pipeline\n             * - If the pipeline is complete and there is no effect, run another pipeline and remove the queue\n             */\n            (async () => {\n                const canvasRef = drawCanvasRef.current;\n                if (canvasRef) {\n                    document.querySelector('#export-canvas-guard')?.setAttribute('style', '');\n                    exportRef.current.queuedPipeline = true;\n                    await exportRef.current.currentPipeline;\n\n                    if (relevant) {\n                        exportRef.current.currentPipeline = onExport({ isPendulum });\n                        exportRef.current.queuedPipeline = false;\n\n                        await exportRef.current.currentPipeline;\n                        if (relevant) {\n                            const condensedCard = cardDataCondenser(currentCard);\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\n                            document.querySelector('#export-canvas-guard')?.setAttribute('style', 'display: none');\n                        }\n                    }\n                }\n            })();\n        }\n\n        return () => {\n            relevant = false;\n        };\n    });\n\n    const onExport = useRef(async (exportProps: {\n        isPendulum: boolean,\n    }) => {\n        const {\n            isPendulum = false\n        } = exportProps;\n        const canvasRef = drawCanvasRef.current;\n        const exportCtx = canvasRef?.getContext('2d');\n        const generateLayer = (canvasLayer: React.RefObject<HTMLCanvasElement>, ctx: CanvasRenderingContext2D | null | undefined) => {\n            return new Promise<boolean>(resolve => {\n                if (canvasLayer.current && ctx) {\n                    const layerData = canvasLayer.current.toDataURL('image/png');\n\n                    if (layerData) {\n                        var layer = new Image();\n                        layer.src = layerData;\n                        layer.onload = () => {\n                            ctx.drawImage(layer, 0, 0);\n                            resolve(true);\n                        };\n                        layer.onerror = () => resolve(false);\n                    } else resolve(false);\n                } else resolve(false);\n            });\n        };\n\n        if (canvasRef && exportCtx) {\n            exportCtx.clearRect(0, 0, 549, 800);\n            await Promise.all(Object\n                .values(drawingPipeline.current)\n                .map(callDraw => {\n                    return callDraw();\n                }));\n            await generateLayer(frameCanvasRef, exportCtx);\n            const previewCtx = previewCanvasRef.current;\n            if (previewCtx && exportCtx) {\n                if (isPendulum) {\n                    exportCtx.drawImage(previewCtx, 38, 144, 474, 470);\n                } else {\n                    exportCtx.drawImage(previewCtx, 67, 147, 416, 416);\n                }\n            }\n            await generateLayer(specialFrameCanvasRef, exportCtx);\n            const layerList = [\n                nameCanvasRef,\n                attributeCanvasRef,\n                subFamilyCanvasRef,\n                pendulumScaleCanvasRef,\n                pendulumEffectCanvasRef,\n                typeCanvasRef,\n                effectCanvasRef,\n                ADCanvasRef,\n                setIdRef,\n                passcodeRef,\n                creatorRef,\n                stickerRef,\n            ];\n            await Promise.all([\n                layerList.map(currentlayer => generateLayer(currentlayer, exportCtx)),\n            ]);\n            // await drawRefrenceImage(exportCtx);\n        }\n    }).current;\n\n    return (\n        <div className={'app-container'} style={{\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\n        }}>\n            {isInitializing && <div className=\"full-loading\">\n                {error.length > 0 ? <span style={{ color: '#e04040' }}>\n                    {error}\n                </span> : 'Loading fonts and scripts...'}\n            </div>}\n            <div className=\"card-filter-panel\">\n            </div>\n            {isInitializing === false && <CardInputPanel\n                receivingCanvasRef={previewCanvasRef.current}\n                currentCard={currentCard}\n                onCardChange={setCard}\n                defaultCropInfo={pictureCrop}\n                onImageChange={cropInfo => {\n                    setImageChangeCount(cnt => cnt + 1);\n                    if (cropInfo) setCard(curr => ({\n                        ...curr,\n                        pictureCrop: cropInfo,\n                    }));\n                }}\n            >\n                <AppHeader /><br />\n            </CardInputPanel>}\n            <div className=\"card-preview-panel\">\n                <button className=\"export-button\">Save Card:<br />Right click the card → \"Save image as...\" / \"Copy Image\"</button>\n                <div className=\"card-canvas-group\">\n                    <canvas id=\"export-canvas\" ref={drawCanvasRef} width={549} height={800} />\n                    <div id=\"export-canvas-guard\">\n                        <div className=\"canvas-guard-alert\">Generating...</div>\n                        <LoadingOutlined />\n                    </div>\n                    <canvas id=\"frameCanvas\" ref={frameCanvasRef} width={549} height={800} />\n                    <canvas id=\"artCanvas\" ref={artCanvasRef} width={549} height={650} />\n                    <canvas id=\"specialFrameCanvas\" ref={specialFrameCanvasRef} width={549} height={800} />\n                    <canvas id=\"nameCanvas\" ref={nameCanvasRef} width={549} height={100} />\n                    <canvas id=\"attributeCanvas\" ref={attributeCanvasRef} width={549} height={100} />\n                    <canvas id=\"subFamilyCanvas\" ref={subFamilyCanvasRef} width={549} height={150} />\n                    <canvas id=\"pendulumScaleCanvas\" ref={pendulumScaleCanvasRef} width={549} height={600} />\n                    <canvas id=\"pendulumEffectCanvas\" ref={pendulumEffectCanvasRef} width={549} height={600} />\n                    <canvas id=\"typeCanvas\" ref={typeCanvasRef} width={549} height={700} />\n                    <canvas id=\"effectCanvas\" ref={effectCanvasRef} width={549} height={750} />\n                    <canvas id=\"ADCanvas\" ref={ADCanvasRef} width={549} height={800} />\n                    <canvas id=\"setId\" ref={setIdRef} width={549} height={800} />\n                    <canvas id=\"passcode\" ref={passcodeRef} width={549} height={800} />\n                    <canvas id=\"creator\" ref={creatorRef} width={549} height={800} />\n                    <canvas id=\"sticker\" ref={stickerRef} width={549} height={800} />\n                    <canvas className=\"crop-canvas\" ref={previewCanvasRef} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}