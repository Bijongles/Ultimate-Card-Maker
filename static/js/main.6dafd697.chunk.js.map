{"version":3,"sources":["model/index.tsx","util/categorize.tsx","util/condenser.ts","util/canvas.ts","util/index.tsx","component/card-picture/index.tsx","component/link-marker/index.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/style-picker/index.tsx","page/input-panel/index.tsx","const/size.ts","const/position.ts","draw/text.ts","draw/util.ts","draw/predefine.ts","draw/type-ability.ts","app.tsx","reportWebVitals.js","index.js"],"names":["defaultTextStyle","fillStyle","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","globalAlpha","defaultMonster","atk","attribute","frame","subFamily","def","type_ability","effect","link_map","name","nameStyleType","nameStyle","passcode","foil","sticker","isPendulum","pendulum_effect","red_scale","blue_scale","picture","pictureCrop","x","y","width","height","aspect","unit","set_id","star","isFirstEdition","creator","frameType","color","backgroundColor","iconList","checkXyz","card","checkLink","checkMonster","getCardFrame","find","entry","toLowerCase","createCondenser","minThreshold","maxThreshold","min","max","median","lastEffective","iterateCount","magnitude","reverseSearch","finish","Math","searchDown","reset","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","imageCacheMap","drawFromSource","ctx","source","sx","sy","a","Promise","resolve","ready","img","image","normalizedX","normalizedY","drawImage","Image","src","onload","onerror","drawFromSourceWithSize","dw","dh","randomCharacter","charSet","length","result","charactersLength","i","charAt","floor","random","randomSetID","randomPassword","splitEffect","isNormal","effectBody","effectMaterial","materialRegex","materialReplacement","exec","material","replace","effectFlavorCondition","flavorConditionRegex","flavorCondition","body","quoteConvert","text","normalizedString","ImageCropper","noRedrawNumber","defaultExternalSource","previewCanvasRef","children","ratio","defaultCropInfo","onSourceChange","onImageChange","useState","sourceType","setSourceType","internalSource","setInternalSource","externalSource","setExternalSource","imgRef","useRef","crop","setCrop","completedCrop","setCompletedCrop","onLoad","useCallback","current","useEffect","canvas","getContext","scaleX","naturalWidth","scaleY","naturalHeight","pixelRatio","window","devicePixelRatio","boundingWidth","ceil","getBoundingClientRect","boundingHeight","setTransform","imageSmoothingQuality","className","Group","onChange","e","target","value","Button","addonBefore","placeholder","maxLength","type","accept","files","reader","FileReader","addEventListener","readAsDataURL","disabled","onClick","toBlob","blob","previewUrl","URL","createObjectURL","anchor","document","createElement","download","href","click","revokeObjectURL","generateDownload","style","onImageLoaded","cropData","onComplete","ruleOfThirds","LinkMarkChooser","defaultValue","choosenArrow","setChoosenArrow","rotateMap","literalChoosenArrow","JSON","stringify","Array","map","index","normalizedIndex","overlay","includes","cur","newMap","filter","push","transform","RadioButton","Radio","foilButton","fontWeight","toLocaleUpperCase","frameButton","attributeButton","alt","iconButton","starButton","stickerButton","CharPicker","targetId","onPick","setTarget","internalOnPick","char","inputTarget","getElementById","myField","myValue","selection","focus","createRange","position","selectionStart","startPos","endPos","selectionEnd","substring","insertAtCursor","onDrag","left","top","id","EllipsisOutlined","container","edge","draggable","throttleDrag","StylePicker","React","memo","defaultType","setType","setValue","isVisible","setVisible","background","zIndex","checked","CloseOutlined","newStyle","hex","TextArea","Input","onChangeFactory","key","mutateFunction","valueTransform","isArray","RandomButton","seeder","onGenerate","marginLeft","paddingLeft","borderLeft","SyncOutlined","CardInputPanel","currentCard","receivingCanvasRef","onCardChange","isMirrorScale","setMirrorScale","setCard","mutateFunc","onFoilChange","onAttributeChange","onSubFamilyChange","onNameChange","debounce","onStarChange","onPictureChange","onLinkMapChange","onRedScaleChange","onBlueScaleChange","onPendulumEffectChange","onEffectChange","onATKChange","onDEFChange","onTypeAbilityChange","onSetIDChange","onPasscodeChange","onStickerChange","onCreatorChange","isXyz","isLink","isMonster","join","displayTypeAbility","setDisplayTypeAbility","displayName","setDisplayName","displayEffect","setDisplayEffect","displayPendulumEffect","setDisplayPendulumEffect","onlineCharPicker","setOnlineCharPicker","ref","props","isST","onFocus","allowClear","ev","rows","split","trim","monsterFontList","fontSize","lineHeight","lineCount","monsterSizeList","pendulumFontList","pendulumSizeList","stFontList","stSizeList","typeSizeMap","small","bracketSize","bracketSpace","bracketOffsetTop","upperCaseSize","upperCaseScale","lowerCaseSize","lowerCaseScale","spaceScale","spaceSize","frontSpace","behindSpace","iconSpace","medium","large","arrowPositionList","foilPosition","gold","art","platinum","drawScale","baseline","digitList","totalWidth","forEach","digit","measureText","accLeft","fillText","drawEffect","content","isPendulumEffect","fontList","sizeList","normalizedContent","effectIndexSize","tolerantPerSentence","additionalLineCount","sentencizeText","bulletSymbol","specialSymbol","tokenizeR","RegExp","specialSymbolReg","condenser","effectiveRatio","maxLine","font","textAlign","switchFont","func","tempFont","largeSize","lineList","reduce","prev","curr","condenseRatio","hypoWidth","tokenizedText","currentLineCount","tokenSentence","cnt","tokenWidth","test","fullString","fullStringSplittedByBullet","isLast","drawBullet","beginPath","arc","PI","fill","lineWidth","strokeStyle","stroke","clearRect","actualWidth","scale","sigmoidRatio","splitter","spaceSeparatedText","nonSpaceWidth","spaceCount","spaceWidth","fillTextLeftWithSpacing","str","letterSpacingRatio","charList","curLeft","fillTextRightWithSpacing","curRight","c","drawCreatorText","symbol","maxWidth","splittedContent","splittedWidth","symbolWidth","totalCondensableWidth","returnBundle","measureWithSymbol","nextEdge","drawAD","$value","nextWidth","arr","curText","drawBracketTemplate","size","alignment","bracketChar","alignmentOffset","drawIconSpaceTemplate","drawBracketSpaceTemplate","drawTextTemplate","spaceChar","drawSlashTemplate","baseOffset","totalOffset","upperChar","App","isInitializing","setInitializing","error","setError","drawCanvasRef","frameCanvasRef","artCanvasRef","specialFrameCanvasRef","subFamilyCanvasRef","pendulumScaleCanvasRef","pendulumEffectCanvasRef","typeCanvasRef","effectCanvasRef","nameCanvasRef","attributeCanvasRef","ADCanvasRef","setIdRef","passcodeRef","firstEditionRef","creatorRef","stickerRef","pendulumSize","drawingPipeline","specialFrame","imageChangeCount","setImageChangeCount","cardType","hasFoil","previewCtx","foiledBorder","all","parseInt","counter","offset","normalizedSubFamily","toUpperCase","splittedText","contentWidth","drawName","draw1stEdition","drawTypeAbility","instructionList","reverse","typeCtx","WebFont","load","custom","families","urls","active","localCardVersion","localStorage","getItem","localCardData","process","parse","inactive","exportRef","currentPipeline","queuedPipeline","relevant","setItem","querySelector","setAttribute","onExport","exportProps","canvasRef","exportCtx","generateLayer","canvasLayer","layerData","toDataURL","layer","Object","values","callDraw","layerList","currentlayer","backgroundImage","cropInfo","rel","overlayClassName","ExclamationCircleOutlined","LoadingOutlined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6dafd697.chunk.js","sourcesContent":["export type TextStyleType = 'auto' | 'custom';\r\nexport type TextStyle = typeof defaultTextStyle;\r\nexport const defaultTextStyle = {\r\n    fillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    globalAlpha: 1,\r\n};\r\n\r\nexport type Card = typeof defaultCard;\r\nexport const defaultCard = {\r\n    atk: '100',\r\n    attribute: 'DARK',\r\n    frame: 'effect',\r\n    subFamily: 'Level',\r\n    def: '2000',\r\n    type_ability: ['Dragon', 'Pendulum', 'Effect'] as string[],\r\n    effect: `[\"Blue-Eyes White Dragon\" + \"Blue-Eyes White Dragon\" + \"Blue-Eyes White Dragon\"]\r\nYour opponent cannot target or destroy this card with card effects. Once per turn: You can target 1 card your opponent controls; destroy it.\r\n● If this card was Fusion Summoned using a monster whose original name is \"Blue-Eyes Alternative White Dragon\" as material, you can target up to 3 cards your opponent controls instead.\r\n● This card cannot attack the turn this effect is activated.\r\n(This card is always treated as \"Blue-Eyes Ultimate Dragon\")`,\r\n    link_map: ['1', '2', '3', '8', '9'] as string[],\r\n    name: 'B.F.A - U3 “Eden”',\r\n    nameStyleType: 'auto' as TextStyleType,\r\n    nameStyle: {\r\n        fillStyle: '#000000',\r\n        shadowColor: '#000000',\r\n        shadowOffsetY: 0,\r\n        shadowOffsetX: 0,\r\n        shadowBlur: 0,\r\n        globalAlpha: 1,\r\n    } as TextStyle,\r\n    passcode: '24907043',\r\n    foil: 'normal',\r\n    sticker: 'holo2',\r\n    isPendulum: true,\r\n    pendulum_effect: 'You can pay 1000 LP; add 1 \"Abyss Actor\" Pendulum Monster from your Deck to your hand, except \"Abyss Actor - Mellow Madonna\", also you cannot Special Summon monsters for the rest of this turn, except \"Abyss Actor\" Pendulum Monsters (even if this card leaves the field). You can only use this effect of \"Abyss Actor - Mellow Madonna\" once per turn.',\r\n    red_scale: '0',\r\n    blue_scale: '13',\r\n    picture: 'https://scontent.fsgn2-6.fna.fbcdn.net/v/t1.0-9/165851102_3703072819802446_2677153091621164666_o.jpg?_nc_cat=109&ccb=1-3&_nc_sid=730e14&_nc_ohc=qA4t3mN92dQAX_RST5K&_nc_ht=scontent.fsgn2-6.fna&oh=16d439f4c142f27cf716c1d70bc80b22&oe=6085E577',\r\n    pictureCrop: {\r\n        x: 0,\r\n        y: 0,\r\n        width: 100,\r\n        height: 100,\r\n        aspect: 1,\r\n        unit: 'px',\r\n    } as Partial<ReactCrop.Crop>,\r\n    set_id: 'ROTD-EN081',\r\n    star: 4,\r\n    isFirstEdition: true,\r\n    creator: '©2020 Studio Dice/SHUEISHA TV TOKYO, KONAMI',\r\n};\r\nexport const defaultMonster = defaultCard;\r\n\r\nexport const frameType = [\r\n    { name: 'normal', color: '#fff', backgroundColor: '#c49c5e' },\r\n    { name: 'effect', color: '#fff', backgroundColor: '#b96c49' },\r\n    { name: 'fusion', color: '#fff', backgroundColor: '#8948a4' },\r\n    { name: 'synchro', color: '#000', backgroundColor: '#efefef' },\r\n    { name: 'xyz', color: '#fff', backgroundColor: '#000' },\r\n    { name: 'link', color: '#fff', backgroundColor: '#0c8ac6' },\r\n    { name: 'ritual', color: '#fff', backgroundColor: '#5e85c9' },\r\n    { name: 'spell', color: '#fff', backgroundColor: '#1b8f83' },\r\n    { name: 'trap', color: '#fff', backgroundColor: '#c32a8c' },\r\n    { name: 'token', color: '#fff', backgroundColor: '#6f6c6b' },\r\n];\r\n\r\nexport const iconList = [\r\n    'NO ICON',\r\n    'FIELD',\r\n    'CONTINUOUS',\r\n    'QUICK-PLAY',\r\n    'RITUAL',\r\n    'COUNTER',\r\n];\r\n\r\nexport const foilList = [\r\n    { name: 'normal', color: '#747b95' },\r\n    { name: 'gold', color: '#cfa65f' },\r\n    { name: 'platinum', color: '#b1b1b1' },\r\n];\r\n\r\nexport const stickerList = [\r\n    'gold',\r\n    'silver',\r\n    'beta',\r\n    'holo5',\r\n    'holo4',\r\n    'holo3',\r\n    'holo2',\r\n    'holo1',\r\n];\r\n\r\nexport const attributeList = [\r\n    { name: 'DARK', color: '#b41dda' },\r\n    { name: 'EARTH', color: '#8d8e8e' },\r\n    { name: 'FIRE', color: '#e51b23' },\r\n    { name: 'LIGHT', color: '#bfae32' },\r\n    { name: 'WATER', color: '#008ecd' },\r\n    { name: 'WIND', color: '#28ab35' },\r\n    { name: 'DIVINE', color: '#ef6300' },\r\n    { name: 'SPELL', color: '#1b8f83' },\r\n    { name: 'TRAP', color: '#c32a8c' },\r\n];","import { Card, frameType } from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'frame' | 'type_ability'>) => {\r\n    return card.frame === 'link' && checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap';\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameType.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};","export const createCondenser = (minThreshold = 0, maxThreshold = 1000) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= 10;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\t\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\t\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};","const imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n}> = {};\r\n\r\nexport const drawFromSource = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number),\r\n    sy: number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    if (!ctx) return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const img = imageCacheMap[source].image;\r\n            let normalizedX = typeof sx === 'number' ? sx : sx(img);\r\n            let normalizedY = typeof sy === 'number' ? sy : sy(img);\r\n            ctx.drawImage(img, normalizedX, normalizedY);\r\n            resolve(true);\r\n        } else {\r\n            const img = new Image();\r\n            img.src = source;\r\n            img.onload = () => {\r\n                let normalizedX = typeof sx === 'number' ? sx : sx(img);\r\n                let normalizedY = typeof sy === 'number' ? sy : sy(img);\r\n                ctx.drawImage(img, normalizedX, normalizedY);\r\n                imageCacheMap[source].ready = true;\r\n                resolve(true);\r\n            };\r\n            img.onerror = () => {\r\n                resolve(false);\r\n            };\r\n            imageCacheMap[source] = {\r\n                image: img,\r\n                ready: false,\r\n            };\r\n        }\r\n    });\r\n};\r\n\r\nexport const drawFromSourceWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number),\r\n    sy: number | ((image: HTMLImageElement) => number),\r\n    dw: number, dh: number,\r\n) => {\r\n    if (!ctx) return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const img = imageCacheMap[source].image;\r\n            let normalizedX = typeof sx === 'number' ? sx : sx(img);\r\n            let normalizedY = typeof sy === 'number' ? sy : sy(img);\r\n            ctx.drawImage(img, normalizedX, normalizedY, dw, dh);\r\n            resolve(true);\r\n        } else {\r\n            const img = new Image();\r\n            img.src = source;\r\n            img.onload = () => {\r\n                let normalizedX = typeof sx === 'number' ? sx : sx(img);\r\n                let normalizedY = typeof sy === 'number' ? sy : sy(img);\r\n                ctx.drawImage(img, normalizedX, normalizedY, dw, dh);\r\n                imageCacheMap[source].ready = true;\r\n                resolve(true);\r\n            };\r\n            img.onerror = () => {\r\n                resolve(false);\r\n            };\r\n            imageCacheMap[source] = {\r\n                image: img,\r\n                ready: false,\r\n            };\r\n        }\r\n    });\r\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result           = '';\r\n    const charactersLength = charSet.length;\r\n    for ( let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = () => {\r\n    return `${randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)}-EN${randomCharacter('0123456789', 3)}`;\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};\r\n\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    let effectBody = effect;\r\n\r\n    let effectMaterial = '';\r\n    const materialRegex = /^(\\[([^\\]]*)\\]\\s*)/m;\r\n    const materialReplacement = materialRegex.exec(effectBody)?.[1];\r\n    const material = materialRegex.exec(effectBody)?.[2];\r\n    if (material && materialReplacement) {\r\n        effectMaterial = material;\r\n        effectBody = effectBody.replace(materialReplacement, '');\r\n    } else effectMaterial = '';\r\n\r\n    let effectFlavorCondition = '';\r\n    const flavorConditionRegex = /(\\n^[\\r\\t\\f\\v \\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]*\\([\\w\\W]+\\))\\s*$/m;\r\n    const flavorCondition = flavorConditionRegex.exec(effect)?.[1];\r\n    if (flavorCondition && isNormal) {\r\n        effectFlavorCondition = flavorCondition;\r\n        effectBody = effectBody.replace(flavorCondition, '');\r\n    } else effectFlavorCondition = '';\r\n\r\n    return {\r\n        material: effectMaterial,\r\n        body: effectBody,\r\n        flavorCondition: effectFlavorCondition\r\n    };\r\n};\r\n\r\nexport const quoteConvert = (text?: string) => {\r\n    let normalizedString = (text ?? '');\r\n    normalizedString = normalizedString.replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')\r\n        .replace(/'/g, '\\u2019')\r\n        .replace(/(^|[-\\u2014/[(\\u2018\\s])\"/g, '$1\\u201c')\r\n        .replace(/\"/g, '\\u201d')\r\n        .replace(/--/g, '\\u2014');\r\n    return normalizedString;\r\n};\r\n\r\nexport * from './categorize';\r\nexport * from './condenser';\r\nexport * from './canvas';","import { Button, Input, Radio } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './card-picture.scss';\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n            const anchor = document.createElement('a');\r\n            anchor.download = 'cropPreview.png';\r\n            anchor.href = URL.createObjectURL(blob);\r\n            anchor.click();\r\n\r\n            window.URL.revokeObjectURL(previewUrl);\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\nexport type ImageCropper = {\r\n    noRedrawNumber?: number,\r\n\tdefaultExternalSource?: string,\r\n    previewCanvasRef?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    ratio?: number,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    onSourceChange?: (source: string) => void,\r\n    onImageChange?: (cropInfo: Partial<ReactCrop.Crop>) => void,\r\n}\r\nexport const ImageCropper = ({\r\n    noRedrawNumber = 0,\r\n    defaultExternalSource = '',\r\n    previewCanvasRef,\r\n    children,\r\n    ratio = 1,\r\n    defaultCropInfo,\r\n    onSourceChange = () => {},\r\n    onImageChange = () => {},\r\n}: ImageCropper) => {\r\n    const [sourceType, setSourceType] = useState('external');\r\n    const [internalSource, setInternalSource] = useState('');\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState<ReactCrop.Crop>(defaultCropInfo);\r\n    const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n\r\n    const onSelectFile = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () => {\r\n                if (typeof reader.result === 'string') {\r\n                    setInternalSource(reader.result);\r\n                    setSourceType('internal');\r\n                }\r\n            });\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const onLoad = useCallback((img) => {\r\n        imgRef.current = img;\r\n    }, []);\r\n\t\r\n    const onExternalSourceChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n\r\n        onSourceChange(source);\r\n        setExternalSource(source);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        const canvas = previewCanvasRef;\r\n        const crop = completedCrop;\r\n        if (!crop || !canvas || !image) return;\r\n\r\n        const ctx = canvas.getContext('2d');\r\n        if (!ctx) return;\r\n\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        const pixelRatio = window.devicePixelRatio;\r\n        const boundingWidth = Math.ceil(canvas.getBoundingClientRect().width);\r\n        const boundingHeight = Math.ceil(canvas.getBoundingClientRect().height);\r\n\r\n        canvas.width = (boundingWidth ?? 0) * pixelRatio;\r\n        canvas.height = (boundingHeight ?? 0) * pixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        ctx.imageSmoothingQuality = 'high';\r\n\r\n        ctx.drawImage(\r\n            image,\r\n            (crop.x ?? 0) * scaleX,\r\n            (crop.y ?? 0) * scaleY,\r\n            (crop.width ?? 0) * scaleX,\r\n            (crop.height ?? 0) * scaleY,\r\n            0,\r\n            0,\r\n            (boundingWidth ?? 0),\r\n            (boundingHeight ?? 0)\r\n        );\r\n        onImageChange(crop);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, previewCanvasRef, noRedrawNumber]);\r\n\r\n    return (\r\n        <div className=\"card-image-cropper\">\r\n            <div className=\"card-image-source-input\">\r\n                {children}\r\n                <Radio.Group onChange={e => setSourceType(e.target.value)} value={sourceType}>\r\n                    <Radio.Button value={'external'}>\r\n                        <Input key=\"key\"\r\n                            addonBefore=\"Link\" placeholder=\"https://my-online-image...\"\r\n                            value={externalSource}\r\n                            onChange={onExternalSourceChange} maxLength={256} />\r\n                    </Radio.Button>\r\n                    <Radio.Button value={'internal'}>\r\n                        <Input type=\"file\"  accept=\"image/*\" onChange={onSelectFile} />\r\n                        <div>\r\n                            {sourceType === 'internal' && <>\r\n                                <Button\r\n                                    className=\"download-button\"\r\n                                    disabled={!completedCrop?.width || !completedCrop?.height}\r\n                                    onClick={() => previewCanvasRef && generateDownload(previewCanvasRef, completedCrop)}\r\n                                >\r\n                                Download cropped image\r\n                                </Button>\r\n                                <span style={{ color: '#FF6F6F' }}>Offline images are not auto saved!</span>\r\n                            </>}\r\n                        </div>\r\n                    </Radio.Button>\r\n                </Radio.Group>\r\n            </div>\r\n            <div className=\"card-cropper\">\r\n                <ReactCrop key={sourceType}\r\n                    src={sourceType === 'internal' ? internalSource : externalSource}\r\n                    onImageLoaded={onLoad}\r\n                    crop={crop}\r\n                    onChange={cropData => setCrop({ ...cropData, aspect: ratio })}\r\n                    onComplete={cropData => setCompletedCrop(cropData)}\r\n                    ruleOfThirds={true}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport './link-marker.scss';\r\n\r\nexport type LinkMarkChooser = {\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n};\r\nexport const LinkMarkChooser = ({\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n}: LinkMarkChooser) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const rotateMap = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <div className=\"link-marker-chooser\">\r\n        <div className=\"title\">\r\n            Link Arrows\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((entry, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip key=\"5\" overlay=\"Reset\">\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        setChoosenArrow([]);\r\n                    }}>R</div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div className={`link-marker-icon link-marker-icon-${index + 1}`} style={{ transform: `rotate(${rotateMap[index]}deg)` }} />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </div>;\r\n};","import { Radio } from 'antd';\r\nimport { frameType, iconList, attributeList, stickerList, foilList } from '../../model';\r\nimport './input-panel.scss';\r\n\r\nconst { Button: RadioButton } = Radio;\r\n\r\nexport const foilButton = foilList.map(({ color, name }) => {\r\n    return <RadioButton key={name} value={name} style={{\r\n        color,\r\n        fontWeight: 'bold',\r\n    }}>\r\n        {name.toLocaleUpperCase()}\r\n    </RadioButton>;\r\n});\r\nexport const frameButton = frameType.map(({ color, name, backgroundColor }) => {\r\n    return <RadioButton key={name} value={name} style={{\r\n        backgroundColor,\r\n        color,\r\n    }}>\r\n        {name}\r\n    </RadioButton>;\r\n});\r\nexport const attributeButton = attributeList.map(({ name }) => <RadioButton key={name} value={name}>\r\n    <img alt={name} src={`/asset/image/attribute/attr-${name.toLowerCase()}.png`} />\r\n</RadioButton>);\r\nexport const iconButton = iconList.map(entry => <RadioButton key={entry} value={entry}>{entry}</RadioButton>);\r\nexport const starButton = [...Array(14)].map((e, index) => <RadioButton key={`${index}`} value={`${index}`}>{`${index}`}</RadioButton>);\r\nexport const stickerButton = stickerList.map(name => <RadioButton key={name} value={name}>\r\n    <img alt={name} src={`/asset/image/sticker/sticker-${name.toLowerCase()}.png`} />\r\n</RadioButton>);","import { useCallback, useEffect, useState } from 'react';\r\nimport Moveable from 'react-moveable';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport './char-picker.scss';\r\n\r\nfunction insertAtCursor(myField: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        myField.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: myField.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (myField.selectionStart || myField.selectionStart === 0) {\r\n        const startPos = myField.selectionStart;\r\n        const endPos = myField.selectionEnd;\r\n        myField.value = myField.value.substring(0, startPos)\r\n            + myValue\r\n            + myField.value.substring(endPos, myField.value.length);\r\n        myField.selectionStart = startPos + myValue.length;\r\n        myField.selectionEnd = startPos + myValue.length;\r\n        myField.focus();\r\n\r\n        return {\r\n            value: myField.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        myField.value += myValue;\r\n\r\n        return {\r\n            value: myField.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (char: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, char);\r\n\r\n            onPick(value);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTarget(document.getElementById('char-picker'));\r\n    }, []);\r\n\r\n    const onDrag = useCallback(({\r\n        target,\r\n        left, top,\r\n        transform,\r\n    }) => {\r\n        target!.style.left = `${left}px`;\r\n        target!.style.top = `${top}px`;\r\n        target!.style.transform = transform;\r\n    }, []);\r\n\r\n    return <div className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div>\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n            ].map(entry => {\r\n                return <button key={entry} className=\"ant-btn\" onClick={() => internalOnPick(entry)}>{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <Moveable\r\n            target={target}\r\n            container={null}\r\n\r\n            /* Resize event edges */\r\n            edge={false}\r\n\r\n            /* draggable */\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        />\r\n    </div>;\r\n};","import { Checkbox } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport { TextStyle, TextStyleType } from '../../../model';\r\nimport './style-picker.scss';\r\n\r\nexport type StylePicker = {\r\n    defaultType: TextStyleType,\r\n\tdefaultValue: TextStyle,\r\n\tonChange: (type: TextStyleType, style: TextStyle) => void,\r\n}\r\nexport const StylePicker = React.memo(({\r\n    defaultType,\r\n    defaultValue,\r\n    onChange,\r\n}: StylePicker) => {\r\n    // const [isExpand, setExpand] = useState(false);\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [isVisible, setVisible] = useState(false);\r\n\r\n    return <div className=\"style-picker\">\r\n        <div className=\"style-picker-preview\" onClick={() => setVisible(cur => !cur)}>\r\n\t  \t\t<div className=\"style-picker-display\" style={{ background: `${type === 'auto' ? 'white' : value.fillStyle}` }}>\r\n                {type === 'auto' ? 'Auto' : <>&nbsp;</>}\r\n            </div>\r\n        </div>\r\n        {isVisible\r\n            ? <div className=\"style-picker-overlay\" style={{ position: 'absolute', zIndex: 2 }}>\r\n                <div className=\"style-picker-mask\" onClick={() => setVisible(false)} />\r\n                <div className=\"style-picker-auto\">\r\n                    <Checkbox value={'auto'} checked={type === 'auto'} onChange={() => {\r\n                        setType('auto');\r\n                        onChange('auto', value);\r\n                    }}>Auto</Checkbox>\r\n                    <CloseOutlined className=\"style-picker-close\" onClick={() => setVisible(false)} />\r\n                </div>\r\n                <div className={`custom-style-picker ${type === 'auto' ? 'disabled-picker' : ''}`}>\r\n                    <h2>Text Color</h2>\r\n                    <CompactPicker color={value.fillStyle} onChange={color => {\r\n                        setType('custom');\r\n                        setValue(cur => {\r\n                            const newStyle = {\r\n                                ...cur,\r\n                                fillStyle: color.hex,\r\n                            };\r\n\r\n                            onChange('custom', newStyle);\r\n                            return newStyle;\r\n                        });\r\n                    }} />\r\n                </div>\r\n            </div>\r\n            : null}\r\n    </div>;\r\n}, () => true);","import React, { useRef, useState } from 'react';\r\nimport { Radio, Input, Checkbox, Tooltip } from 'antd';\r\nimport { Card, TextStyle, TextStyleType } from '../../model';\r\nimport { ImageCropper, LinkMarkChooser } from '../../component';\r\nimport { checkXyz, checkLink, checkMonster, randomPassword, randomSetID } from '../../util';\r\nimport { ExtractProps } from '../../type';\r\nimport { debounce } from 'lodash';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { foilButton, frameButton, starButton, iconButton, attributeButton, stickerButton } from './const';\r\nimport { CharPicker } from './char-picker';\r\nimport { StylePicker } from './style-picker';\r\nimport './input-panel.scss';\r\n\r\nconst { TextArea } = Input;\r\ntype RadioChangeEvent = Parameters<NonNullable<ExtractProps<typeof Radio>['onChange']>>[0];\r\n\r\nconst onChangeFactory = (\r\n    key: string,\r\n    mutateFunction: (func: (card: Card) => Card) => void,\r\n    valueTransform: (value: any) => any = (value) => value,\r\n) => {\r\n    return (e: any) => {\r\n        mutateFunction(current => ({\r\n            ...current,\r\n            [key]: valueTransform(typeof e === 'string' || Array.isArray(e) ? e : e?.target?.value),\r\n        }));\r\n    };\r\n};\r\n\r\ntype RandomButton = {\r\n    seeder: () => string,\r\n    onGenerate: (value: string) => void,\r\n}\r\nconst RandomButton = ({\r\n    seeder,\r\n    onGenerate,\r\n}: RandomButton) => {\r\n    return <span style={{ marginLeft: 10, paddingLeft: 10, borderLeft: '1px solid #222' }}>\r\n        <Tooltip overlay=\"Random\">\r\n            <SyncOutlined onClick={() => onGenerate(seeder())} />\r\n        </Tooltip>\r\n    </span>;\r\n};\r\n\r\nexport type CardInputPanelRef = {\r\n    getCroppedImageCanvasRef: () => HTMLCanvasElement | null\r\n}\r\nexport type CardInputPanel = {\r\n\tcurrentCard: Card,\r\n    receivingCanvasRef: HTMLCanvasElement | null,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n\tonCardChange: React.Dispatch<React.SetStateAction<Card>>,\r\n    onImageChange?: (cropInfo: Partial<ReactCrop.Crop>) => void,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CardInputPanel = ({\r\n    currentCard,\r\n    receivingCanvasRef,\r\n    defaultCropInfo,\r\n    onCardChange,\r\n    onImageChange,\r\n    children,\r\n}: CardInputPanel) => {\r\n    const [isMirrorScale, setMirrorScale] = useState(true);\r\n    const setCard = (mutateFunc: (card: Card) => Card) => {\r\n        onCardChange(currentCard => mutateFunc(currentCard));\r\n    };\r\n    const onFoilChange = onChangeFactory('foil', setCard);\r\n    const onFrameChange = (e: RadioChangeEvent) => {\r\n        onCardChange(currentCard => {\r\n            const value = e?.target?.value;\r\n            const isST = value === 'spell' || value === 'trap';\r\n    \r\n            return {\r\n                ...currentCard,\r\n                frame: value,\r\n                isPendulum: value === 'link' || value === 'token' || isST ? false : currentCard.isPendulum,\r\n                subFamily: isST ? 'NO ICON' : currentCard.subFamily,\r\n            };\r\n        });\r\n    };\r\n    const onAttributeChange = onChangeFactory('attribute', setCard);\r\n    const onSubFamilyChange = onChangeFactory('subFamily', setCard);\r\n    const onNameChange = debounce(onChangeFactory('name', setCard), 250);\r\n    const onNameColorChange = (type: TextStyleType, value: TextStyle) => {\r\n        onCardChange(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    };\r\n    const onStarChange = onChangeFactory('star', setCard);\r\n    const onIsPendulumChange = (e: any) => onCardChange(currentCard => {\r\n        return { ...currentCard, isPendulum: e.target.checked };\r\n    });\r\n    const onPictureChange = onChangeFactory('picture', setCard);\r\n    const onLinkMapChange = onChangeFactory('link_map', setCard);\r\n    const onRedScaleChange = onChangeFactory('red_scale', setCard);\r\n    const onBlueScaleChange = onChangeFactory('blue_scale', setCard);\r\n    const onPendulumEffectChange = debounce(onChangeFactory('pendulum_effect', setCard), 250);\r\n    const onEffectChange = debounce(onChangeFactory('effect', setCard), 250);\r\n    const onATKChange = onChangeFactory('atk', setCard);\r\n    const onDEFChange = onChangeFactory('def', setCard);\r\n    const onTypeAbilityChange = debounce((value: (string | number)[]) => {\r\n        setCard(current => ({\r\n            ...current,\r\n            type_ability: value.map(entry => `${entry}`),\r\n        }));\r\n    }, 250);\r\n    const onSetIDChange = onChangeFactory('set_id', setCard);\r\n    const onPasscodeChange = onChangeFactory('passcode', setCard);\r\n    const onStickerChange = onChangeFactory('sticker', setCard);\r\n    const onCreatorChange = onChangeFactory('creator', setCard);\r\n    const onFirstEditionChange = (e: any) => onCardChange(currentCard => {\r\n        return { ...currentCard, isFirstEdition: e.target.checked };\r\n    });\r\n\r\n    const {\r\n        frame, foil,\r\n        name, nameStyleType, nameStyle,\r\n        picture,\r\n        effect,\r\n        type_ability,\r\n        isPendulum, pendulum_effect, red_scale, blue_scale,\r\n        atk, def, link_map,\r\n        attribute,\r\n        subFamily,\r\n        star,\r\n        set_id,\r\n        passcode, isFirstEdition, creator, sticker,\r\n    } = currentCard;\r\n    const isXyz = checkXyz(currentCard);\r\n    const isLink = checkLink(currentCard);\r\n    const isMonster = checkMonster(currentCard);\r\n    const [displayTypeAbility, setDisplayTypeAbility] = useState(type_ability.join('/'));\r\n    const [displayName, setDisplayName] = useState(name);\r\n    const [displayEffect, setDisplayEffect] = useState(effect);\r\n    const [displayPendulumEffect, setDisplayPendulumEffect] = useState(pendulum_effect);\r\n    const [onlineCharPicker, setOnlineCharPicker] = useState('');\r\n    const ref = useRef();\r\n    \r\n\r\n    return <div className=\"card-info-panel\">\r\n        {children}\r\n        <CharPicker\r\n            targetId={onlineCharPicker}\r\n            onPick={value => {\r\n                if (ref.current) (ref.current as any)?.props?.onChange?.({\r\n                    target: { value }\r\n                });\r\n            }}\r\n        />\r\n        <Radio.Group className=\"foil-radio checkbox-train\" value={foil} onChange={onFoilChange}>\r\n            <label className=\"standalone-addon ant-input-group-addon\">\r\n                <span>Foil</span>\r\n            </label>\r\n            {foilButton}\r\n        </Radio.Group>\r\n        <Radio.Group className=\"frame-radio\" value={frame} onChange={onFrameChange}>\r\n            {frameButton}\r\n        </Radio.Group>\r\n        <hr />\r\n        <div className=\"card-header custom-gap\">\r\n            <Input\r\n                id=\"name\"\r\n                ref={onlineCharPicker === 'name' ? ref as any : null}\r\n                onFocus={() => setOnlineCharPicker('name')}\r\n                allowClear\r\n                addonBefore={<>Name <StylePicker defaultType={nameStyleType} defaultValue={nameStyle} onChange={onNameColorChange} /></>}\r\n                placeholder=\"Card Name\"\r\n                value={displayName}\r\n                className=\"name-input\"\r\n                onChange={ev => {\r\n                    onNameChange(ev);\r\n                    setDisplayName(ev.target.value);\r\n                }}\r\n            />\r\n            {isMonster\r\n                ? !isLink\r\n                    ? <Radio.Group className=\"checkbox-train\" value={`${star}`} onChange={onStarChange}>\r\n                        <label className=\"standalone-addon ant-input-group-addon\">\r\n                            <span>{isXyz ? 'Rank' : 'Level'}</span>\r\n                        </label>\r\n                        {starButton}\r\n                    </Radio.Group>\r\n                    : null\r\n                : <Radio.Group className=\"checkbox-train\" value={subFamily} onChange={onSubFamilyChange}>\r\n                    <label className=\"standalone-addon ant-input-group-addon\">\r\n                        <span>Icon</span>\r\n                    </label>\r\n                    {iconButton}\r\n                </Radio.Group>}\r\n            <Radio.Group className=\"checkbox-image-train checkbox-train\" value={attribute} onChange={onAttributeChange}>\r\n                <label className=\"standalone-addon ant-input-group-addon\">\r\n                    <span>Attribute</span>\r\n                </label>\r\n                {attributeButton}\r\n            </Radio.Group>\r\n        </div>\r\n        <div key=\"pic\" className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <Input\r\n                    id=\"set-id\"\r\n                    ref={onlineCharPicker === 'set-id' ? ref as any : null}\r\n                    onFocus={() => setOnlineCharPicker('set-id')}\r\n                    allowClear\r\n                    className=\"set-id-input\"\r\n                    addonBefore={<>Set ID<RandomButton seeder={randomSetID} onGenerate={onSetIDChange} /></>}\r\n                    onChange={onSetIDChange}\r\n                    placeholder=\"Set ID\"\r\n                    value={set_id}\r\n                />\r\n                {(isMonster && frame !== 'link' && frame !== 'token') && <div className=\"pendulum-container\">\r\n                    <div className=\"joined-row\">\r\n                        <Checkbox onChange={onIsPendulumChange} checked={isPendulum}>Is Pendulum?</Checkbox>\r\n                        {isPendulum && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>Mirror Scale?</Checkbox>}\r\n                    </div>\r\n                    {isPendulum && <>\r\n                        <div>\r\n                            <Input key=\"blue-scale\" addonBefore={<span>\r\n                                <span style={{ color: '#3b9dff' }}>Blue</span> Scale\r\n                            </span>}\r\n                            value={blue_scale}\r\n                            onChange={e => {\r\n                                onBlueScaleChange(e);\r\n                                if (isMirrorScale) onRedScaleChange(e);\r\n                            }} />\r\n                        </div>\r\n                        <div>\r\n                            <Input key=\"red-scale\" addonBefore={<span>\r\n                                <span style={{ color: '#ff6f6f' }}>Red</span> Scale\r\n                            </span>}\r\n                            value={red_scale}\r\n                            onChange={e => {\r\n                                if (isMirrorScale) onBlueScaleChange(e);\r\n                                onRedScaleChange(e);\r\n                            }} />\r\n                        </div>\r\n                        <div className=\"joined-row\" style={{ position: 'relative' }}>\r\n                            <TextArea key=\"pendulum-effect\"\r\n                                id=\"pendulum-effect\"\r\n                                ref={onlineCharPicker === 'pendulum-effect' ? ref as any : null}\r\n                                onFocus={() => setOnlineCharPicker('pendulum-effect')}\r\n                                allowClear\r\n                                placeholder=\"Pendulum effect\"\r\n                                value={displayPendulumEffect}\r\n                                onChange={ev => {\r\n                                    onPendulumEffectChange(ev);\r\n                                    setDisplayPendulumEffect(ev.target.value);\r\n                                }}\r\n                                rows={6}\r\n                            />\r\n                        </div>\r\n                    </>}\r\n                </div>}\r\n                <Input addonBefore=\"Type\"\r\n                    id=\"type\"\r\n                    ref={onlineCharPicker === 'type' ? ref as any : null}\r\n                    onFocus={() => setOnlineCharPicker('type')}\r\n                    allowClear\r\n                    className=\"hide-selected\"\r\n                    onChange={ev => {\r\n                        const value = ev.target.value;\r\n\r\n                        setDisplayTypeAbility(value);\r\n                        onTypeAbilityChange(value\r\n                            .split('/')\r\n                            .map(entry => entry.trim())\r\n                            .filter(entry => typeof entry === 'string' && entry.length > 0));\r\n                    }}\r\n                    placeholder=\"Type / Ability\"\r\n                    style={{ width: '100%' }}\r\n                    value={displayTypeAbility}\r\n                />\r\n                <TextArea key=\"effect\"\r\n                    id=\"card-effect\"\r\n                    ref={onlineCharPicker === 'card-effect' ? ref as any : null}\r\n                    onFocus={() => setOnlineCharPicker('card-effect')}\r\n                    allowClear\r\n                    placeholder=\"Card effect\"\r\n                    value={displayEffect}\r\n                    rows={10}\r\n                    onChange={ev => {\r\n                        onEffectChange(ev);\r\n                        setDisplayEffect(ev.target.value);\r\n                    }}\r\n                />\r\n                <div className=\"card-footer-input\">\r\n                    {isMonster\r\n                        ? <Input key=\"atk\"\r\n                            id=\"atk\"\r\n                            ref={onlineCharPicker === 'atk' ? ref as any : null}\r\n                            onFocus={() => setOnlineCharPicker('atk')}\r\n                            addonBefore=\"ATK\" allowClear value={atk} onChange={onATKChange} />\r\n                        : <div />}\r\n                    {isMonster\r\n                        ? <Input key=\"def\"\r\n                            id=\"def\"\r\n                            ref={onlineCharPicker === 'def' ? ref as any : null}\r\n                            onFocus={() => setOnlineCharPicker('def')}\r\n                            addonBefore=\"DEF\" allowClear value={def} onChange={onDEFChange} />\r\n                        : <div />\r\n                    }\r\n                    <Input\r\n                        id=\"password\"\r\n                        ref={onlineCharPicker === 'password' ? ref as any : null}\r\n                        onFocus={() => setOnlineCharPicker('password')}\r\n                        allowClear\r\n                        className=\"password-input\"\r\n                        addonBefore={<>Password<RandomButton seeder={randomPassword} onGenerate={onPasscodeChange} /></>}\r\n                        onChange={onPasscodeChange}\r\n                        placeholder=\"Password\"\r\n                        value={passcode}\r\n                    />\r\n                    <Checkbox\r\n                        className=\"input-1st\"\r\n                        onChange={onFirstEditionChange}\r\n                        checked={isFirstEdition}\r\n                    >\r\n                        Is 1st Edition?\r\n                    </Checkbox>\r\n                    <Input addonBefore=\"Creator\"\r\n                        id=\"creator\"\r\n                        ref={onlineCharPicker === 'creator' ? ref as any : null}\r\n                        onFocus={() => setOnlineCharPicker('creator')}\r\n                        allowClear\r\n                        className=\"creator-input\"\r\n                        onChange={onCreatorChange}\r\n                        placeholder=\"Creator\"\r\n                        value={creator}\r\n                    />\r\n                    <Radio.Group className=\"sticker-input checkbox-image-train checkbox-train\" value={sticker} onChange={onStickerChange}>\r\n                        <label className=\"standalone-addon ant-input-group-addon\">\r\n                            <span>Sticker</span>\r\n                        </label>\r\n                        {stickerButton}\r\n                    </Radio.Group>\r\n                </div>\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageCropper\r\n                    noRedrawNumber={1}\r\n                    defaultExternalSource={picture}\r\n                    defaultCropInfo={defaultCropInfo}\r\n                    previewCanvasRef={receivingCanvasRef}\r\n                    onSourceChange={onPictureChange}\r\n                    onImageChange={onImageChange}\r\n                >\r\n                    {isLink\r\n                        ? <LinkMarkChooser defaultValue={link_map} onChange={onLinkMapChange} />\r\n                        : <div />}\r\n                </ImageCropper>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n};","export type FontSize = {\r\n    fontSize: number,\r\n    lineHeight: number,\r\n    lineCount: number,\r\n};\r\nexport type BoxSize = {\r\n\twidth: number,\r\n\ttop: number,\r\n\tleft: number,\r\n};\r\n\r\nexport const monsterFontList: FontSize[] = [\r\n    { fontSize: 17, lineHeight: 17, lineCount: 6 },\r\n    { fontSize: 14, lineHeight: 14, lineCount: 7 },\r\n    { fontSize: 12, lineHeight: 12, lineCount: 8 },\r\n    { fontSize: 11, lineHeight: 11, lineCount: 9 },\r\n    { fontSize: 10, lineHeight: 10, lineCount: 10 },\r\n    { fontSize: 9, lineHeight: 9, lineCount: 11 },\r\n    { fontSize: 8, lineHeight: 8, lineCount: 12 },\r\n];\r\nexport const monsterSizeList: BoxSize[] = [\r\n    { width: 463, top: 620, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n];\r\nexport const monsterVanillaFontList: FontSize[] = [\r\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 6 },\r\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 7 },\r\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 8 },\r\n];\r\n\r\nexport const pendulumFontList: FontSize[] = [\r\n    { fontSize: 16.41, lineHeight: 16.44, lineCount: 5 },\r\n    { fontSize: 16.41, lineHeight: 16.44, lineCount: 5 },\r\n];\r\nexport const pendulumSizeList: BoxSize[] = [\r\n    { width: 375, top: 504.5, left: 87.05 },\r\n    { width: 375, top: 504.5, left: 87.05 },\r\n];\r\n\r\nexport const stFontList: FontSize[] = [\r\n    { fontSize: 16.41, lineHeight: 16.74, lineCount: 8 },\r\n    { fontSize: 13.46, lineHeight: 14.28, lineCount: 10 },\r\n];\r\nexport const stSizeList: BoxSize[] = [\r\n    { width: 461, top: 601, left: 45 },\r\n    { width: 461, top: 601, left: 45 },\r\n];\r\n\r\nexport type TypeSize = {\r\n\ttop: number,\r\n\tleft: number,\r\n    bracketSize: {\r\n        char: number,\r\n        bracketSpace: number,\r\n        bracketOffsetTop: number,\r\n    },\r\n    upperCaseSize: number,\r\n    upperCaseScale: number,\r\n    lowerCaseSize: number,\r\n    lowerCaseScale: number,\r\n    spaceScale: number,\r\n    spaceSize: {\r\n        frontSpace: number,\r\n        char: number,\r\n        behindSpace: number,\r\n    },\r\n    iconSpace: number,\r\n};\r\nexport const typeSizeMap: Record<string, TypeSize> = {\r\n    small: {\r\n        top: 622,\r\n        left: 43,\r\n        bracketSize: {\r\n            char: 18.71,\r\n            bracketSpace: 8.51,\r\n            bracketOffsetTop: 1.64,\r\n        },\r\n        upperCaseSize: 20,\r\n        upperCaseScale: 1,\r\n        lowerCaseSize: 16,\r\n        lowerCaseScale: 1.1,\r\n        spaceScale: 1,\r\n        spaceSize: {\r\n            frontSpace: 5,\r\n            char: 21,\r\n            behindSpace: 15,\r\n        },\r\n        iconSpace: 0,\r\n    },\r\n    medium: {\r\n        top: 620.80,\r\n        left: 43,\r\n        bracketSize: {\r\n            char: 19.69,\r\n            bracketSpace: 8.51,\r\n            bracketOffsetTop: 1.64,\r\n        },\r\n        upperCaseSize: 21,\r\n        upperCaseScale: 1,\r\n        lowerCaseSize: 19,\r\n        lowerCaseScale: 0.95,\r\n        spaceScale: 1,\r\n        spaceSize: {\r\n            frontSpace: 5,\r\n            char: 23,\r\n            behindSpace: 15,\r\n        },\r\n        iconSpace: 0,\r\n    },\r\n    large: {\r\n        top: 126,\r\n        left: 494,\r\n        bracketSize: {\r\n            char: 25,\r\n            bracketSpace: 11,\r\n            bracketOffsetTop: 2,\r\n        },\r\n        upperCaseSize: 26,\r\n        upperCaseScale: 1.1,\r\n        lowerCaseSize: 23,\r\n        lowerCaseScale: 1,\r\n        spaceScale: 1.4,\r\n        spaceSize: {\r\n            frontSpace: 5,\r\n            char: 23,\r\n            behindSpace: 15,\r\n        },\r\n        iconSpace: 32,\r\n    },\r\n};","export const arrowPositionList = [\r\n    { top: 126, left: 46, width: 50, height: 51 },\r\n    { top: 116, left: 226, width: 99, height: 32 },\r\n    { top: 126, left: 453, width: 51, height: 51 },\r\n    { top: 305, left: 35, width: 33, height: 99 },\r\n    { top: 0, left: 0, width: 0, height: 0 },   // Middle\r\n    { top: 305, left: 482, width: 32, height: 99 },\r\n    { top: 534, left: 46, width: 50, height: 50 },\r\n    { top: 562, left: 226, width: 99, height: 33 },\r\n    { top: 534, left: 453, width: 51, height: 50 },\r\n];\r\n\r\nexport const foilPosition: Record<string, {\r\n    art: { left: number }\r\n}> = {\r\n    gold: {\r\n        art: {\r\n            left: 2,\r\n        }\r\n    },\r\n    platinum: {\r\n        art: {\r\n            left: 1,\r\n        }\r\n    },\r\n};","import { FontSize, monsterFontList, BoxSize, monsterSizeList } from '../const';\r\nimport { defaultTextStyle, TextStyle } from '../model';\r\nimport { splitEffect, createCondenser, quoteConvert } from '../util';\r\n\r\nexport const drawName = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    baseline: number,\r\n    maxWidth: number,\r\n    style: TextStyle,\r\n) => {\r\n    if (ctx) {\r\n        ctx.fillStyle = style.fillStyle;\r\n        const splittedText = quoteConvert(value).split(/([^&A-Za-z0-9\\-/\\s()])/g);\r\n        const contentWidth = splittedText\r\n            .reduce((prev, cur, index) => {\r\n                if (index % 2 === 0) ctx.font = '64.59px MatrixRegularSmallCaps';\r\n                else ctx.font = '54.59px matrix';\r\n\r\n                return prev + ctx.measureText(cur).width;\r\n            }, 0);\r\n\r\n        // ctx.fillText(value, edge, baseline, maxWidth);\r\n        if (contentWidth > 0) {\r\n            const condenseRatio = Math.min(maxWidth / contentWidth, 1);\r\n            ctx.scale(condenseRatio, 1);\r\n            splittedText\r\n                .reduce((prev, cur, index) => {\r\n                    // ctx.shadowColor = 'black';\r\n                    // ctx.shadowOffsetY = 1;\r\n                    // ctx.shadowBlur = 3;\r\n                    // ctx.globalAlpha = 0.8;\r\n                    if (index % 2 === 0) ctx.font = '64.59px MatrixRegularSmallCaps';\r\n                    else ctx.font = 'small-caps 54.59px matrix';\r\n    \r\n                    ctx.fillText(cur, prev / condenseRatio, baseline);\r\n                    return prev + ctx.measureText(cur).width * condenseRatio;\r\n                }, edge);\r\n            // ctx.globalAlpha = 1;\r\n            ctx.scale(1 / condenseRatio, 1);\r\n            ctx.fillStyle = defaultTextStyle.fillStyle;\r\n        }\r\n    }\r\n};\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx) {\r\n        const digitList = `${value}`.split('');\r\n        let totalWidth = 0;\r\n\r\n        digitList.forEach(digit => {\r\n            totalWidth += (digit === '1' ? ctx.measureText(digit).width * 0.65 : ctx.measureText(digit).width);\r\n        });\r\n        let accLeft = edge - totalWidth / 2;\r\n\r\n        digitList.forEach(digit => {\r\n            ctx.fillText(digit, digit === '1' ? accLeft - 3 : accLeft, baseline);\r\n            accLeft += (digit === '1' ? ctx.measureText(digit).width * 0.65 : ctx.measureText(digit).width);\r\n        });\r\n    }\r\n};\r\n\r\nexport const drawEffect = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isPendulumEffect = false,\r\n    isNormal = false,\r\n    fontList: FontSize[] = monsterFontList,\r\n    sizeList: BoxSize[] = monsterSizeList,\r\n) => {\r\n    const normalizedContent = quoteConvert(content);\r\n    let effectIndexSize = 0;\r\n    if (ctx) {\r\n        const tolerantPerSentence: Record<string, number> = {\r\n            '1': 645,\r\n            '2': 665,\r\n            '3': 685,\r\n        };\r\n        const {\r\n            body: effectBody,\r\n            flavorCondition: effectFlavorCondition,\r\n            material: effectMaterial,\r\n        } = isPendulumEffect\r\n            ? {\r\n                body: normalizedContent,\r\n                flavorCondition: '',\r\n                material: '',\r\n            } : splitEffect(normalizedContent, isNormal);\r\n\r\n        const additionalLineCount = (effectMaterial.length > 0 ? 1 : 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\r\n        const sentencizeText = effectBody.split('\\n');\r\n        const bulletSymbol = '●';\r\n        const bulletSymbolWidth = 15;\r\n        const specialSymbol = '#@∞';\r\n        const breakableSymbol = '\\\\s-';\r\n        \r\n        const tokenizeR = new RegExp(`([${specialSymbol}${breakableSymbol}])`, 'g');\r\n        const specialSymbolReg = new RegExp(specialSymbol, 'g');\r\n\r\n        while(effectIndexSize < fontList.length) {\r\n            const { fontSize, lineHeight, lineCount } = fontList[effectIndexSize];\r\n            const { left, width, top } = sizeList[effectIndexSize];\r\n            const condenser = createCondenser();\r\n            let effectiveRatio = 1000;\r\n\r\n            const maxLine = Math.max(sentencizeText.length, lineCount);\r\n\r\n            ctx.font = `${isNormal ? 'italic' : ''} ${fontSize}px MatrixBook`;\r\n            ctx.textAlign = 'left';\r\n\r\n            const switchFont = (func: () => void) => {\r\n                const tempFont = ctx.font;\r\n                const largeSize = fontSize * 1.15;\r\n                ctx.font = tempFont.replace('MatrixBook', 'matrix').replace(`${fontSize}`, `${largeSize}`);\r\n                func();\r\n                ctx.font = tempFont;\r\n            };\r\n\r\n            // [CREATE SENTENCE ON EACH LINE]\r\n            let lineList: { text: string, width: number, isLast: boolean }[] = [];\r\n            const createSentence = () => {\r\n                lineList = [];\r\n\r\n                return sentencizeText.reduce((prev, curr) => {\r\n                    // The width is \"expand\" based on condense ratio so all the calculate does not need to be scaled\r\n                    const condenseRatio = condenser.getMedian() / 1000;\r\n                    const hypoWidth = width / condenseRatio;\r\n                    const tokenizedText = curr.split(tokenizeR);\r\n                    let currentLineCount = 1;\r\n                    let tokenSentence: string[] = [];\r\n                    let totalWidth = 0;\r\n\r\n                    for (let cnt = 0; cnt < tokenizedText.length; cnt++) {\r\n                        let tokenWidth = 0;\r\n                        /**\r\n                         * If bullet symbol is met, it will become \"wider\" based on condense ratio\r\n                         * so that when the whole line is condense, bullet symbol's width become\r\n                         * \"normal\", as if it were not condensed\r\n                         */\r\n                        if (tokenizedText[cnt] === bulletSymbol) tokenWidth = bulletSymbolWidth / condenseRatio;\r\n                        /**\r\n                         * Some special symbol required different font\r\n                         */\r\n                        else if (specialSymbolReg.test(tokenizedText[cnt])) {\r\n                            switchFont(() => {\r\n                                tokenWidth = ctx.measureText(tokenizedText[cnt]).width;\r\n                            });\r\n                        } else tokenWidth = ctx.measureText(tokenizedText[cnt]).width;\r\n                        if (totalWidth + tokenWidth > hypoWidth) {\r\n                            // If the next token cause overflow, wrap it down\r\n                            const fullString = tokenSentence.join('').trim();\r\n                            // Calculate the line width as if the bullet is wider\r\n                            const fullStringSplittedByBullet = fullString.split(bulletSymbol);\r\n                            lineList.push({\r\n                                text: fullString,\r\n                                width: fullStringSplittedByBullet.reduce((prev, curr) => prev + ctx.measureText(curr).width, 0)\r\n                                    + (fullStringSplittedByBullet.length - 1) * bulletSymbolWidth / condenseRatio,\r\n                                isLast: false,\r\n                            });\r\n                            totalWidth = tokenWidth;\r\n                            tokenSentence = [tokenizedText[cnt]];\r\n                            currentLineCount += 1;\r\n                        } else {\r\n                            totalWidth += tokenWidth;\r\n                            tokenSentence.push(tokenizedText[cnt]);\r\n                        }\r\n                    }\r\n\r\n                    const fullString = tokenSentence.join('').trim();\r\n                    const fullStringSplittedByBullet = fullString.split(bulletSymbol);\r\n                    lineList.push({\r\n                        text: fullString,\r\n                        width: fullStringSplittedByBullet.reduce((prev, curr) => prev + ctx.measureText(curr).width, 0)\r\n                            + (fullStringSplittedByBullet.length - 1) * bulletSymbolWidth / condenseRatio,\r\n                        isLast: true,\r\n                    });\r\n    \r\n                    return prev + currentLineCount;\r\n                }, 0) + additionalLineCount;\r\n            };\r\n\r\n            // [FIND SUITABLE CONDENSE RATIO]\r\n            while (condenser.getIterateCount() >= 0) {\r\n                if (condenser.getIterateCount() <= 0) {\r\n                    // When out of iteration, return the concluded median\r\n                    effectiveRatio = condenser.getMedian();\r\n                    break;\r\n                } else {\r\n                    const lineCount = createSentence();\r\n\r\n                    if (lineCount > maxLine) {\r\n                        // If overflow, lower the median and apply it\r\n                        condenser.searchDown();\r\n                    } else {\r\n                        if (condenser.getMedian() === 1000) break;\r\n                        else effectiveRatio = condenser.reverseSearch();\r\n                    }\r\n                }\r\n            }\r\n\r\n            // [START DRAWING]\r\n            const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number) => {\r\n                ctx.beginPath();\r\n                ctx.arc(edge + 7, baseline - 5.5, 5.5, 0, 2 * Math.PI, false);\r\n                ctx.fill();\r\n                ctx.lineWidth = 1;\r\n                ctx.strokeStyle = '#003300';\r\n                ctx.stroke();\r\n            };\r\n            if (effectiveRatio < (tolerantPerSentence[`${sentencizeText.length}`] ?? tolerantPerSentence['3'])) {\r\n                effectIndexSize += 1;\r\n            } else {\r\n                ctx?.clearRect(0, 0, 549, 750);\r\n                let baseline = top + lineHeight;\r\n                if (effectMaterial.length > 0) {\r\n                    let actualWidth = ctx.measureText(effectMaterial).width;\r\n                    let condenseRatio = Math.min(width / actualWidth, 1);\r\n\r\n                    ctx.scale(condenseRatio, 1);\r\n                    ctx.fillText(effectMaterial, left / condenseRatio, baseline);\r\n                    baseline += lineHeight;\r\n                    ctx.scale(1 / condenseRatio, 1);\r\n                }\r\n\r\n                const sigmoidRatio = effectiveRatio / 1000; // Fancy way to force ratio in to 0-1 range\r\n                lineList.forEach(({\r\n                    text,\r\n                    width: actualWidth,\r\n                    isLast,\r\n                }) => {\r\n                    const condenseRatio = isLast\r\n                        ? Math.min(sigmoidRatio, 1)\r\n                        : width / actualWidth;\r\n\r\n                    if (condenseRatio <= 1) {\r\n                        ctx.scale(condenseRatio, 1);\r\n                        const splitter = new RegExp(`([${bulletSymbol}${specialSymbol}])`, 'g');\r\n                        const splittedText = text.split(splitter);\r\n\r\n                        splittedText.reduce((prev, cur, index) => {\r\n                            let edge = prev;\r\n\r\n                            // Normal text\r\n                            if (index % 2 === 0) {\r\n                                ctx.fillText(cur, edge / condenseRatio, baseline);\r\n                                edge += ctx.measureText(cur).width * condenseRatio;\r\n                            } else {\r\n                                // Special bullet\r\n                                if (cur === bulletSymbol) {\r\n                                    ctx.scale(1 / condenseRatio, 1);\r\n                                    drawBullet(ctx, edge, baseline);\r\n                                    edge += 15;\r\n                                    ctx.scale(condenseRatio, 1);\r\n                                } else {\r\n                                    switchFont(() => {\r\n                                        ctx.fillText(cur, edge / condenseRatio, baseline);\r\n                                        edge += ctx.measureText(cur).width * condenseRatio;\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            return edge;\r\n                        }, left);\r\n                        baseline += lineHeight;\r\n                        ctx.scale(1 / condenseRatio, 1);\r\n                    } else {\r\n                        const splitter = new RegExp(`([${bulletSymbol}${specialSymbol} ])`, 'g');\r\n                        const spaceSeparatedText = text.split(splitter);\r\n                        ctx.scale(1, 1);\r\n                        let nonSpaceWidth = 0;\r\n                        let spaceCount = 0;\r\n\r\n                        spaceSeparatedText.forEach(entry => {\r\n                            if (entry === ' ') spaceCount += 1;\r\n                            else if (entry === bulletSymbol) nonSpaceWidth += 15;\r\n                            else if (specialSymbolReg.test(entry)) {\r\n                                switchFont(() => nonSpaceWidth += ctx.measureText(entry).width);\r\n                            } else nonSpaceWidth += ctx.measureText(entry).width;\r\n                        });\r\n                        // Split text by \"space\", then distribute remaining width to those spaces, resulting in \"widen\" space\r\n                        const spaceWidth = spaceCount > 0 ? (width - nonSpaceWidth) / spaceCount : 0;\r\n\r\n                        spaceSeparatedText.reduce((prev, cur, index) => {\r\n                            let edge = prev;\r\n\r\n                            // Normal text\r\n                            if (index % 2 === 0) {\r\n                                ctx.fillText(cur, edge, baseline);\r\n                                edge += ctx.measureText(cur).width;\r\n                            } else {\r\n                                // Special bullet\r\n                                if (cur === bulletSymbol) {\r\n                                    drawBullet(ctx, edge, baseline);\r\n                                    edge += 15;\r\n                                } else if (cur === ' ') {\r\n                                    edge += spaceWidth;\r\n                                } else {\r\n                                    switchFont(() => {\r\n                                        ctx.fillText(cur, edge, baseline);\r\n                                        edge += ctx.measureText(cur).width;\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            return edge;\r\n                        }, left);\r\n                        baseline += lineHeight;\r\n                    }\r\n                });\r\n\r\n                if (effectFlavorCondition.length > 0) {\r\n                    let actualWidth = ctx.measureText(effectFlavorCondition).width;\r\n                    let condenseRatio = Math.min(width / actualWidth, 1);\r\n\r\n                    ctx.font = `${fontSize}px MatrixBook`;\r\n                    ctx.scale(condenseRatio, 1);\r\n                    ctx.fillText(effectFlavorCondition, left / condenseRatio, baseline);\r\n                    baseline += lineHeight;\r\n                    ctx.scale(1 / condenseRatio, 1);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return effectIndexSize;\r\n    }\r\n    return effectIndexSize;\r\n};","export const measureWithSymbol = (\r\n    ctx: CanvasRenderingContext2D,\r\n    content: string,\r\n    symbol: string,\r\n    maxWidth: number,\r\n) => {\r\n    const splittedContent = content.split(symbol);\r\n    const splittedWidth = splittedContent.map(entry => ctx.measureText(entry).width);\r\n    const symbolWidth = ctx.measureText(symbol).width;\r\n    const totalCondensableWidth = splittedWidth.reduce((prev, curr) => prev + curr, 0);\r\n    const returnBundle = {\r\n        splittedContent,\r\n        splittedWidth,\r\n        symbolWidth,\r\n        totalCondensableWidth,\r\n        condenseRatio: 1,\r\n    };\r\n\r\n    if (totalCondensableWidth > 0) {\r\n        // Calculate as if the \"symbol\" always appear as full width\r\n        returnBundle.condenseRatio = Math.min((maxWidth - (splittedWidth.length - 1) * symbolWidth) / totalCondensableWidth, 1);\r\n    }\r\n\r\n    return returnBundle;\r\n};\r\n\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx) {\r\n        ctx.textAlign = 'left';\r\n        const charList = str.split('');\r\n        let curLeft = edge;\r\n\r\n        charList.forEach(char => {\r\n            ctx.fillText(char, curLeft, baseline);\r\n            curLeft += ctx.measureText(char).width * (1 + (letterSpacingRatio / 2));\r\n        });\r\n    }\r\n};\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx) {\r\n        ctx.textAlign = 'right';\r\n        const charList = str.split('');\r\n        let curRight = edge;\r\n\r\n        charList.forEach((c, index) => {\r\n            const char = charList[charList.length - index - 1];\r\n            ctx.fillText(char, curRight, baseline);\r\n            curRight -= ctx.measureText(char).width * (1 + (letterSpacingRatio / 2));\r\n        });\r\n        return curRight;\r\n    };\r\n    return edge;\r\n};\r\n\r\nexport const fillTextLeftWithLimit = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    edge: number,\r\n    baseline: number,\r\n    maxWidth: number,\r\n) => {\r\n    if (ctx) {\r\n        const contentWidth = ctx.measureText(content).width;\r\n\r\n        if (contentWidth > 0) {\r\n            const condenseRatio = Math.min(maxWidth / contentWidth, 1);\r\n            ctx.scale(condenseRatio, 1);\r\n            ctx.fillText(content, edge / condenseRatio, baseline);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n            ctx.fillStyle = '#000000';\r\n        }\r\n    }\r\n};","import { fillTextRightWithSpacing, measureWithSymbol } from './util';\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n) => {\r\n    if (ctx) {\r\n        ctx.font = 'bold 16px palatino-linotype-bold';\r\n\r\n        let left = 95;\r\n        ctx.fillText('1', left, 777);\r\n        left += ctx.measureText('1').width - 2;\r\n\r\n        ctx.font = 'bold 12px palatino-linotype-bold';\r\n        ctx.fillText('st', left, 777 - 5);\r\n        left += ctx.measureText('st').width;\r\n\r\n        ctx.font = 'bold 15px palatino-linotype-bold';\r\n        ctx.fillText(' Edition', left, 777);\r\n    }\r\n};\r\n\r\nexport const drawCreatorText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n) => {\r\n    if (ctx) {\r\n        ctx.font = '16px stone-serif-regular';\r\n\r\n        const uncondensableSymbol = '©';\r\n        const {\r\n            splittedContent,\r\n            splittedWidth,\r\n            symbolWidth,\r\n            condenseRatio,\r\n        } = measureWithSymbol(ctx, content, uncondensableSymbol, 257);\r\n\r\n        if (condenseRatio < 1) {\r\n            ctx.textAlign = 'left';\r\n            ctx.scale(condenseRatio, 1);\r\n            splittedContent.reduce((prev, cur, index) => {\r\n                // Fill condense text at the current edge\r\n                ctx.fillText(cur, prev / condenseRatio, 777);\r\n                // Increase edge equal to the draw text (condense ratio factored)\r\n                let nextEdge = prev + splittedWidth[index] * condenseRatio;\r\n                if (index < splittedContent.length - 1) {\r\n                    // Restore 1:1 ratio\r\n                    ctx.scale(1 / condenseRatio, 1);\r\n                    // Increase edge equal to the character \"©\" (condense ratio is 1 so no factored)\r\n                    ctx.fillText(uncondensableSymbol, nextEdge, 777);\r\n                    nextEdge += symbolWidth;\r\n                    // Restore condense ratio\r\n                    ctx.scale(condenseRatio, 1);\r\n                }\r\n                return nextEdge;\r\n            }, 496 - 257);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        } else {\r\n            ctx.textAlign = 'right';\r\n            fillTextRightWithSpacing(ctx, content, -0.15, 496 / condenseRatio, 777);\r\n        }\r\n        ctx.textAlign = 'left';\r\n    }\r\n};\r\n\r\nexport const drawAD = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    $value: string | number,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx) {\r\n        ctx.textAlign = 'left';\r\n        const tokenizedText = `${$value}`.split('?');\r\n\r\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n            ctx.font = '25px MatrixBoldSmallCaps';\r\n            let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n            if (index < tokenizedText.length - 1) {\r\n                ctx.font = '25px matrix';\r\n                nextWidth += ctx.measureText('?').width;\r\n            }\r\n\r\n            return nextWidth;\r\n        }, 0);\r\n\r\n        if (totalWidth > 0) {\r\n            const condenseRatio = Math.min(49.94 / totalWidth, 1);\r\n\r\n            ctx.scale(condenseRatio, 1);\r\n            tokenizedText.reduce((prev, curr, index, arr) => {\r\n                const curText = arr[arr.length - 1 - index];\r\n                let nextEdge = prev;\r\n                ctx.font = '25px MatrixBoldSmallCaps';\r\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = 'bold 25px matrix';\r\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\r\n                }\r\n    \r\n                return nextEdge;\r\n            }, edge + 49.94);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n    }\r\n};","import { TypeSize } from '../const';\r\n\r\ntype Aligment = 'left' | 'right';\r\nexport const drawBracketTemplate = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    size: TypeSize,\r\n    alignment: Aligment,\r\n) => {\r\n    return (edge: number) => {\r\n        if (ctx) {\r\n            const {\r\n                top: baseline,\r\n                bracketSize: { char: bracketChar, bracketOffsetTop }\r\n            } = size;\r\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\r\n\r\n            ctx.font = `bold ${bracketChar}px stone-serif-bold`;\r\n            ctx.textAlign = alignment;\r\n            ctx.fillText(content, edge, baseline - bracketOffsetTop);\r\n            return edge + ctx.measureText(content).width * alignmentOffset;\r\n        }\r\n        return edge;\r\n    };\r\n};\r\nexport const drawIconSpaceTemplate = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    size: TypeSize,\r\n    alignment: Aligment,\r\n) => {\r\n    return (edge: number) => {\r\n        if (ctx) {\r\n            const { iconSpace } = size;\r\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\r\n\r\n            return edge + iconSpace * alignmentOffset;\r\n        }\r\n        return edge;\r\n    };\r\n};\r\nexport const drawBracketSpaceTemplate = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    size: TypeSize,\r\n    alignment: Aligment,\r\n) => {\r\n    return (edge: number) => {\r\n        if (ctx) {\r\n            const { top: baseline, bracketSize: { bracketSpace } } = size;\r\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\r\n\r\n            ctx.font = `bold ${bracketSpace}px stone-serif-bold`;\r\n            ctx.textAlign = alignment;\r\n            ctx.fillText(content, edge, baseline);\r\n            return edge + ctx.measureText(content).width * alignmentOffset;\r\n        }\r\n        return edge;\r\n    };\r\n};\r\nexport const drawTextTemplate = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isLast = false,\r\n    size: TypeSize,\r\n    alignment: Aligment,\r\n) => {\r\n    const {\r\n        top: baseline,\r\n        spaceSize: { frontSpace, char: spaceChar, behindSpace },\r\n        upperCaseScale,\r\n        upperCaseSize,\r\n        lowerCaseScale,\r\n        lowerCaseSize,\r\n        spaceScale,\r\n    } = size;\r\n    const alignmentOffset = alignment === 'left' ? 1 : -1;\r\n    const drawSlashTemplate = (\r\n        ctx: CanvasRenderingContext2D,\r\n        baseOffset: number,\r\n    ) => {\r\n        let totalOffset = baseOffset;\r\n        ctx.font = `bold ${frontSpace}px stone-serif-bold`;\r\n        ctx.fillText(' ', totalOffset, baseline);\r\n        totalOffset += ctx.measureText(' ').width * alignmentOffset;\r\n\t\r\n        ctx.font = `oblique bold ${spaceChar}px stone-serif-bold`;\r\n        ctx.scale(0.65, 1);\r\n        ctx.fillText('/', totalOffset / 0.65, baseline);\r\n        totalOffset += ctx.measureText('/').width * 0.65 * alignmentOffset;\r\n        ctx.scale(1 / 0.65, 1);\r\n\t\r\n        ctx.font = `bold ${behindSpace}px stone-serif-bold`;\r\n        ctx.fillText(' ', totalOffset, baseline);\r\n        totalOffset += ctx.measureText(' ').width * alignmentOffset;\r\n        return totalOffset;\r\n    };\r\n\r\n    return (left: number) => {\r\n        let totalOffset = left;\r\n        if (ctx) {\r\n            ctx.textAlign = alignment;\r\n\r\n            if (!isLast && alignment === 'right') totalOffset = drawSlashTemplate(ctx, totalOffset);\r\n            content\r\n                .split('')\r\n                .forEach((c, index, arr) => {\r\n                    const char = alignment === 'left' ? arr[index] : arr[arr.length - 1 - index];\r\n                    if (/[A-Z]/.test(char)) {\r\n                        ctx.font = `bold ${upperCaseSize}px stone-serif-bold`;\r\n                        ctx.scale(upperCaseScale, 1);\r\n                        ctx.fillText(char, totalOffset / upperCaseScale, baseline);\r\n                        totalOffset += ctx.measureText(char).width * upperCaseScale * alignmentOffset;\r\n                        ctx.scale(1 / upperCaseScale, 1);\r\n                    } else if (/\\s/.test(char)) {\r\n                        ctx.font = `bold ${lowerCaseSize}px stone-serif-bold`;\r\n                        ctx.scale(spaceScale, 1);\r\n                        ctx.fillText(char, totalOffset / spaceScale, baseline);\r\n                        totalOffset += ctx.measureText(char).width * spaceScale * alignmentOffset;\r\n                        ctx.scale(1 / spaceScale, 1);\r\n                    } else {\r\n                        const upperChar = char.toLocaleUpperCase();\r\n                        ctx.font = `bold ${lowerCaseSize}px stone-serif-bold`;\r\n                        ctx.scale(lowerCaseScale, 1);\r\n                        ctx.fillText(upperChar, totalOffset / lowerCaseScale, baseline);\r\n                        totalOffset += ctx.measureText(upperChar).width * lowerCaseScale * alignmentOffset;\r\n                        ctx.scale(1 / lowerCaseScale, 1);\r\n                    }\r\n                });\r\n            if (!isLast && alignment === 'left') totalOffset = drawSlashTemplate(ctx, totalOffset);\r\n            return totalOffset;\r\n        }\r\n        return totalOffset;\r\n    };\r\n};","\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport './app.scss';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n    Card,\r\n    defaultMonster,\r\n    defaultTextStyle,\r\n    iconList,\r\n} from './model';\r\nimport {\r\n    checkLink,\r\n    checkMonster,\r\n    checkNormal,\r\n    checkXyz,\r\n    getCardFrame,\r\n    drawFromSource,\r\n    drawFromSourceWithSize,\r\n} from './util';\r\nimport { CardInputPanel } from './page';\r\nimport {\r\n    arrowPositionList,\r\n    foilPosition,\r\n    pendulumFontList,\r\n    pendulumSizeList,\r\n    stFontList,\r\n    stSizeList,\r\n    TypeSize,\r\n    typeSizeMap,\r\n} from './const';\r\nimport {\r\n    draw1stEdition,\r\n    drawAD,\r\n    drawBracketSpaceTemplate,\r\n    drawBracketTemplate,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawIconSpaceTemplate,\r\n    drawName,\r\n    drawScale,\r\n    drawTextTemplate,\r\n    fillTextLeftWithSpacing,\r\n    fillTextRightWithSpacing,\r\n} from './draw';\r\nimport WebFont from 'webfontloader';\r\nimport { ExclamationCircleOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport { Popover } from 'antd';\r\n\r\nfunction App() {\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [currentCard, setCard] = useState<Card>(defaultMonster);\r\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const drawCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const artCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const specialFrameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const subFamilyCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const attributeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const ADCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdRef = useRef<HTMLCanvasElement>(null);\r\n    const passcodeRef = useRef<HTMLCanvasElement>(null);\r\n    const firstEditionRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerRef = useRef<HTMLCanvasElement>(null);\r\n\r\n    const {\r\n        frame, foil,\r\n        name, nameStyleType, nameStyle,\r\n        pictureCrop,\r\n        effect,\r\n        type_ability,\r\n        isPendulum, pendulum_effect, blue_scale, red_scale,\r\n        atk, def, link_map,\r\n        attribute,\r\n        subFamily,\r\n        star,\r\n        set_id,\r\n        passcode, isFirstEdition, creator, sticker,\r\n    } = currentCard;\r\n    const isNormal = checkNormal(currentCard);\r\n    const isXyz = checkXyz(currentCard);\r\n    const isLink = checkLink(currentCard);\r\n    const isMonster = checkMonster(currentCard);\r\n    const pendulumSize = 'medium';\r\n\r\n    const drawingPipeline = useRef<Record<string, () => Promise<any>>>({\r\n        frame: () => Promise.resolve(),\r\n        star: () => Promise.resolve(),\r\n        attribute: () => Promise.resolve(),\r\n        specialFrame: () => Promise.resolve(),\r\n        sticker: () => Promise.resolve(),\r\n    });\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const ctx = frameCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.frame = async () => {\r\n            ctx?.clearRect(0, 0, 549, 800);\r\n            const cardType = getCardFrame(frame);\r\n            const hasFoil = foil !== 'normal';\r\n\r\n            await drawFromSource(ctx, `/asset/image/frame/frame-${cardType}.png`, 0, 0);\r\n            if (hasFoil) {\r\n                const { art } = foilPosition[foil];\r\n\r\n                await drawFromSource(ctx, `/asset/image/frame/frame-art-${foil}.png`, art.left, 120);\r\n                await drawFromSource(ctx, `/asset/image/frame/frame-effect-${foil}.png`, 0, 580);\r\n            }\r\n        };\r\n    }, [foil, frame]);\r\n\r\n    useEffect(() => {\r\n        const ctx = artCanvasRef.current?.getContext('2d');\r\n        const previewCtx = previewCanvasRef.current;\r\n        if (previewCtx && ctx) {\r\n            ctx.clearRect(0, 0, 548, 650);\r\n            if (isPendulum) {\r\n                ctx.drawImage(previewCtx, 38, 144, 474, 470);\r\n            } else {\r\n                ctx.drawImage(previewCtx, 67, 147, 416, 416);\r\n            }\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isPendulum, imageChangeCount]);\r\n\r\n    useEffect(() => {\r\n        const ctx = specialFrameCanvasRef.current?.getContext('2d');\r\n        \r\n        drawingPipeline.current.specialFrame = async () => {\r\n            ctx?.clearRect(0, 0, 549, 800);\r\n            const hasFoil = foil !== 'normal';\r\n\r\n            const cardType = getCardFrame(frame);\r\n            if (isPendulum && !isLink) {\r\n                if (!isXyz) await drawFromSource(ctx, `/asset/image/pendulum/overlay-pendulum-${cardType}.png`, 0, 0);\r\n                await drawFromSource(ctx, `/asset/image/frame/frame-pendulum-${pendulumSize}.png`, 0, 0);\r\n                if (hasFoil) await drawFromSource(ctx, `/asset/image/frame/frame-pendulum-${pendulumSize}-${foil}.png`, 0, 0);\r\n            }\r\n\r\n            const foiledBorder = !hasFoil ? '/asset/image/frame/frame-border.png' : `/asset/image/frame/frame-border-${foil}.png`;\r\n            await drawFromSource(ctx, foiledBorder, 0, 0);\r\n            if (!isPendulum && isLink) {\r\n                if (hasFoil) await drawFromSource(ctx, `./asset/image/link/link-overlay-${foil}.png`, 0, 110);\r\n                else await drawFromSource(ctx, '/asset/image/link/link-overlay.png', 66, 146);\r\n                if (hasFoil) await drawFromSource(ctx, `/asset/image/link/link-overlay-arrow-${foil}.png`, 0, 110);\r\n\r\n                await Promise.all(link_map\r\n                    .map(entry => {\r\n                        const { left, top, height, width } = arrowPositionList[parseInt(entry) - 1];\r\n                        if (hasFoil) return drawFromSourceWithSize(ctx, `/asset/image/link/link-arrow-${entry}-${foil}.png`, left, top, width, height);\r\n                        else return drawFromSourceWithSize(ctx, `/asset/image/link/link-arrow-${entry}.png`, left, top, width, height);\r\n                    })\r\n                );\r\n                if (ctx) {\r\n                    ctx.textAlign = 'right';\r\n                    ctx.scale(1.2, 1);\r\n                    ctx.font = 'bold 24px Yugioh Rush Duel Numbers V4';\r\n                    ctx.fillText(`${link_map.length}`, 505 / 1.2, 746);\r\n                    ctx.scale(1 / 1.2, 1);\r\n                    ctx.textAlign = 'left';\r\n                }\r\n            }\r\n        };\r\n    }, [foil, frame, isLink, isPendulum, isXyz, link_map]);\r\n\r\n    useEffect(() => {\r\n        const ctx = attributeCanvasRef.current?.getContext('2d');\r\n        drawingPipeline.current.attribute = () => {\r\n            ctx?.clearRect(0, 0, 549, 100);\r\n\r\n            return drawFromSource(ctx, `/asset/image/attribute/attr-${attribute.toLowerCase()}.png`, 458, 37);\r\n        };\r\n    }, [attribute]);\r\n\r\n    useEffect(() => {\r\n        const ctx = subFamilyCanvasRef.current?.getContext('2d');\r\n        drawingPipeline.current.star = () => {\r\n            ctx?.clearRect(0, 0, 549, 150);\r\n            if (isMonster && !isLink) {\r\n                let counter = Math.min(13, star ?? 0);\r\n                let type = isXyz ? 'rank' : 'level';\r\n                let offset = 0 - (34 + 2.3636);\r\n                let totalWidth = 34 * counter + 2.3636 * (counter - 1);\r\n                let edge = counter <= 12\r\n                    ? isXyz\r\n                        ? 57 - 34\r\n                        : 492\r\n                    : isXyz\r\n                        ? (549 - totalWidth) / 2 - 34\r\n                        : (549 - totalWidth) / 2 + totalWidth;\r\n    \r\n                return Promise.all([...Array(counter)]\r\n                    .map(() => {\r\n                        offset += (34 + 2.3636);\r\n                        return drawFromSource(\r\n                            ctx,\r\n                            `/asset/image/sub-family/subfamily-${type}.png`,\r\n                            edge + (34 + offset) * (isXyz ? 1 : -1),\r\n                            99,\r\n                        );\r\n                    })\r\n                );\r\n            } else if (!isMonster) {\r\n                const normalizedSubFamily = subFamily.toUpperCase();\r\n                const hasSTIcon = normalizedSubFamily !== 'no icon'\r\n                        && iconList.includes(normalizedSubFamily);\r\n    \r\n                return hasSTIcon\r\n                    ? drawFromSourceWithSize(ctx, `/asset/image/sub-family/subfamily-${normalizedSubFamily}.png`,\r\n                        (image) => 491 - image.naturalWidth - 7,\r\n                        103,\r\n                        29, 29)\r\n                    : new Promise(resolve => resolve(true));\r\n            };\r\n            return new Promise(resolve => resolve(true));\r\n        };\r\n    }, [isLink, isMonster, isXyz, star, subFamily]);\r\n\r\n    useEffect(() => {\r\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 600);\r\n        if (ctx && isPendulum) {\r\n            let fontSize = 43;\r\n            let top = 532 + fontSize;\r\n\r\n            ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n            ctx.textAlign = 'left';\r\n\r\n            drawScale(ctx, blue_scale ?? 0, 57, top);\r\n            drawScale(ctx, red_scale ?? 0, 493, top);\r\n        }\r\n    }, [isInitializing, blue_scale, isPendulum, red_scale]);\r\n\r\n    useEffect(() => {\r\n        const ctx = nameCanvasRef.current?.getContext('2d');\r\n        if (ctx) {\r\n            ctx.clearRect(0, 0, 549, 100);\r\n            ctx.textAlign = 'left';\r\n            const style = nameStyleType === 'auto'\r\n                ? { ...defaultTextStyle, fillStyle: isXyz ? '#ffffff' : '#000000' }\r\n                : nameStyle;\r\n\r\n            drawName(ctx, name, 40.52, 78, 409, style);\r\n        }\r\n    }, [isInitializing, isXyz, name, nameStyle, nameStyleType]);\r\n\r\n    useEffect(() => {\r\n        const ctx = ADCanvasRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 800);\r\n        if (isMonster) {\r\n            drawAD(ctx, atk, 343.51, 747);\r\n            if (!isLink) {\r\n                drawAD(ctx, def, 454.93, 747);\r\n            }\r\n        }\r\n    }, [isInitializing, atk, def, isLink, isMonster]);\r\n\r\n    useEffect(() => {\r\n        const ctx = setIdRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 800);\r\n        if (ctx) {\r\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\r\n            else ctx.fillStyle = '#000';\r\n            ctx.font = '15px stone-serif-regular';\r\n\r\n            if (isPendulum) {\r\n                fillTextLeftWithSpacing(ctx, set_id, -0.1, 44, 746);\r\n            } else if (isLink) {\r\n                fillTextLeftWithSpacing(ctx, set_id, -0.1, 367, 590);\r\n            } else fillTextRightWithSpacing(ctx, set_id, -0.1, 492, 589);\r\n        }\r\n    }, [isInitializing, isLink, isPendulum, isXyz, set_id]);\r\n\r\n    useEffect(() => {\r\n        const ctx = passcodeRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 800);\r\n        if (ctx) {\r\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\r\n            else ctx.fillStyle = '#000';\r\n            ctx.font = '15px stone-serif-regular';\r\n\r\n            fillTextLeftWithSpacing(ctx, passcode, -0.1, 25, 777);\r\n        }\r\n    }, [isInitializing, isLink, isPendulum, isXyz, passcode]);\r\n\r\n    useEffect(() => {\r\n        const ctx = firstEditionRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 800);\r\n        if (ctx && isFirstEdition === true) {\r\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\r\n            else ctx.fillStyle = '#000';\r\n\r\n            draw1stEdition(ctx);\r\n        }\r\n    }, [isInitializing, isLink, isPendulum, isXyz, isFirstEdition]);\r\n\r\n    useEffect(() => {\r\n        const ctx = creatorRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 800);\r\n        if (ctx) {\r\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\r\n            else ctx.fillStyle = '#000';\r\n            \r\n            drawCreatorText(ctx, creator);\r\n        }\r\n    }, [isInitializing, isLink, isPendulum, isXyz, creator]);\r\n\r\n    useEffect(() => {\r\n        const ctx = stickerRef.current?.getContext('2d');\r\n        drawingPipeline.current.sticker = () => {\r\n            ctx?.clearRect(0, 0, 549, 800);\r\n\r\n            return drawFromSource(ctx, `/asset/image/sticker/sticker-${sticker.toLowerCase()}.png`, 499, 750);\r\n        };\r\n    }, [sticker]);\r\n\r\n    const drawTypeAbility  = useCallback((\r\n        ctx: CanvasRenderingContext2D | null | undefined,\r\n        size: TypeSize = typeSizeMap['medium'],\r\n        alignment: 'left' | 'right' = 'left',\r\n    ) => {\r\n        if (ctx) {\r\n            ctx?.clearRect(0, 0, 549, 700);\r\n            const { left } = size;\r\n            const normalizedSubFamily = subFamily.toUpperCase();\r\n            const instructionList = [\r\n                drawBracketTemplate(ctx, '[', size, alignment),\r\n                drawBracketSpaceTemplate(ctx, ' ', size, alignment),\r\n                ...type_ability.map((entry, index) => drawTextTemplate(\r\n                    ctx,\r\n                    entry,\r\n                    index === type_ability.length - 1,\r\n                    size, alignment)),\r\n                normalizedSubFamily === 'NO ICON'\r\n                    ? (edge: number) => edge + 4 * (alignment === 'left' ? 1 : -1)\r\n                    : drawIconSpaceTemplate(ctx, size, alignment),\r\n                drawBracketTemplate(ctx, ']', size, alignment),\r\n            ];\r\n            (alignment === 'left'\r\n                ? instructionList\r\n                : instructionList.reverse()).reduce((prev, curr) => {\r\n                return curr(prev);\r\n            }, left);\r\n            ctx.textAlign = 'left';\r\n        }\r\n    }, [subFamily, type_ability]);\r\n    useEffect(() => {\r\n        const ctx = effectCanvasRef.current?.getContext('2d');\r\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 750);\r\n        if (isMonster) {\r\n            const effectIndexSize = drawEffect(ctx, effect, false, isNormal);\r\n            drawTypeAbility(typeCtx, effectIndexSize === 0\r\n                ? typeSizeMap['medium']\r\n                : typeSizeMap['small']);\r\n        } else {\r\n            drawEffect(\r\n                ctx,\r\n                effect,\r\n                false,\r\n                false,\r\n                stFontList,\r\n                stSizeList,\r\n            );\r\n            drawTypeAbility(typeCtx, typeSizeMap['large'], 'right');\r\n        }\r\n    }, [isInitializing, drawTypeAbility, effect, isMonster, isNormal]);\r\n    useEffect(() => {\r\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 600);\r\n        if (isMonster && isPendulum) {\r\n            drawEffect(\r\n                ctx,\r\n                pendulum_effect,\r\n                true,\r\n                false,\r\n                pendulumFontList,\r\n                pendulumSizeList,\r\n            );\r\n        }\r\n    }, [isInitializing, isMonster, isPendulum, pendulum_effect]);\r\n\r\n    // const drawRefrenceImage = useCallback(async (ctx: CanvasRenderingContext2D | null | undefined) => {\r\n    //     let leftOffset = -5;\r\n    //     let topOffset = 150;\r\n    // let leftOffset = -4;\r\n    // let topOffset = 300;\r\n    // let leftOffset = -300;\r\n    // let topOffset = -7;\r\n    // let leftOffset = -1;\r\n    // let topOffset = 100;\r\n    // await drawFromSourceWithSize(ctx, '/asset/image/MP19-EN-C-1E.png', -leftOffset, -topOffset, 541, 800 * (541 / 549));\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        const ctx = drawCanvasRef.current?.getContext('2d');\r\n        if (ctx) {\r\n            const pixelRatio = window.devicePixelRatio;\r\n            ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            ctx.clearRect(0, 0, 549, 800);\r\n        }\r\n        \r\n        // let fontLoaded = false;\r\n        WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'stone-serif-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'MatrixBook',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixRegularSmallCaps',\r\n                    'Yugioh Rush Duel Numbers V4',\r\n                ],\r\n                urls: ['asset/font.css']\r\n            },\r\n            active: () => {\r\n                const localCardVersion = window.localStorage.getItem('card-version');\r\n                const localCardData = window.localStorage.getItem('card-data');\r\n\r\n                if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n                    setCard(JSON.parse(localCardData));\r\n                }\r\n                setInitializing(false);\r\n            },\r\n            inactive: () => {\r\n                setError('Font could not be loaded');\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, []);\r\n\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        queuedPipeline: false,\r\n    });\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        if (isInitializing === false) {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n        }\r\n        // localStorage.setItem('card-created', new Date().toISOString());\r\n\r\n        /**\r\n         * Run export pipeline\r\n         * - While it is running, every effect just mark pipeline as queued, then wait the current pipeline\r\n         * - If the pipeline is complete and there is no effect, run another pipeline and remove the queue\r\n         */\r\n        (async () => {\r\n            const canvasRef = drawCanvasRef.current;\r\n            if (canvasRef) {\r\n                document.querySelector('#export-canvas-guard')?.setAttribute('style', '');\r\n                exportRef.current.queuedPipeline = true;\r\n                await exportRef.current.currentPipeline;\r\n\r\n                if (relevant) {\r\n                    exportRef.current.currentPipeline = onExport({ isPendulum });\r\n                    exportRef.current.queuedPipeline = false;\r\n\r\n                    await exportRef.current.currentPipeline;\r\n                    if (relevant) {\r\n                        document.querySelector('#export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                    }\r\n                }\r\n                // onExport({ isPendulum })\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    const onExport = useRef(async (exportProps: {\r\n        isPendulum: boolean,\r\n    }) => {\r\n        const {\r\n            isPendulum = false\r\n        } = exportProps;\r\n        const canvasRef = drawCanvasRef.current;\r\n        const exportCtx = canvasRef?.getContext('2d');\r\n        const generateLayer = (canvasLayer: React.RefObject<HTMLCanvasElement>, ctx: CanvasRenderingContext2D | null | undefined) => {\r\n            return new Promise<boolean>(resolve => {\r\n                if (canvasLayer.current && ctx) {\r\n                    const layerData = canvasLayer.current.toDataURL('image/png');\r\n\r\n                    if (layerData) {\r\n                        var layer = new Image();\r\n                        layer.src = layerData;\r\n                        layer.onload = () => {\r\n                            ctx.drawImage(layer, 0, 0);\r\n                            resolve(true);\r\n                        };\r\n                        layer.onerror = () => resolve(false);\r\n                    } else resolve(false);\r\n                } else resolve(false);\r\n            });\r\n        };\r\n\r\n        if (canvasRef && exportCtx) {\r\n            exportCtx.clearRect(0, 0, 549, 800);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .map(callDraw => {\r\n                    return callDraw();\r\n                }));\r\n            await generateLayer(frameCanvasRef, exportCtx);\r\n            const previewCtx = previewCanvasRef.current;\r\n            if (previewCtx && exportCtx) {\r\n                if (isPendulum) {\r\n                    exportCtx.drawImage(previewCtx, 38, 144, 474, 470);\r\n                } else {\r\n                    exportCtx.drawImage(previewCtx, 67, 147, 416, 416);\r\n                }\r\n            }\r\n            await generateLayer(specialFrameCanvasRef, exportCtx);\r\n            const layerList = [\r\n                nameCanvasRef,\r\n                attributeCanvasRef,\r\n                subFamilyCanvasRef,\r\n                pendulumScaleCanvasRef,\r\n                pendulumEffectCanvasRef,\r\n                typeCanvasRef,\r\n                effectCanvasRef,\r\n                ADCanvasRef,\r\n                setIdRef,\r\n                firstEditionRef,\r\n                passcodeRef,\r\n                creatorRef,\r\n                stickerRef,\r\n            ];\r\n            await Promise.all([\r\n                layerList.map(currentlayer => generateLayer(currentlayer, exportCtx)),\r\n            ]);\r\n            // await drawRefrenceImage(exportCtx);\r\n        }\r\n    }).current;\r\n\r\n    return (\r\n        <div className={'app-container'} style={{\r\n            backgroundImage: 'url(\"/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)',\r\n        }}>\r\n            {isInitializing && <div className=\"full-loading\">\r\n                {error.length > 0 ? <span style={{ color: '#e04040' }}>\r\n                    {error}\r\n                </span> : 'Initializing...'}\r\n            </div>}\r\n            <div className=\"card-filter-panel\">\r\n            </div>\r\n            {isInitializing === false && <CardInputPanel\r\n                receivingCanvasRef={previewCanvasRef.current}\r\n                currentCard={currentCard}\r\n                onCardChange={setCard}\r\n                defaultCropInfo={pictureCrop}\r\n                onImageChange={cropInfo => {\r\n                    setImageChangeCount(cnt => cnt + 1);\r\n                    if (cropInfo) setCard(curr => ({\r\n                        ...curr,\r\n                        pictureCrop: cropInfo,\r\n                    }));\r\n                }}\r\n            >\r\n                <div className=\"app-header\">\r\n                    <img alt=\"app-logo\" src=\"./logo192.png\" width={48} />\r\n                    <div className=\"app-description\">\r\n                        <h1>Yugioh Carder <small>v{process.env.REACT_APP_VERSION ?? 'unknown'}</small></h1>\r\n                        <div className=\"app-contribution\">\r\n                            <span>GUI: <b>Lauqerm</b></span>\r\n                            <span>Template: <b>Grezar</b> (<a\r\n                                href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer\">Deviant Art</a>)</span>\r\n                            <Popover overlayClassName=\"disclaimer-overlay\" content={<div className=\"disclaimer\">\r\n                                <h2>Disclaimer</h2>\r\n                                <ul>\r\n                                    <li>This is a personal project, not an \"official\" card maker.</li>\r\n                                    <li>I holds no liability for cards created by this app, including picture, card text and any product that related to it.</li>\r\n                                    <li>I do not own any of Yu-Gi-Oh card layers and fonts use in this project.</li>\r\n                                </ul>\r\n                            </div>}>\r\n                                <ExclamationCircleOutlined className=\"disclaimer-icon\" />\r\n                            </Popover>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n            </CardInputPanel>}\r\n            <div className=\"card-preview-panel\">\r\n                <button className=\"export-button\">Save Card: Right click → \"Save image as...\"</button>\r\n                <div className=\"card-canvas-group\">\r\n                    <canvas id=\"export-canvas\" ref={drawCanvasRef} width={549} height={800} />\r\n                    <div id=\"export-canvas-guard\">\r\n                        <div className=\"canvas-guard-alert\">Generating...</div>\r\n                        <LoadingOutlined />\r\n                    </div>\r\n                    <canvas id=\"frameCanvas\" ref={frameCanvasRef} width={549} height={800} />\r\n                    <canvas id=\"artCanvas\" ref={artCanvasRef} width={549} height={650} />\r\n                    <canvas id=\"specialFrameCanvas\" ref={specialFrameCanvasRef} width={549} height={800} />\r\n                    <canvas id=\"nameCanvas\" ref={nameCanvasRef} width={549} height={100} />\r\n                    <canvas id=\"attributeCanvas\" ref={attributeCanvasRef} width={549} height={100} />\r\n                    <canvas id=\"subFamilyCanvas\" ref={subFamilyCanvasRef} width={549} height={150} />\r\n                    <canvas id=\"pendulumScaleCanvas\" ref={pendulumScaleCanvasRef} width={549} height={600} />\r\n                    <canvas id=\"pendulumEffectCanvas\" ref={pendulumEffectCanvasRef} width={549} height={600} />\r\n                    <canvas id=\"typeCanvas\" ref={typeCanvasRef} width={549} height={700} />\r\n                    <canvas id=\"effectCanvas\" ref={effectCanvasRef} width={549} height={750} />\r\n                    <canvas id=\"ADCanvas\" ref={ADCanvasRef} width={549} height={800} />\r\n                    <canvas id=\"setId\" ref={setIdRef} width={549} height={800} />\r\n                    <canvas id=\"passcode\" ref={passcodeRef} width={549} height={800} />\r\n                    <canvas id=\"firstEdition\" ref={firstEditionRef} width={549} height={800} />\r\n                    <canvas id=\"creator\" ref={creatorRef} width={549} height={800} />\r\n                    <canvas id=\"sticker\" ref={stickerRef} width={549} height={800} />\r\n                    <canvas className=\"crop-canvas\" ref={previewCanvasRef} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}