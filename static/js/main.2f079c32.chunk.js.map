{"version":3,"sources":["model/index.tsx","util/categorize.tsx","util/condenser.ts","util/index.tsx","component/card-picture/index.tsx","component/link-marker/index.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/style-picker/index.tsx","page/input-panel/input-train/index.tsx","page/input-panel/index.tsx","page/app-header/index.tsx","const/size.ts","const/position.ts","draw/text.ts","draw/util.ts","draw/predefine.ts","draw/type-ability.ts","draw/image.ts","app.tsx","reportWebVitals.js","index.js"],"names":["defaultTextStyle","fillStyle","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","hasShadow","defaultMonster","frame","foil","name","nameStyleType","nameStyle","attribute","subFamily","star","picture","pictureCrop","x","y","width","height","unit","aspect","link_map","isPendulum","pendulum_effect","red_scale","blue_scale","type_ability","effect","set_id","atk","def","passcode","sticker","isFirstEdition","creator","frameType","color","backgroundColor","iconList","foilStyleMap","gold","platinum","foilList","textStyle","checkXyz","card","checkLink","checkMonster","getCardFrame","find","entry","toLowerCase","createCondenser","minThreshold","maxThreshold","min","max","median","lastEffective","iterateCount","magnitude","reverseSearch","finish","Math","searchDown","reset","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","randomCharacter","charSet","length","result","charactersLength","i","charAt","floor","random","randomSetID","randomPassword","splitEffect","isNormal","effectBody","effectMaterial","materialRegex","materialReplacement","exec","material","replace","effectFlavorCondition","flavorConditionRegex","flavorCondition","body","quoteConvert","text","normalizedString","ImageCropper","noRedrawNumber","defaultExternalSource","previewCanvasRef","children","ratio","defaultCropInfo","onSourceChange","onImageChange","useState","sourceType","setSourceType","internalSource","setInternalSource","externalSource","setExternalSource","imgRef","useRef","crop","setCrop","completedCrop","setCompletedCrop","onLoad","useCallback","img","current","useEffect","image","canvas","ctx","getContext","scaleX","naturalWidth","scaleY","naturalHeight","pixelRatio","window","devicePixelRatio","boundingWidth","ceil","getBoundingClientRect","boundingHeight","setTransform","imageSmoothingQuality","drawImage","className","Group","onChange","e","target","value","Button","addonBefore","placeholder","source","maxLength","type","accept","files","reader","FileReader","addEventListener","readAsDataURL","disabled","onClick","toBlob","blob","previewUrl","URL","createObjectURL","anchor","document","createElement","download","href","click","revokeObjectURL","generateDownload","style","src","onImageLoaded","cropData","onComplete","ruleOfThirds","LinkMarkChooser","defaultValue","choosenArrow","setChoosenArrow","rotateMap","literalChoosenArrow","JSON","stringify","Array","map","index","normalizedIndex","overlay","includes","cur","newMap","filter","push","transform","foilButton","label","toLocaleUpperCase","props","fontWeight","frameButton","attributeButton","alt","process","iconButton","starButton","stickerButton","CharPicker","targetId","onPick","setTarget","internalOnPick","char","inputTarget","getElementById","myField","myValue","selection","focus","createRange","position","selectionStart","startPos","endPos","selectionEnd","substring","insertAtCursor","onDrag","left","top","id","EllipsisOutlined","container","edge","draggable","throttleDrag","StylePicker","React","memo","defaultType","undebouncedOnChange","setType","setValue","isVisible","setVisible","debounce","setCustomValue","key","inputValue","curValue","newStyle","boxShadow","background","zIndex","checked","newType","CloseOutlined","hex","axis","styles","track","gridRow","thumb","xmax","xmin","ymax","ymin","size","CheckboxTrain","optionList","combinedClass","join","isChecked","TextArea","Input","onChangeFactory","mutateFunction","valueTransform","isArray","RandomButton","seeder","onGenerate","marginLeft","paddingLeft","borderLeft","SyncOutlined","CardInputPanel","currentCard","receivingCanvasRef","onCardChange","isMirrorScale","setMirrorScale","setCard","mutateFunc","onFoilChange","onAttributeChange","onSubFamilyChange","onNameChange","onStarChange","onPictureChange","onLinkMapChange","onRedScaleChange","onBlueScaleChange","onPendulumEffectChange","onEffectChange","onATKChange","onDEFChange","onTypeAbilityChange","onSetIDChange","onPasscodeChange","onStickerChange","onCreatorChange","isXyz","isLink","isMonster","displayTypeAbility","setDisplayTypeAbility","displayName","setDisplayName","displayEffect","setDisplayEffect","displayPendulumEffect","setDisplayPendulumEffect","onlineCharPicker","setOnlineCharPicker","ref","frameValue","isST","newTypeAbility","toUpperCase","onFocus","allowClear","ev","rows","split","trim","AppHeader","rel","overlayClassName","content","ExclamationCircleOutlined","monsterFontList","fontSize","lineHeight","lineCount","monsterSizeList","pendulumFontList","pendulumSizeList","stFontList","stSizeList","typeSizeMap","small","bracketSize","bracketSpace","bracketOffsetTop","upperCaseSize","upperCaseScale","lowerCaseSize","lowerCaseScale","spaceScale","spaceSize","frontSpace","behindSpace","iconSpace","medium","large","arrowPositionList","foilPosition","art","drawScale","baseline","digitList","totalWidth","forEach","digit","measureText","accLeft","fillText","drawEffect","isPendulumEffect","fontList","sizeList","normalizedContent","effectIndexSize","tolerantPerSentence","additionalLineCount","sentencizeText","bulletSymbol","specialSymbol","tokenizeR","RegExp","specialSymbolReg","basedWidth","condenser","effectiveRatio","maxLine","font","textAlign","switchFont","func","tempFont","largeSize","lineList","reduce","prev","curr","condenseRatio","hypoWidth","tokenizedText","currentLineCount","tokenSentence","cnt","tokenWidth","test","fullString","fullStringSplittedByBullet","isLast","drawBullet","beginPath","arc","PI","fill","lineWidth","strokeStyle","stroke","clearRect","actualWidth","scale","sigmoidRatio","splitter","spaceSeparatedText","nonSpaceWidth","spaceCount","spaceWidth","fillTextLeftWithSpacing","str","letterSpacingRatio","charList","curLeft","fillTextRightWithSpacing","curRight","c","drawCreatorText","symbol","maxWidth","splittedContent","splittedWidth","symbolWidth","totalCondensableWidth","returnBundle","measureWithSymbol","nextEdge","drawAD","$value","nextWidth","arr","curText","drawBracketTemplate","alignment","bracketChar","alignmentOffset","drawIconSpaceTemplate","drawBracketSpaceTemplate","drawTextTemplate","spaceChar","drawSlashTemplate","baseOffset","totalOffset","upperChar","imageCacheMap","drawFromSource","sx","sy","a","Promise","resolve","ready","normalizedX","normalizedY","Image","onload","onerror","drawFromSourceWithSize","dw","dh","App","isInitializing","setInitializing","error","setError","drawCanvasRef","frameCanvasRef","artCanvasRef","specialFrameCanvasRef","subFamilyCanvasRef","pendulumScaleCanvasRef","pendulumEffectCanvasRef","typeCanvasRef","effectCanvasRef","nameCanvasRef","attributeCanvasRef","ADCanvasRef","setIdRef","passcodeRef","creatorRef","stickerRef","pendulumSize","drawingPipeline","specialFrame","imageChangeCount","setImageChangeCount","cardType","hasFoil","previewCtx","foiledBorder","all","parseInt","counter","offset","normalizedSubFamily","splittedText","contentWidth","drawName","endOfPasscode","draw1stEdition","drawTypeAbility","textSize","instructionList","totalLeft","reverse","typeCtx","WebFont","load","custom","families","urls","active","localCardVersion","localStorage","getItem","localCardData","parse","inactive","exportRef","currentPipeline","queuedPipeline","relevant","setItem","querySelector","setAttribute","onExport","exportProps","canvasRef","exportCtx","generateLayer","canvasLayer","layerData","toDataURL","layer","Object","values","callDraw","layerList","currentlayer","backgroundImage","cropInfo","LoadingOutlined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2f079c32.chunk.js","sourcesContent":["export type TextStyleType = 'auto' | 'custom';\r\nexport type TextStyle = typeof defaultTextStyle;\r\nexport const defaultTextStyle = {\r\n    fillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    hasShadow: false,\r\n};\r\n\r\nexport type Card = typeof defaultCard;\r\nexport const defaultCard = {\r\n    frame: 'fusion',\r\n    foil: 'normal',\r\n    name: 'Junko',\r\n    nameStyleType: 'auto' as TextStyleType,\r\n    nameStyle: {\r\n        fillStyle: '#000000',\r\n        shadowColor: '#000000',\r\n        shadowOffsetY: 0,\r\n        shadowOffsetX: 0,\r\n        shadowBlur: 0,\r\n        hasShadow: false,\r\n    } as TextStyle,\r\n    attribute: 'LIGHT',\r\n    subFamily: 'NO ICON',\r\n    star: 6,\r\n    picture: 'https://i.imgur.com/h5kXZeC.png',\r\n    pictureCrop: {\r\n        x: 0,\r\n        y: 12,\r\n        width: 269,\r\n        height: 269,\r\n        unit: 'px',\r\n        aspect: 1,\r\n    } as Partial<ReactCrop.Crop>,\r\n    link_map: ['1', '3', '7', '9'] as string[],\r\n    isPendulum: false,\r\n    pendulum_effect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\r\n    red_scale: '4',\r\n    blue_scale: '4',\r\n    type_ability: ['Fairy', 'Fusion', 'Effect'] as string[],\r\n    effect: `[2+ Effect Monsters]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    set_id: 'YGOC-EN001',\r\n    atk: '2000',\r\n    def: '2000',\r\n    passcode: '18111996',\r\n    sticker: 'holo5',\r\n    isFirstEdition: true,\r\n    creator: '©2020 Studio Dice/SHUEISHA TV TOKYO, KONAMI',\r\n};\r\nexport const defaultMonster = defaultCard;\r\n\r\nexport const frameType = [\r\n    { name: 'normal', color: '#fff', backgroundColor: '#c49c5e' },\r\n    { name: 'effect', color: '#fff', backgroundColor: '#b96c49' },\r\n    { name: 'fusion', color: '#fff', backgroundColor: '#8948a4' },\r\n    { name: 'synchro', color: '#000', backgroundColor: '#efefef' },\r\n    { name: 'xyz', color: '#fff', backgroundColor: '#000' },\r\n    { name: 'link', color: '#fff', backgroundColor: '#0c8ac6' },\r\n    { name: 'ritual', color: '#fff', backgroundColor: '#5e85c9' },\r\n    { name: 'spell', color: '#fff', backgroundColor: '#1b8f83' },\r\n    { name: 'trap', color: '#fff', backgroundColor: '#c32a8c' },\r\n    { name: 'token', color: '#fff', backgroundColor: '#6f6c6b' },\r\n];\r\n\r\nexport const iconList = [\r\n    'NO ICON',\r\n    'FIELD',\r\n    'CONTINUOUS',\r\n    'QUICK-PLAY',\r\n    'RITUAL',\r\n    'COUNTER',\r\n];\r\n\r\nexport const foilStyleMap: Record<string, TextStyle> = {\r\n    gold: {\r\n        fillStyle: '#b88c43',\r\n        shadowColor: '#FCC400',\r\n        shadowOffsetY: 1,\r\n        shadowOffsetX: 0,\r\n        shadowBlur: 1,\r\n        hasShadow: true,\r\n    },\r\n    platinum: {\r\n        fillStyle: '#CCCCCC',\r\n        shadowColor: '#FFFFFF',\r\n        shadowOffsetY: 1,\r\n        shadowOffsetX: 0,\r\n        shadowBlur: 1,\r\n        hasShadow: true,\r\n    },\r\n};\r\nexport const foilList = [\r\n    { name: 'normal', color: '#747b95', textStyle: defaultTextStyle },\r\n    { name: 'gold', color: '#cfa65f' },\r\n    { name: 'platinum', color: '#b1b1b1' },\r\n];\r\n\r\nexport const stickerList = [\r\n    'gold',\r\n    'silver',\r\n    'beta',\r\n    'holo5',\r\n    'holo4',\r\n    'holo3',\r\n    'holo2',\r\n    'holo1',\r\n];\r\n\r\nexport const attributeList = [\r\n    { name: 'DARK', color: '#b41dda' },\r\n    { name: 'EARTH', color: '#8d8e8e' },\r\n    { name: 'FIRE', color: '#e51b23' },\r\n    { name: 'LIGHT', color: '#bfae32' },\r\n    { name: 'WATER', color: '#008ecd' },\r\n    { name: 'WIND', color: '#28ab35' },\r\n    { name: 'DIVINE', color: '#ef6300' },\r\n    { name: 'SPELL', color: '#1b8f83' },\r\n    { name: 'TRAP', color: '#c32a8c' },\r\n];","import { Card, frameType } from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'frame' | 'type_ability'>) => {\r\n    return card.frame === 'link' && checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap';\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameType.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};","export const createCondenser = (minThreshold = 0, maxThreshold = 1000) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= 10;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\t\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\t\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result           = '';\r\n    const charactersLength = charSet.length;\r\n    for ( let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = () => {\r\n    return `${randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)}-EN${randomCharacter('0123456789', 3)}`;\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};\r\n\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    let effectBody = effect;\r\n\r\n    let effectMaterial = '';\r\n    const materialRegex = /^(\\[([^\\]]*)\\]\\s*)/m;\r\n    const materialReplacement = materialRegex.exec(effectBody)?.[1];\r\n    const material = materialRegex.exec(effectBody)?.[2];\r\n    if (material && materialReplacement) {\r\n        effectMaterial = material;\r\n        effectBody = effectBody.replace(materialReplacement, '');\r\n    } else effectMaterial = '';\r\n\r\n    let effectFlavorCondition = '';\r\n    const flavorConditionRegex = /(\\n^[\\r\\t\\f\\v \\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]*\\([\\w\\W]+\\))\\s*$/m;\r\n    const flavorCondition = flavorConditionRegex.exec(effect)?.[1];\r\n    if (flavorCondition && isNormal) {\r\n        effectFlavorCondition = flavorCondition;\r\n        effectBody = effectBody.replace(flavorCondition, '');\r\n    } else effectFlavorCondition = '';\r\n\r\n    return {\r\n        material: effectMaterial,\r\n        body: effectBody,\r\n        flavorCondition: effectFlavorCondition\r\n    };\r\n};\r\n\r\nexport const quoteConvert = (text?: string) => {\r\n    let normalizedString = (text ?? '');\r\n    normalizedString = normalizedString.replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')\r\n        .replace(/'/g, '\\u2019')\r\n        .replace(/(^|[-\\u2014/[(\\u2018\\s])\"/g, '$1\\u201c')\r\n        .replace(/\"/g, '\\u201d')\r\n        .replace(/--/g, '\\u2014');\r\n    return normalizedString;\r\n};\r\n\r\nexport * from './categorize';\r\nexport * from './condenser';","import { Button, Input, Radio } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './card-picture.scss';\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n            const anchor = document.createElement('a');\r\n            anchor.download = 'cropPreview.png';\r\n            anchor.href = URL.createObjectURL(blob);\r\n            anchor.click();\r\n\r\n            window.URL.revokeObjectURL(previewUrl);\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\nexport type ImageCropper = {\r\n    noRedrawNumber?: number,\r\n\tdefaultExternalSource?: string,\r\n    previewCanvasRef?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    ratio?: number,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    onSourceChange?: (source: string) => void,\r\n    onImageChange?: (cropInfo: Partial<ReactCrop.Crop>) => void,\r\n}\r\nexport const ImageCropper = ({\r\n    noRedrawNumber = 0,\r\n    defaultExternalSource = '',\r\n    previewCanvasRef,\r\n    children,\r\n    ratio = 1,\r\n    defaultCropInfo,\r\n    onSourceChange = () => {},\r\n    onImageChange = () => {},\r\n}: ImageCropper) => {\r\n    const [sourceType, setSourceType] = useState('external');\r\n    const [internalSource, setInternalSource] = useState('');\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState<ReactCrop.Crop>(defaultCropInfo);\r\n    const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n\r\n    const onSelectFile = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () => {\r\n                if (typeof reader.result === 'string') {\r\n                    setInternalSource(reader.result);\r\n                    setSourceType('internal');\r\n                }\r\n            });\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const onLoad = useCallback((img) => {\r\n        imgRef.current = img;\r\n    }, []);\r\n\t\r\n    const onExternalSourceChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n\r\n        onSourceChange(source);\r\n        setExternalSource(source);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        const canvas = previewCanvasRef;\r\n        const crop = completedCrop;\r\n        if (!crop || !canvas || !image) return;\r\n\r\n        const ctx = canvas.getContext('2d');\r\n        if (!ctx) return;\r\n\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        const pixelRatio = window.devicePixelRatio;\r\n        const boundingWidth = Math.ceil(canvas.getBoundingClientRect().width);\r\n        const boundingHeight = Math.ceil(canvas.getBoundingClientRect().height);\r\n\r\n        canvas.width = (boundingWidth ?? 0) * pixelRatio;\r\n        canvas.height = (boundingHeight ?? 0) * pixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        ctx.imageSmoothingQuality = 'high';\r\n\r\n        ctx.drawImage(\r\n            image,\r\n            (crop.x ?? 0) * scaleX,\r\n            (crop.y ?? 0) * scaleY,\r\n            (crop.width ?? 0) * scaleX,\r\n            (crop.height ?? 0) * scaleY,\r\n            0,\r\n            0,\r\n            (boundingWidth ?? 0),\r\n            (boundingHeight ?? 0)\r\n        );\r\n        onImageChange(crop);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, previewCanvasRef, noRedrawNumber]);\r\n\r\n    return (\r\n        <div className=\"card-image-cropper\">\r\n            <div className=\"card-image-source-input\">\r\n                {children}\r\n                <Radio.Group onChange={e => setSourceType(e.target.value)} value={sourceType}>\r\n                    <Radio.Button value={'external'}>\r\n                        <Input key=\"key\"\r\n                            addonBefore=\"Link\" placeholder=\"https://my-online-image...\"\r\n                            value={externalSource}\r\n                            onChange={onExternalSourceChange} maxLength={256} />\r\n                    </Radio.Button>\r\n                    <Radio.Button value={'internal'}>\r\n                        <Input type=\"file\"  accept=\"image/*\" onChange={onSelectFile} />\r\n                        <div>\r\n                            {sourceType === 'internal' && <>\r\n                                <Button\r\n                                    className=\"download-button\"\r\n                                    disabled={!completedCrop?.width || !completedCrop?.height}\r\n                                    onClick={() => previewCanvasRef && generateDownload(previewCanvasRef, completedCrop)}\r\n                                >\r\n                                Download cropped image\r\n                                </Button>\r\n                                <span style={{ color: '#FF6F6F' }}>Offline images are not auto saved!</span>\r\n                            </>}\r\n                        </div>\r\n                    </Radio.Button>\r\n                </Radio.Group>\r\n            </div>\r\n            <div className=\"card-cropper\">\r\n                <ReactCrop key={sourceType}\r\n                    src={sourceType === 'internal' ? internalSource : externalSource}\r\n                    onImageLoaded={onLoad}\r\n                    crop={crop}\r\n                    onChange={cropData => setCrop({ ...cropData, aspect: ratio })}\r\n                    onComplete={cropData => setCompletedCrop(cropData)}\r\n                    ruleOfThirds={true}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport './link-marker.scss';\r\n\r\nexport type LinkMarkChooser = {\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n};\r\nexport const LinkMarkChooser = ({\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n}: LinkMarkChooser) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const rotateMap = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <div className=\"link-marker-chooser\">\r\n        <div className=\"title\">\r\n            Link Arrows\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((entry, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip key=\"5\" overlay=\"Reset\">\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        setChoosenArrow([]);\r\n                    }}>R</div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div className={`link-marker-icon link-marker-icon-${index + 1}`} style={{ transform: `rotate(${rotateMap[index]}deg)` }} />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </div>;\r\n};","import { frameType, iconList, attributeList, stickerList, foilList } from '../../model';\r\nimport './input-panel.scss';\r\n\r\nexport const foilButton = foilList.map(({ color, name }) => ({\r\n    label: name.toLocaleUpperCase(),\r\n    value: name,\r\n    props: {\r\n        style: {\r\n            color,\r\n            fontWeight: 'bold',\r\n        } as React.CSSProperties,\r\n    }\r\n}));\r\nexport const frameButton = frameType.map(({ color, name, backgroundColor }) => ({\r\n    label: name,\r\n    value: name,\r\n    props: {\r\n        style: {\r\n            backgroundColor,\r\n            color,\r\n        } as React.CSSProperties,\r\n    }\r\n}));\r\nexport const attributeButton = attributeList.map(({ name }) => ({\r\n    label: <img alt={name} src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${name.toLowerCase()}.png`} />,\r\n    value: name,\r\n}));\r\nexport const iconButton = iconList.map(entry => ({\r\n    label: entry,\r\n    value: entry,\r\n}));\r\nexport const starButton = [...Array(14)].map((e, index) => ({ label: index, value: index }));\r\nexport const stickerButton = stickerList.map(name => ({\r\n    label: <img alt={name} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${name.toLowerCase()}.png`} />,\r\n    value: name,\r\n}));","import { useCallback, useEffect, useState } from 'react';\r\nimport Moveable from 'react-moveable';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport './char-picker.scss';\r\n\r\nfunction insertAtCursor(myField: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        myField.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: myField.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (myField.selectionStart || myField.selectionStart === 0) {\r\n        const startPos = myField.selectionStart;\r\n        const endPos = myField.selectionEnd;\r\n        myField.value = myField.value.substring(0, startPos)\r\n            + myValue\r\n            + myField.value.substring(endPos, myField.value.length);\r\n        myField.selectionStart = startPos + myValue.length;\r\n        myField.selectionEnd = startPos + myValue.length;\r\n        myField.focus();\r\n\r\n        return {\r\n            value: myField.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        myField.value += myValue;\r\n\r\n        return {\r\n            value: myField.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (char: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, char);\r\n\r\n            onPick(value);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTarget(document.getElementById('char-picker'));\r\n    }, []);\r\n\r\n    const onDrag = useCallback(({\r\n        target,\r\n        left, top,\r\n        transform,\r\n    }) => {\r\n        target!.style.left = `${left}px`;\r\n        target!.style.top = `${top}px`;\r\n        target!.style.transform = transform;\r\n    }, []);\r\n\r\n    return <div className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div>\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n            ].map(entry => {\r\n                return <button key={entry} className=\"ant-btn\" onClick={() => internalOnPick(entry)}>{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <Moveable\r\n            target={target}\r\n            container={null}\r\n\r\n            /* Resize event edges */\r\n            edge={false}\r\n\r\n            /* draggable */\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        />\r\n    </div>;\r\n};","import { Checkbox, InputNumber, Slider } from 'antd';\r\nimport React, { useRef, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport { TextStyle, TextStyleType } from '../../../model';\r\nimport PowerSlider from 'react-input-slider';\r\nimport { debounce } from 'lodash';\r\nimport './style-picker.scss';\r\n\r\nexport type StylePicker = {\r\n    defaultType: TextStyleType,\r\n\tdefaultValue: TextStyle,\r\n\tonChange: (type: TextStyleType, style: TextStyle) => void,\r\n}\r\nexport const StylePicker = React.memo(({\r\n    defaultType,\r\n    defaultValue,\r\n    onChange: undebouncedOnChange,\r\n}: StylePicker) => {\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [isVisible, setVisible] = useState(false);\r\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\r\n\r\n    const setCustomValue = <ValueType extends any>(key: keyof TextStyle) => {\r\n        return (inputValue: ValueType) => {\r\n            setValue(curValue => {\r\n                const newStyle = { ...curValue, [key]: inputValue };\r\n\r\n                onChange('custom', newStyle);\r\n                return newStyle;\r\n            });\r\n        };\r\n    };\r\n\r\n    return <div className=\"style-picker\">\r\n        <div className=\"style-picker-preview\"\r\n            style={type === 'auto'\r\n                ? {}\r\n                : { boxShadow: `${value.shadowOffsetX}px ${value.shadowOffsetY}px ${value.shadowBlur}px 0 ${value.shadowColor}` }}\r\n            onClick={() => setVisible(cur => !cur)}\r\n        >\r\n            <div className=\"style-picker-display\" style={type === 'auto' ? { background: 'white' } : { background: value.fillStyle }}>\r\n                {type === 'auto' ? 'Auto' : <>&nbsp;</>}\r\n            </div>\r\n        </div>\r\n        {isVisible\r\n            ? <div className=\"style-picker-overlay\" style={{ position: 'absolute', zIndex: 2 }}>\r\n                <div className=\"style-picker-mask\" onClick={() => setVisible(false)} />\r\n                <div className=\"style-picker-auto\">\r\n                    <Checkbox value={'auto'} checked={type === 'auto'} onChange={() => {\r\n                        const newType = type === 'auto' ? 'custom' : 'auto';\r\n                        setType(newType);\r\n                        onChange(newType, value);\r\n                    }}>Auto</Checkbox>\r\n                    <CloseOutlined className=\"style-picker-close\" onClick={() => setVisible(false)} />\r\n                </div>\r\n                <div className={'custom-style-picker'}>\r\n                    <div className=\"custom-style-text\">\r\n                        {/* {type === 'auto' && <div className=\"disable-overlay\" />} */}\r\n                        <h2>Text Color</h2>\r\n                        <CompactPicker color={value.fillStyle} onChange={color => {\r\n                            setType('custom');\r\n                            setValue(cur => {\r\n                                const newStyle = { ...cur, fillStyle: color.hex };\r\n\r\n                                onChange('custom', newStyle);\r\n                                return newStyle;\r\n                            });\r\n                        }} />\r\n                    </div>\r\n                    <h3 className=\"custom-style-expand\">\r\n                        <Checkbox value={'has-shadow'} checked={value.hasShadow} onChange={() => {\r\n                            setType('custom');\r\n                            setValue(cur => {\r\n                                const newStyle = { ...cur, hasShadow: !cur.hasShadow };\r\n\r\n                                onChange('custom', newStyle);\r\n                                return newStyle;\r\n                            });\r\n                        }}>Has Shadow?</Checkbox>\r\n                    </h3>\r\n                    {value.hasShadow && <div className=\"custom-style-shadow\">\r\n                        {/* {type === 'auto' && <div className=\"disable-overlay\" />} */}\r\n                        <h2>Position</h2>\r\n                        <div className=\"shadow-position\">\r\n                            <PowerSlider axis=\"xy\"\r\n                                styles={{\r\n                                    track: {\r\n                                        backgroundColor: '#009ce0',\r\n                                        width: 100,\r\n                                        height: 100,\r\n                                        gridRow: 'span 3',\r\n                                        position: 'relative',\r\n                                    },\r\n                                    thumb: {\r\n                                        backgroundColor: '#91d5ff',\r\n                                        zIndex: 10,\r\n                                    },\r\n                                }}\r\n                                xmax={5} xmin={-5}\r\n                                ymax={5} ymin={-5}\r\n                                x={value.shadowOffsetX}\r\n                                y={value.shadowOffsetY}\r\n                                onChange={({ x, y }) => {\r\n                                    setValue(cur => {\r\n                                        const newStyle = { ...cur,\r\n                                            ...cur,\r\n                                            shadowOffsetX: x,\r\n                                            shadowOffsetY: y,\r\n                                        };\r\n\r\n                                        onChange('custom', newStyle);\r\n                                        return newStyle;\r\n                                    });\r\n                                }} />\r\n                            <div className=\"single-slider\">\r\n                                X Offset: <InputNumber size=\"small\" value={value.shadowOffsetX}\r\n                                    onChange={setCustomValue('shadowOffsetX')} />\r\n                            </div>\r\n                            <div className=\"single-slider\">\r\n                                Y Offset: <InputNumber size=\"small\" value={value.shadowOffsetY}\r\n                                    onChange={setCustomValue('shadowOffsetY')} />\r\n                            </div>\r\n                            <div className=\"single-slider\">\r\n                                Blur: <Slider value={value.shadowBlur} min={0} max={10} onChange={(value: number) => {\r\n                                    if (typeof value === 'number') setValue(cur => {\r\n                                        const newStyle = { ...cur, shadowBlur: value };\r\n\r\n                                        onChange('custom', newStyle);\r\n                                        return newStyle;\r\n                                    });\r\n                                }} />\r\n                            </div>\r\n                            <div />\r\n                        </div>\r\n                        <h2>Color</h2>\r\n                        <CompactPicker color={value.shadowColor} onChange={color => {\r\n                            setValue(cur => {\r\n                                const newStyle = { ...cur, shadowColor: color.hex };\r\n\r\n                                onChange('custom', newStyle);\r\n                                return newStyle;\r\n                            });\r\n                        }} />\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n            : null}\r\n    </div>;\r\n}, () => true);","import React from 'react';\r\n\r\n\r\n\r\nexport type CheckboxTrain = {\r\n\tclassName?: string,\r\n\tvalue: string,\r\n\toptionList: { label: React.ReactNode, value: string | number, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n\tonChange: (value: string | number) => void,\r\n\tchildren?: React.ReactNode,\r\n}\r\nexport const CheckboxTrain = ({\r\n    onChange,\r\n    value,\r\n    optionList,\r\n    children,\r\n    className,\r\n}: CheckboxTrain) => {\r\n    const combinedClass = ['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ');\r\n\r\n    return <div className={combinedClass}>\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        {optionList.map(entry => {\r\n            const isChecked = `${entry.value}` === `${value}`;\r\n\r\n            return <label key={entry.value}\r\n                {...entry.props}\r\n                className={`ant-radio-button-wrapper ${isChecked ? 'ant-radio-button-wrapper-checked' : ''}`}\r\n                onClick={() => {\r\n                    onChange(entry.value);\r\n                }}\r\n            >\r\n                <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                    <span className=\"ant-radio-button-inner\"></span>\r\n                </span>\r\n                <span>{entry.label}</span>\r\n            </label>;\r\n        })}\r\n    </div>;\r\n};","import React, { useRef, useState } from 'react';\r\nimport { Input, Checkbox, Tooltip } from 'antd';\r\nimport { Card, TextStyle, TextStyleType } from '../../model';\r\nimport { ImageCropper, LinkMarkChooser } from '../../component';\r\nimport { checkXyz, checkLink, checkMonster, randomPassword, randomSetID } from '../../util';\r\nimport { debounce } from 'lodash';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { foilButton, frameButton, starButton, iconButton, attributeButton, stickerButton } from './const';\r\nimport { CharPicker } from './char-picker';\r\nimport { StylePicker } from './style-picker';\r\nimport { CheckboxTrain } from './input-train';\r\nimport './input-panel.scss';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst onChangeFactory = (\r\n    key: string,\r\n    mutateFunction: (func: (card: Card) => Card) => void,\r\n    valueTransform: (value: any) => any = (value) => value,\r\n) => {\r\n    return (e: any) => {\r\n        mutateFunction(current => ({\r\n            ...current,\r\n            [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\r\n        }));\r\n    };\r\n};\r\n\r\ntype RandomButton = {\r\n    seeder: () => string,\r\n    onGenerate: (value: string) => void,\r\n}\r\nconst RandomButton = ({\r\n    seeder,\r\n    onGenerate,\r\n}: RandomButton) => {\r\n    return <span style={{ marginLeft: 10, paddingLeft: 10, borderLeft: '1px solid #222' }}>\r\n        <Tooltip overlay=\"Random\">\r\n            <SyncOutlined onClick={() => onGenerate(seeder())} />\r\n        </Tooltip>\r\n    </span>;\r\n};\r\n\r\nexport type CardInputPanelRef = {\r\n    getCroppedImageCanvasRef: () => HTMLCanvasElement | null\r\n}\r\nexport type CardInputPanel = {\r\n\tcurrentCard: Card,\r\n    receivingCanvasRef: HTMLCanvasElement | null,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n\tonCardChange: React.Dispatch<React.SetStateAction<Card>>,\r\n    onImageChange?: (cropInfo: Partial<ReactCrop.Crop>) => void,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CardInputPanel = ({\r\n    currentCard,\r\n    receivingCanvasRef,\r\n    defaultCropInfo,\r\n    onCardChange,\r\n    onImageChange,\r\n    children,\r\n}: CardInputPanel) => {\r\n    const [isMirrorScale, setMirrorScale] = useState(true);\r\n    const setCard = (mutateFunc: (card: Card) => Card) => {\r\n        onCardChange(currentCard => mutateFunc(currentCard));\r\n    };\r\n    const onFoilChange = onChangeFactory('foil', setCard);\r\n    const onFrameChange = (frameValue: number | string) => {\r\n        onCardChange(currentCard => {\r\n            const value = `${frameValue}`;\r\n            const isST = value === 'spell' || value === 'trap';\r\n            const newTypeAbility = value === 'spell'\r\n                ? ['Spell Card']\r\n                : value === 'trap' ? ['Trap Card'] : currentCard.type_ability;\r\n            if (isST) setDisplayTypeAbility(newTypeAbility[0]);\r\n    \r\n            return {\r\n                ...currentCard,\r\n                frame: value,\r\n                isPendulum: value === 'link' || value === 'token' || isST ? false : currentCard.isPendulum,\r\n                subFamily: isST ? 'NO ICON' : currentCard.subFamily,\r\n                attribute: isST\r\n                    ? `${value}`.toUpperCase()\r\n                    : currentCard.attribute,\r\n                type_ability: value === 'spell'\r\n                    ? ['Spell Card']\r\n                    : value === 'trap' ? ['Trap Card'] : currentCard.type_ability,\r\n            };\r\n        });\r\n    };\r\n    const onAttributeChange = onChangeFactory('attribute', setCard);\r\n    const onSubFamilyChange = onChangeFactory('subFamily', setCard);\r\n    const onNameChange = debounce(onChangeFactory('name', setCard), 250);\r\n    const onNameColorChange = (type: TextStyleType, value: TextStyle) => {\r\n        onCardChange(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    };\r\n    const onStarChange = onChangeFactory('star', setCard);\r\n    const onIsPendulumChange = (e: any) => onCardChange(currentCard => {\r\n        return { ...currentCard, isPendulum: e.target.checked };\r\n    });\r\n    const onPictureChange = onChangeFactory('picture', setCard);\r\n    const onLinkMapChange = onChangeFactory('link_map', setCard);\r\n    const onRedScaleChange = onChangeFactory('red_scale', setCard);\r\n    const onBlueScaleChange = onChangeFactory('blue_scale', setCard);\r\n    const onPendulumEffectChange = debounce(onChangeFactory('pendulum_effect', setCard), 250);\r\n    const onEffectChange = debounce(onChangeFactory('effect', setCard), 250);\r\n    const onATKChange = onChangeFactory('atk', setCard);\r\n    const onDEFChange = onChangeFactory('def', setCard);\r\n    const onTypeAbilityChange = debounce((value: (string | number)[]) => {\r\n        setCard(current => ({\r\n            ...current,\r\n            type_ability: value.map(entry => `${entry}`),\r\n        }));\r\n    }, 250);\r\n    const onSetIDChange = onChangeFactory('set_id', setCard);\r\n    const onPasscodeChange = onChangeFactory('passcode', setCard);\r\n    const onStickerChange = onChangeFactory('sticker', setCard);\r\n    const onCreatorChange = onChangeFactory('creator', setCard);\r\n    const onFirstEditionChange = (e: any) => onCardChange(currentCard => {\r\n        return { ...currentCard, isFirstEdition: e.target.checked };\r\n    });\r\n\r\n    const {\r\n        frame, foil,\r\n        name, nameStyleType, nameStyle,\r\n        picture,\r\n        effect,\r\n        type_ability,\r\n        isPendulum, pendulum_effect, red_scale, blue_scale,\r\n        atk, def, link_map,\r\n        attribute,\r\n        subFamily,\r\n        star,\r\n        set_id,\r\n        passcode, isFirstEdition, creator, sticker,\r\n    } = currentCard;\r\n    const isXyz = checkXyz(currentCard);\r\n    const isLink = checkLink(currentCard);\r\n    const isMonster = checkMonster(currentCard);\r\n    const [displayTypeAbility, setDisplayTypeAbility] = useState(type_ability.join('/'));\r\n    const [displayName, setDisplayName] = useState(name);\r\n    const [displayEffect, setDisplayEffect] = useState(effect);\r\n    const [displayPendulumEffect, setDisplayPendulumEffect] = useState(pendulum_effect);\r\n    const [onlineCharPicker, setOnlineCharPicker] = useState('');\r\n    const ref = useRef();\r\n    \r\n\r\n    return <div className=\"card-info-panel\">\r\n        {children}\r\n        <CharPicker\r\n            targetId={onlineCharPicker}\r\n            onPick={value => {\r\n                if (ref.current) (ref.current as any)?.props?.onChange?.({\r\n                    target: { value }\r\n                });\r\n            }}\r\n        />\r\n        <CheckboxTrain className=\"foil-radio\" value={foil} onChange={onFoilChange} optionList={foilButton}>\r\n            <span>Foil</span>\r\n        </CheckboxTrain>\r\n        <CheckboxTrain className=\"frame-radio\" value={frame} onChange={onFrameChange} optionList={frameButton} />\r\n        <hr />\r\n        <div className=\"card-header custom-gap\">\r\n            <Input\r\n                id=\"name\"\r\n                ref={onlineCharPicker === 'name' ? ref as any : null}\r\n                onFocus={() => setOnlineCharPicker('name')}\r\n                allowClear\r\n                addonBefore={<>Name <StylePicker defaultType={nameStyleType} defaultValue={nameStyle} onChange={onNameColorChange} /></>}\r\n                placeholder=\"Card Name\"\r\n                value={displayName}\r\n                className=\"name-input\"\r\n                onChange={ev => {\r\n                    onNameChange(ev);\r\n                    setDisplayName(ev.target.value);\r\n                }}\r\n            />\r\n            {isMonster\r\n                ? !isLink\r\n                    ? <CheckboxTrain value={`${star}`} onChange={onStarChange} optionList={starButton}>\r\n                        <span>{isXyz ? 'Rank' : 'Level'}</span>\r\n                    </CheckboxTrain>\r\n                    : null\r\n                : <CheckboxTrain value={subFamily} onChange={onSubFamilyChange} optionList={iconButton}>\r\n                    <span>Icon</span>\r\n                </CheckboxTrain>\r\n            }\r\n            <CheckboxTrain className=\"checkbox-image-train\" value={attribute} onChange={onAttributeChange} optionList={attributeButton}>\r\n                <span>Attribute</span>\r\n            </CheckboxTrain>\r\n        </div>\r\n        <div key=\"pic\" className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <Input\r\n                    id=\"set-id\"\r\n                    ref={onlineCharPicker === 'set-id' ? ref as any : null}\r\n                    onFocus={() => setOnlineCharPicker('set-id')}\r\n                    allowClear\r\n                    className=\"set-id-input\"\r\n                    addonBefore={<>Set ID<RandomButton seeder={randomSetID} onGenerate={onSetIDChange} /></>}\r\n                    onChange={onSetIDChange}\r\n                    placeholder=\"Set ID\"\r\n                    value={set_id}\r\n                />\r\n                {(isMonster && frame !== 'link' && frame !== 'token') && <div className=\"pendulum-container\">\r\n                    <div className=\"joined-row\">\r\n                        <Checkbox onChange={onIsPendulumChange} checked={isPendulum}>Is Pendulum?</Checkbox>\r\n                        {isPendulum && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>Mirror Scale?</Checkbox>}\r\n                    </div>\r\n                    {isPendulum && <>\r\n                        <div>\r\n                            <Input key=\"blue-scale\" addonBefore={<span>\r\n                                <span style={{ color: '#3b9dff' }}>Blue</span> Scale\r\n                            </span>}\r\n                            value={blue_scale}\r\n                            onChange={e => {\r\n                                onBlueScaleChange(e);\r\n                                if (isMirrorScale) onRedScaleChange(e);\r\n                            }} />\r\n                        </div>\r\n                        <div>\r\n                            <Input key=\"red-scale\" addonBefore={<span>\r\n                                <span style={{ color: '#ff6f6f' }}>Red</span> Scale\r\n                            </span>}\r\n                            value={red_scale}\r\n                            onChange={e => {\r\n                                if (isMirrorScale) onBlueScaleChange(e);\r\n                                onRedScaleChange(e);\r\n                            }} />\r\n                        </div>\r\n                        <div className=\"joined-row\" style={{ position: 'relative' }}>\r\n                            <TextArea key=\"pendulum-effect\"\r\n                                id=\"pendulum-effect\"\r\n                                ref={onlineCharPicker === 'pendulum-effect' ? ref as any : null}\r\n                                onFocus={() => setOnlineCharPicker('pendulum-effect')}\r\n                                allowClear\r\n                                placeholder=\"Pendulum effect\"\r\n                                value={displayPendulumEffect}\r\n                                onChange={ev => {\r\n                                    onPendulumEffectChange(ev);\r\n                                    setDisplayPendulumEffect(ev.target.value);\r\n                                }}\r\n                                rows={6}\r\n                            />\r\n                        </div>\r\n                    </>}\r\n                </div>}\r\n                <Input addonBefore=\"Type\"\r\n                    id=\"type\"\r\n                    ref={onlineCharPicker === 'type' ? ref as any : null}\r\n                    onFocus={() => setOnlineCharPicker('type')}\r\n                    allowClear\r\n                    className=\"hide-selected\"\r\n                    onChange={ev => {\r\n                        const value = ev.target.value;\r\n\r\n                        setDisplayTypeAbility(value);\r\n                        onTypeAbilityChange(value\r\n                            .split('/')\r\n                            .map(entry => entry.trim())\r\n                            .filter(entry => typeof entry === 'string' && entry.length > 0));\r\n                    }}\r\n                    placeholder=\"Type / Ability\"\r\n                    style={{ width: '100%' }}\r\n                    value={displayTypeAbility}\r\n                />\r\n                <TextArea key=\"effect\"\r\n                    id=\"card-effect\"\r\n                    ref={onlineCharPicker === 'card-effect' ? ref as any : null}\r\n                    onFocus={() => setOnlineCharPicker('card-effect')}\r\n                    allowClear\r\n                    placeholder=\"Card effect\"\r\n                    value={displayEffect}\r\n                    rows={10}\r\n                    onChange={ev => {\r\n                        onEffectChange(ev);\r\n                        setDisplayEffect(ev.target.value);\r\n                    }}\r\n                />\r\n                <div className=\"card-footer-input\">\r\n                    {isMonster\r\n                        ? <Input key=\"atk\"\r\n                            id=\"atk\"\r\n                            ref={onlineCharPicker === 'atk' ? ref as any : null}\r\n                            onFocus={() => setOnlineCharPicker('atk')}\r\n                            addonBefore=\"ATK\" allowClear value={atk} onChange={onATKChange} />\r\n                        : <div />}\r\n                    {isMonster\r\n                        ? <Input key=\"def\"\r\n                            id=\"def\"\r\n                            ref={onlineCharPicker === 'def' ? ref as any : null}\r\n                            onFocus={() => setOnlineCharPicker('def')}\r\n                            addonBefore=\"DEF\" allowClear value={def} onChange={onDEFChange} />\r\n                        : <div />\r\n                    }\r\n                    <Input\r\n                        id=\"password\"\r\n                        ref={onlineCharPicker === 'password' ? ref as any : null}\r\n                        onFocus={() => setOnlineCharPicker('password')}\r\n                        allowClear\r\n                        className=\"password-input\"\r\n                        addonBefore={<>Password<RandomButton seeder={randomPassword} onGenerate={onPasscodeChange} /></>}\r\n                        onChange={onPasscodeChange}\r\n                        placeholder=\"Password\"\r\n                        value={passcode}\r\n                    />\r\n                    <Checkbox\r\n                        className=\"input-1st\"\r\n                        onChange={onFirstEditionChange}\r\n                        checked={isFirstEdition}\r\n                    >\r\n                        Is 1st Edition?\r\n                    </Checkbox>\r\n                    <Input addonBefore=\"Creator\"\r\n                        id=\"creator\"\r\n                        ref={onlineCharPicker === 'creator' ? ref as any : null}\r\n                        onFocus={() => setOnlineCharPicker('creator')}\r\n                        allowClear\r\n                        className=\"creator-input\"\r\n                        onChange={onCreatorChange}\r\n                        placeholder=\"Creator\"\r\n                        value={creator}\r\n                    />\r\n                    <CheckboxTrain className=\"sticker-input checkbox-image-train\" value={sticker} onChange={onStickerChange} optionList={stickerButton}>\r\n                        <span>Sticker</span>\r\n                    </CheckboxTrain>\r\n                </div>\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageCropper\r\n                    noRedrawNumber={1}\r\n                    defaultExternalSource={picture}\r\n                    defaultCropInfo={defaultCropInfo}\r\n                    previewCanvasRef={receivingCanvasRef}\r\n                    onSourceChange={onPictureChange}\r\n                    onImageChange={onImageChange}\r\n                >\r\n                    {isLink\r\n                        ? <LinkMarkChooser defaultValue={link_map} onChange={onLinkMapChange} />\r\n                        : <div />}\r\n                </ImageCropper>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n};","import React from 'react';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { Popover } from 'antd';\r\nimport './app-header.scss';\r\n\r\nexport const AppHeader = React.memo(() => {\r\n    return <div className=\"app-header\">\r\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={48} />\r\n        <div className=\"app-description\">\r\n            <h1>Yugioh Carder <small>v{process.env.REACT_APP_VERSION ?? 'unknown'}</small></h1>\r\n            <div className=\"app-contribution\">\r\n                <span>GUI: <b>Lauqerm</b></span>\r\n                <span>Template: <b>Grezar</b> and others (<a\r\n                    href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\">Deviant Art</a>)</span>\r\n                <Popover overlayClassName=\"disclaimer-overlay\" content={<div className=\"disclaimer\">\r\n                    <h2>Disclaimer</h2>\r\n                    <ul>\r\n                        <li>This is a personal project, not an \"official\" card maker.</li>\r\n                        <li>I holds no liability for cards created by this app, including picture, card text and any product that related to it.</li>\r\n                        <li>I do not own any of Yu-Gi-Oh card layers and fonts use in this project.</li>\r\n                        <li>If you want to modify card layers, or use it in any public project, please contact <a\r\n                            href=\"https://www.deviantart.com/grezar\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\">Grezar</a> directly.</li>\r\n                    </ul>\r\n                </div>}>\r\n                    <ExclamationCircleOutlined className=\"disclaimer-icon\" />\r\n                </Popover>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n}, () => true);","export type FontSize = {\r\n    fontSize: number,\r\n    lineHeight: number,\r\n    lineCount: number,\r\n};\r\nexport type BoxSize = {\r\n\twidth: number,\r\n\ttop: number,\r\n\tleft: number,\r\n};\r\n\r\nexport const monsterFontList: FontSize[] = [\r\n    { fontSize: 17, lineHeight: 17, lineCount: 6 },\r\n    { fontSize: 14, lineHeight: 14, lineCount: 7 },\r\n    { fontSize: 12, lineHeight: 12, lineCount: 8 },\r\n    { fontSize: 11, lineHeight: 11, lineCount: 9 },\r\n    { fontSize: 10, lineHeight: 10, lineCount: 10 },\r\n    { fontSize: 9, lineHeight: 9, lineCount: 11 },\r\n    { fontSize: 8, lineHeight: 8, lineCount: 12 },\r\n];\r\nexport const monsterSizeList: BoxSize[] = [\r\n    { width: 463, top: 620, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n];\r\nexport const monsterVanillaFontList: FontSize[] = [\r\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 6 },\r\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 7 },\r\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 8 },\r\n];\r\n\r\nexport const pendulumFontList: FontSize[] = [\r\n    { fontSize: 16.41, lineHeight: 16.44, lineCount: 5 },\r\n    { fontSize: 16.41, lineHeight: 16.44, lineCount: 5 },\r\n];\r\nexport const pendulumSizeList: BoxSize[] = [\r\n    { width: 375, top: 504.5, left: 87.05 },\r\n    { width: 375, top: 504.5, left: 87.05 },\r\n];\r\n\r\nexport const stFontList: FontSize[] = [\r\n    { fontSize: 16.41, lineHeight: 16.74, lineCount: 8 },\r\n    { fontSize: 13.46, lineHeight: 14.28, lineCount: 10 },\r\n];\r\nexport const stSizeList: BoxSize[] = [\r\n    { width: 461, top: 601, left: 45 },\r\n    { width: 461, top: 601, left: 45 },\r\n];\r\n\r\nexport type TypeSize = {\r\n\ttop: number,\r\n\tleft: number,\r\n    bracketSize: {\r\n        char: number,\r\n        bracketSpace: number,\r\n        bracketOffsetTop: number,\r\n    },\r\n    upperCaseSize: number,\r\n    upperCaseScale: number,\r\n    lowerCaseSize: number,\r\n    lowerCaseScale: number,\r\n    spaceScale: number,\r\n    spaceSize: {\r\n        frontSpace: number,\r\n        char: number,\r\n        behindSpace: number,\r\n    },\r\n    iconSpace: number,\r\n};\r\nexport const typeSizeMap: Record<string, TypeSize> = {\r\n    small: {\r\n        top: 622,\r\n        left: 43,\r\n        bracketSize: {\r\n            char: 18.71,\r\n            bracketSpace: 8.51,\r\n            bracketOffsetTop: 1.64,\r\n        },\r\n        upperCaseSize: 20,\r\n        upperCaseScale: 1,\r\n        lowerCaseSize: 16,\r\n        lowerCaseScale: 1.1,\r\n        spaceScale: 1,\r\n        spaceSize: {\r\n            frontSpace: 5,\r\n            char: 21,\r\n            behindSpace: 15,\r\n        },\r\n        iconSpace: 0,\r\n    },\r\n    medium: {\r\n        top: 620.80,\r\n        left: 43,\r\n        bracketSize: {\r\n            char: 19.69,\r\n            bracketSpace: 8.51,\r\n            bracketOffsetTop: 1.64,\r\n        },\r\n        upperCaseSize: 21,\r\n        upperCaseScale: 1,\r\n        lowerCaseSize: 19,\r\n        lowerCaseScale: 0.95,\r\n        spaceScale: 1,\r\n        spaceSize: {\r\n            frontSpace: 5,\r\n            char: 23,\r\n            behindSpace: 15,\r\n        },\r\n        iconSpace: 0,\r\n    },\r\n    large: {\r\n        top: 126,\r\n        left: 494,\r\n        bracketSize: {\r\n            char: 25,\r\n            bracketSpace: 11,\r\n            bracketOffsetTop: 2,\r\n        },\r\n        upperCaseSize: 26,\r\n        upperCaseScale: 1.1,\r\n        lowerCaseSize: 23,\r\n        lowerCaseScale: 1,\r\n        spaceScale: 1.4,\r\n        spaceSize: {\r\n            frontSpace: 5,\r\n            char: 23,\r\n            behindSpace: 15,\r\n        },\r\n        iconSpace: 32,\r\n    },\r\n};","export const arrowPositionList = [\r\n    { top: 126, left: 46, width: 50, height: 51 },\r\n    { top: 116, left: 226, width: 99, height: 32 },\r\n    { top: 126, left: 453, width: 51, height: 51 },\r\n    { top: 305, left: 35, width: 33, height: 99 },\r\n    { top: 0, left: 0, width: 0, height: 0 },   // Middle\r\n    { top: 305, left: 482, width: 32, height: 99 },\r\n    { top: 534, left: 46, width: 50, height: 50 },\r\n    { top: 562, left: 226, width: 99, height: 33 },\r\n    { top: 534, left: 453, width: 51, height: 50 },\r\n];\r\n\r\nexport const foilPosition: Record<string, {\r\n    art: { left: number }\r\n}> = {\r\n    gold: {\r\n        art: {\r\n            left: 2,\r\n        }\r\n    },\r\n    platinum: {\r\n        art: {\r\n            left: 1,\r\n        }\r\n    },\r\n};","import { FontSize, monsterFontList, BoxSize, monsterSizeList } from '../const';\r\nimport { defaultTextStyle, TextStyle } from '../model';\r\nimport { splitEffect, createCondenser, quoteConvert } from '../util';\r\n\r\nexport const drawName = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    baseline: number,\r\n    maxWidth: number,\r\n    style: TextStyle,\r\n) => {\r\n    if (ctx) {\r\n        ctx.fillStyle = style.fillStyle;\r\n        if (style.hasShadow) {\r\n            ctx.shadowColor = style.shadowColor;\r\n            ctx.shadowOffsetY = style.shadowOffsetY;\r\n            ctx.shadowOffsetX = style.shadowOffsetX;\r\n            ctx.shadowBlur = style.shadowBlur;\r\n        }\r\n        const splittedText = quoteConvert(value).split(/([^&A-Za-z0-9\\-/\\s()])/g);\r\n        const contentWidth = splittedText\r\n            .reduce((prev, cur, index) => {\r\n                if (index % 2 === 0) ctx.font = '64.59px MatrixRegularSmallCaps';\r\n                else ctx.font = '54.59px matrix';\r\n\r\n                return prev + ctx.measureText(cur).width;\r\n            }, 0);\r\n\r\n        // ctx.fillText(value, edge, baseline, maxWidth);\r\n        if (contentWidth > 0) {\r\n            const condenseRatio = Math.min(maxWidth / contentWidth, 1);\r\n            ctx.scale(condenseRatio, 1);\r\n            splittedText\r\n                .reduce((prev, cur, index) => {\r\n                    if (index % 2 === 0) ctx.font = '64.59px MatrixRegularSmallCaps';\r\n                    else ctx.font = 'small-caps 54.59px matrix';\r\n    \r\n                    ctx.fillText(cur, prev / condenseRatio, baseline);\r\n                    return prev + ctx.measureText(cur).width * condenseRatio;\r\n                }, edge);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n        ctx.fillStyle = defaultTextStyle.fillStyle;\r\n        ctx.shadowColor = defaultTextStyle.shadowColor;\r\n        ctx.shadowOffsetY = defaultTextStyle.shadowOffsetY;\r\n        ctx.shadowOffsetX = defaultTextStyle.shadowOffsetX;\r\n        ctx.shadowBlur = defaultTextStyle.shadowBlur;\r\n    }\r\n};\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx) {\r\n        const digitList = `${value}`.split('');\r\n        let totalWidth = 0;\r\n\r\n        digitList.forEach(digit => {\r\n            totalWidth += (digit === '1' ? ctx.measureText(digit).width * 0.65 : ctx.measureText(digit).width);\r\n        });\r\n        let accLeft = edge - totalWidth / 2;\r\n\r\n        digitList.forEach(digit => {\r\n            ctx.fillText(digit, digit === '1' ? accLeft - 3 : accLeft, baseline);\r\n            accLeft += (digit === '1' ? ctx.measureText(digit).width * 0.65 : ctx.measureText(digit).width);\r\n        });\r\n    }\r\n};\r\n\r\nexport const drawEffect = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isPendulumEffect = false,\r\n    isNormal = false,\r\n    fontList: FontSize[] = monsterFontList,\r\n    sizeList: BoxSize[] = monsterSizeList,\r\n) => {\r\n    const normalizedContent = quoteConvert(content);\r\n    let effectIndexSize = 0;\r\n    if (ctx) {\r\n        const tolerantPerSentence: Record<string, number> = {\r\n            '1': 645,\r\n            '2': 665,\r\n            '3': 685,\r\n        };\r\n        const {\r\n            body: effectBody,\r\n            flavorCondition: effectFlavorCondition,\r\n            material: effectMaterial,\r\n        } = isPendulumEffect\r\n            ? {\r\n                body: normalizedContent,\r\n                flavorCondition: '',\r\n                material: '',\r\n            } : splitEffect(normalizedContent, isNormal);\r\n\r\n        const additionalLineCount = (effectMaterial.length > 0 ? 1 : 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\r\n        const sentencizeText = effectBody.split('\\n');\r\n        const bulletSymbol = '●';\r\n        const bulletSymbolWidth = 15;\r\n        const specialSymbol = '#@∞';\r\n        const breakableSymbol = '\\\\s-';\r\n        \r\n        const tokenizeR = new RegExp(`([${specialSymbol}${breakableSymbol}])`, 'g');\r\n        const specialSymbolReg = new RegExp(specialSymbol, 'g');\r\n\r\n        while(effectIndexSize < fontList.length) {\r\n            const { fontSize, lineHeight, lineCount } = fontList[effectIndexSize];\r\n            const { left, width: basedWidth, top } = sizeList[effectIndexSize];\r\n            const width = isNormal ? basedWidth - 2 : basedWidth;\r\n            const condenser = createCondenser();\r\n            let effectiveRatio = 1000;\r\n\r\n            const maxLine = Math.max(sentencizeText.length, lineCount);\r\n\r\n            ctx.font = `${isNormal ? 'italic' : ''} ${fontSize}px MatrixBook`;\r\n            ctx.textAlign = 'left';\r\n\r\n            const switchFont = (func: () => void) => {\r\n                const tempFont = ctx.font;\r\n                const largeSize = fontSize * 1.15;\r\n                ctx.font = tempFont.replace('MatrixBook', 'matrix').replace(`${fontSize}`, `${largeSize}`);\r\n                func();\r\n                ctx.font = tempFont;\r\n            };\r\n\r\n            // [CREATE SENTENCE ON EACH LINE]\r\n            let lineList: { text: string, width: number, isLast: boolean }[] = [];\r\n            const createSentence = () => {\r\n                lineList = [];\r\n\r\n                return sentencizeText.reduce((prev, curr) => {\r\n                    // The width is \"expand\" based on condense ratio so all the calculate does not need to be scaled\r\n                    const condenseRatio = condenser.getMedian() / 1000;\r\n                    const hypoWidth = width / condenseRatio;\r\n                    const tokenizedText = curr.split(tokenizeR);\r\n                    let currentLineCount = 1;\r\n                    let tokenSentence: string[] = [];\r\n                    let totalWidth = 0;\r\n\r\n                    for (let cnt = 0; cnt < tokenizedText.length; cnt++) {\r\n                        let tokenWidth = 0;\r\n                        /**\r\n                         * If bullet symbol is met, it will become \"wider\" based on condense ratio\r\n                         * so that when the whole line is condense, bullet symbol's width become\r\n                         * \"normal\", as if it were not condensed\r\n                         */\r\n                        if (tokenizedText[cnt] === bulletSymbol) tokenWidth = bulletSymbolWidth / condenseRatio;\r\n                        /**\r\n                         * Some special symbol required different font\r\n                         */\r\n                        else if (specialSymbolReg.test(tokenizedText[cnt])) {\r\n                            switchFont(() => {\r\n                                tokenWidth = ctx.measureText(tokenizedText[cnt]).width;\r\n                            });\r\n                        } else tokenWidth = ctx.measureText(tokenizedText[cnt]).width;\r\n                        if (totalWidth + tokenWidth > hypoWidth) {\r\n                            // If the next token cause overflow, wrap it down\r\n                            const fullString = tokenSentence.join('').trim();\r\n                            // Calculate the line width as if the bullet is wider\r\n                            const fullStringSplittedByBullet = fullString.split(bulletSymbol);\r\n                            lineList.push({\r\n                                text: fullString,\r\n                                width: fullStringSplittedByBullet.reduce((prev, curr) => prev + ctx.measureText(curr).width, 0)\r\n                                    + (fullStringSplittedByBullet.length - 1) * bulletSymbolWidth / condenseRatio,\r\n                                isLast: false,\r\n                            });\r\n                            totalWidth = tokenWidth;\r\n                            tokenSentence = [tokenizedText[cnt]];\r\n                            currentLineCount += 1;\r\n                        } else {\r\n                            totalWidth += tokenWidth;\r\n                            tokenSentence.push(tokenizedText[cnt]);\r\n                        }\r\n                    }\r\n\r\n                    const fullString = tokenSentence.join('').trim();\r\n                    const fullStringSplittedByBullet = fullString.split(bulletSymbol);\r\n                    lineList.push({\r\n                        text: fullString,\r\n                        width: fullStringSplittedByBullet.reduce((prev, curr) => prev + ctx.measureText(curr).width, 0)\r\n                            + (fullStringSplittedByBullet.length - 1) * bulletSymbolWidth / condenseRatio,\r\n                        isLast: true,\r\n                    });\r\n    \r\n                    return prev + currentLineCount;\r\n                }, 0) + additionalLineCount;\r\n            };\r\n\r\n            // [FIND SUITABLE CONDENSE RATIO]\r\n            while (condenser.getIterateCount() >= 0) {\r\n                if (condenser.getIterateCount() <= 0) {\r\n                    // When out of iteration, return the concluded median\r\n                    effectiveRatio = condenser.getMedian();\r\n                    break;\r\n                } else {\r\n                    const lineCount = createSentence();\r\n\r\n                    if (lineCount > maxLine) {\r\n                        // If overflow, lower the median and apply it\r\n                        condenser.searchDown();\r\n                    } else {\r\n                        if (condenser.getMedian() === 1000) break;\r\n                        else effectiveRatio = condenser.reverseSearch();\r\n                    }\r\n                }\r\n            }\r\n\r\n            // [START DRAWING]\r\n            const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number) => {\r\n                ctx.beginPath();\r\n                ctx.arc(edge + 7, baseline - 5.5, 5.5, 0, 2 * Math.PI, false);\r\n                ctx.fill();\r\n                ctx.lineWidth = 1;\r\n                ctx.strokeStyle = '#003300';\r\n                ctx.stroke();\r\n            };\r\n            if ((effectiveRatio < (tolerantPerSentence[`${sentencizeText.length}`] ?? tolerantPerSentence['3']))\r\n            && effectIndexSize < fontList.length - 1) {\r\n                effectIndexSize += 1;\r\n            } else {\r\n                ctx?.clearRect(0, 0, 549, 750);\r\n                let baseline = top + lineHeight;\r\n                if (effectMaterial.length > 0) {\r\n                    let actualWidth = ctx.measureText(effectMaterial).width;\r\n                    let condenseRatio = Math.min(width / actualWidth, 1);\r\n\r\n                    ctx.scale(condenseRatio, 1);\r\n                    ctx.fillText(effectMaterial, left / condenseRatio, baseline);\r\n                    baseline += lineHeight;\r\n                    ctx.scale(1 / condenseRatio, 1);\r\n                }\r\n\r\n                const sigmoidRatio = effectiveRatio / 1000; // Fancy way to force ratio in to 0-1 range\r\n                lineList.forEach(({\r\n                    text,\r\n                    width: actualWidth,\r\n                    isLast,\r\n                }) => {\r\n                    const condenseRatio = isLast\r\n                        ? Math.min(sigmoidRatio, 1)\r\n                        : width / actualWidth;\r\n\r\n                    if (condenseRatio <= 1) {\r\n                        ctx.scale(condenseRatio, 1);\r\n                        const splitter = new RegExp(`([${bulletSymbol}${specialSymbol}])`, 'g');\r\n                        const splittedText = text.split(splitter);\r\n\r\n                        splittedText.reduce((prev, cur, index) => {\r\n                            let edge = prev;\r\n\r\n                            // Normal text\r\n                            if (index % 2 === 0) {\r\n                                ctx.fillText(cur, edge / condenseRatio, baseline);\r\n                                edge += ctx.measureText(cur).width * condenseRatio;\r\n                            } else {\r\n                                // Special bullet\r\n                                if (cur === bulletSymbol) {\r\n                                    ctx.scale(1 / condenseRatio, 1);\r\n                                    drawBullet(ctx, edge, baseline);\r\n                                    edge += 15;\r\n                                    ctx.scale(condenseRatio, 1);\r\n                                } else {\r\n                                    switchFont(() => {\r\n                                        ctx.fillText(cur, edge / condenseRatio, baseline);\r\n                                        edge += ctx.measureText(cur).width * condenseRatio;\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            return edge;\r\n                        }, left);\r\n                        baseline += lineHeight;\r\n                        ctx.scale(1 / condenseRatio, 1);\r\n                    } else {\r\n                        const splitter = new RegExp(`([${bulletSymbol}${specialSymbol} ])`, 'g');\r\n                        const spaceSeparatedText = text.split(splitter);\r\n                        ctx.scale(1, 1);\r\n                        let nonSpaceWidth = 0;\r\n                        let spaceCount = 0;\r\n\r\n                        spaceSeparatedText.forEach(entry => {\r\n                            if (entry === ' ') spaceCount += 1;\r\n                            else if (entry === bulletSymbol) nonSpaceWidth += 15;\r\n                            else if (specialSymbolReg.test(entry)) {\r\n                                switchFont(() => nonSpaceWidth += ctx.measureText(entry).width);\r\n                            } else nonSpaceWidth += ctx.measureText(entry).width;\r\n                        });\r\n                        // Split text by \"space\", then distribute remaining width to those spaces, resulting in \"widen\" space\r\n                        const spaceWidth = spaceCount > 0 ? (width - nonSpaceWidth) / spaceCount : 0;\r\n\r\n                        spaceSeparatedText.reduce((prev, cur, index) => {\r\n                            let edge = prev;\r\n\r\n                            // Normal text\r\n                            if (index % 2 === 0) {\r\n                                ctx.fillText(cur, edge, baseline);\r\n                                edge += ctx.measureText(cur).width;\r\n                            } else {\r\n                                // Special bullet\r\n                                if (cur === bulletSymbol) {\r\n                                    drawBullet(ctx, edge, baseline);\r\n                                    edge += 15;\r\n                                } else if (cur === ' ') {\r\n                                    edge += spaceWidth;\r\n                                } else {\r\n                                    switchFont(() => {\r\n                                        ctx.fillText(cur, edge, baseline);\r\n                                        edge += ctx.measureText(cur).width;\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            return edge;\r\n                        }, left);\r\n                        baseline += lineHeight;\r\n                    }\r\n                });\r\n\r\n                if (effectFlavorCondition.length > 0) {\r\n                    let actualWidth = ctx.measureText(effectFlavorCondition).width;\r\n                    let condenseRatio = Math.min(width / actualWidth, 1);\r\n\r\n                    ctx.font = `${fontSize}px MatrixBook`;\r\n                    ctx.scale(condenseRatio, 1);\r\n                    ctx.fillText(effectFlavorCondition, left / condenseRatio, baseline);\r\n                    baseline += lineHeight;\r\n                    ctx.scale(1 / condenseRatio, 1);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return effectIndexSize;\r\n    }\r\n    return effectIndexSize;\r\n};","export const measureWithSymbol = (\r\n    ctx: CanvasRenderingContext2D,\r\n    content: string,\r\n    symbol: string,\r\n    maxWidth: number,\r\n) => {\r\n    const splittedContent = content.split(symbol);\r\n    const splittedWidth = splittedContent.map(entry => ctx.measureText(entry).width);\r\n    const symbolWidth = ctx.measureText(symbol).width;\r\n    const totalCondensableWidth = splittedWidth.reduce((prev, curr) => prev + curr, 0);\r\n    const returnBundle = {\r\n        splittedContent,\r\n        splittedWidth,\r\n        symbolWidth,\r\n        totalCondensableWidth,\r\n        condenseRatio: 1,\r\n    };\r\n\r\n    if (totalCondensableWidth > 0) {\r\n        // Calculate as if the \"symbol\" always appear as full width\r\n        returnBundle.condenseRatio = Math.min((maxWidth - (splittedWidth.length - 1) * symbolWidth) / totalCondensableWidth, 1);\r\n    }\r\n\r\n    return returnBundle;\r\n};\r\n\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx) {\r\n        ctx.textAlign = 'left';\r\n        const charList = str.split('');\r\n        let curLeft = edge;\r\n\r\n        charList.forEach(char => {\r\n            ctx.fillText(char, curLeft, baseline);\r\n            curLeft += ctx.measureText(char).width * (1 + (letterSpacingRatio / 2));\r\n        });\r\n\r\n        return curLeft;\r\n    }\r\n    return 0;\r\n};\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx) {\r\n        ctx.textAlign = 'right';\r\n        const charList = str.split('');\r\n        let curRight = edge;\r\n\r\n        charList.forEach((c, index) => {\r\n            const char = charList[charList.length - index - 1];\r\n            ctx.fillText(char, curRight, baseline);\r\n            curRight -= ctx.measureText(char).width * (1 + (letterSpacingRatio / 2));\r\n        });\r\n        return curRight;\r\n    };\r\n    return edge;\r\n};\r\n\r\nexport const fillTextLeftWithLimit = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    edge: number,\r\n    baseline: number,\r\n    maxWidth: number,\r\n) => {\r\n    if (ctx) {\r\n        const contentWidth = ctx.measureText(content).width;\r\n\r\n        if (contentWidth > 0) {\r\n            const condenseRatio = Math.min(maxWidth / contentWidth, 1);\r\n            ctx.scale(condenseRatio, 1);\r\n            ctx.fillText(content, edge / condenseRatio, baseline);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n            ctx.fillStyle = '#000000';\r\n        }\r\n    }\r\n};","import { fillTextRightWithSpacing, measureWithSymbol } from './util';\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    edge = 99,\r\n) => {\r\n    if (ctx) {\r\n        ctx.font = 'bold 16px palatino-linotype-bold';\r\n\r\n        let left = edge;\r\n        ctx.fillText('1', left, 777);\r\n        left += ctx.measureText('1').width - 2;\r\n\r\n        ctx.font = 'bold 12px palatino-linotype-bold';\r\n        ctx.fillText('st', left, 777 - 5);\r\n        left += ctx.measureText('st').width;\r\n\r\n        ctx.font = 'bold 15px palatino-linotype-bold';\r\n        ctx.fillText(' Edition', left, 777);\r\n    }\r\n};\r\n\r\nexport const drawCreatorText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n) => {\r\n    if (ctx) {\r\n        ctx.font = '16px stone-serif-regular';\r\n\r\n        const uncondensableSymbol = '©';\r\n        const {\r\n            splittedContent,\r\n            splittedWidth,\r\n            symbolWidth,\r\n            condenseRatio,\r\n        } = measureWithSymbol(ctx, content, uncondensableSymbol, 257);\r\n\r\n        if (condenseRatio < 1) {\r\n            ctx.textAlign = 'left';\r\n            ctx.scale(condenseRatio, 1);\r\n            splittedContent.reduce((prev, cur, index) => {\r\n                // Fill condense text at the current edge\r\n                ctx.fillText(cur, prev / condenseRatio, 777);\r\n                // Increase edge equal to the draw text (condense ratio factored)\r\n                let nextEdge = prev + splittedWidth[index] * condenseRatio;\r\n                if (index < splittedContent.length - 1) {\r\n                    // Restore 1:1 ratio\r\n                    ctx.scale(1 / condenseRatio, 1);\r\n                    // Increase edge equal to the character \"©\" (condense ratio is 1 so no factored)\r\n                    ctx.fillText(uncondensableSymbol, nextEdge, 777);\r\n                    nextEdge += symbolWidth;\r\n                    // Restore condense ratio\r\n                    ctx.scale(condenseRatio, 1);\r\n                }\r\n                return nextEdge;\r\n            }, 496 - 257);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        } else {\r\n            ctx.textAlign = 'right';\r\n            fillTextRightWithSpacing(ctx, content, -0.15, 496 / condenseRatio, 777);\r\n        }\r\n        ctx.textAlign = 'left';\r\n    }\r\n};\r\n\r\nexport const drawAD = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    $value: string | number,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx) {\r\n        ctx.textAlign = 'left';\r\n        const tokenizedText = `${$value}`.split('?');\r\n\r\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n            ctx.font = '25px MatrixBoldSmallCaps';\r\n            let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n            if (index < tokenizedText.length - 1) {\r\n                ctx.font = '25px matrix';\r\n                nextWidth += ctx.measureText('?').width;\r\n            }\r\n\r\n            return nextWidth;\r\n        }, 0);\r\n\r\n        if (totalWidth > 0) {\r\n            const condenseRatio = Math.min(49.94 / totalWidth, 1);\r\n\r\n            ctx.scale(condenseRatio, 1);\r\n            tokenizedText.reduce((prev, curr, index, arr) => {\r\n                const curText = arr[arr.length - 1 - index];\r\n                let nextEdge = prev;\r\n                ctx.font = '25px MatrixBoldSmallCaps';\r\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = 'bold 25px matrix';\r\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\r\n                }\r\n    \r\n                return nextEdge;\r\n            }, edge + 49.94);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n    }\r\n};","import { TypeSize } from '../const';\r\n\r\ntype Aligment = 'left' | 'right';\r\nexport const drawBracketTemplate = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    size: TypeSize,\r\n    alignment: Aligment,\r\n) => {\r\n    return (edge: number) => {\r\n        if (ctx) {\r\n            const {\r\n                top: baseline,\r\n                bracketSize: { char: bracketChar, bracketOffsetTop }\r\n            } = size;\r\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\r\n\r\n            ctx.font = `bold ${bracketChar}px stone-serif-bold`;\r\n            ctx.textAlign = alignment;\r\n            ctx.fillText(content, edge, baseline - bracketOffsetTop);\r\n            return edge + ctx.measureText(content).width * alignmentOffset;\r\n        }\r\n        return edge;\r\n    };\r\n};\r\nexport const drawIconSpaceTemplate = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    size: TypeSize,\r\n    alignment: Aligment,\r\n) => {\r\n    return (edge: number) => {\r\n        if (ctx) {\r\n            const { iconSpace } = size;\r\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\r\n\r\n            return edge + iconSpace * alignmentOffset;\r\n        }\r\n        return edge;\r\n    };\r\n};\r\nexport const drawBracketSpaceTemplate = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    size: TypeSize,\r\n    alignment: Aligment,\r\n) => {\r\n    return (edge: number) => {\r\n        if (ctx) {\r\n            const { top: baseline, bracketSize: { bracketSpace } } = size;\r\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\r\n\r\n            ctx.font = `bold ${bracketSpace}px stone-serif-bold`;\r\n            ctx.textAlign = alignment;\r\n            ctx.fillText(content, edge, baseline);\r\n            return edge + ctx.measureText(content).width * alignmentOffset;\r\n        }\r\n        return edge;\r\n    };\r\n};\r\nexport const drawTextTemplate = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isLast = false,\r\n    size: TypeSize,\r\n    alignment: Aligment,\r\n) => {\r\n    const {\r\n        top: baseline,\r\n        spaceSize: { frontSpace, char: spaceChar, behindSpace },\r\n        upperCaseScale,\r\n        upperCaseSize,\r\n        lowerCaseScale,\r\n        lowerCaseSize,\r\n        spaceScale,\r\n    } = size;\r\n    const alignmentOffset = alignment === 'left' ? 1 : -1;\r\n    const drawSlashTemplate = (\r\n        ctx: CanvasRenderingContext2D,\r\n        baseOffset: number,\r\n    ) => {\r\n        let totalOffset = baseOffset;\r\n        ctx.font = `bold ${frontSpace}px stone-serif-bold`;\r\n        ctx.fillText(' ', totalOffset, baseline);\r\n        totalOffset += ctx.measureText(' ').width * alignmentOffset;\r\n\t\r\n        ctx.font = `oblique bold ${spaceChar}px stone-serif-bold`;\r\n        ctx.scale(0.65, 1);\r\n        ctx.fillText('/', totalOffset / 0.65, baseline);\r\n        totalOffset += ctx.measureText('/').width * 0.65 * alignmentOffset;\r\n        ctx.scale(1 / 0.65, 1);\r\n\t\r\n        ctx.font = `bold ${behindSpace}px stone-serif-bold`;\r\n        ctx.fillText(' ', totalOffset, baseline);\r\n        totalOffset += ctx.measureText(' ').width * alignmentOffset;\r\n        return totalOffset;\r\n    };\r\n\r\n    return (left: number) => {\r\n        let totalOffset = left;\r\n        if (ctx) {\r\n            ctx.textAlign = alignment;\r\n\r\n            if (!isLast && alignment === 'right') totalOffset = drawSlashTemplate(ctx, totalOffset);\r\n            content\r\n                .split('')\r\n                .forEach((c, index, arr) => {\r\n                    const char = alignment === 'left' ? arr[index] : arr[arr.length - 1 - index];\r\n                    if (/[A-Z]/.test(char)) {\r\n                        ctx.font = `bold ${upperCaseSize}px stone-serif-bold`;\r\n                        ctx.scale(upperCaseScale, 1);\r\n                        ctx.fillText(char, totalOffset / upperCaseScale, baseline);\r\n                        totalOffset += ctx.measureText(char).width * upperCaseScale * alignmentOffset;\r\n                        ctx.scale(1 / upperCaseScale, 1);\r\n                    } else if (/\\s/.test(char)) {\r\n                        ctx.font = `bold ${lowerCaseSize}px stone-serif-bold`;\r\n                        ctx.scale(spaceScale, 1);\r\n                        ctx.fillText(char, totalOffset / spaceScale, baseline);\r\n                        totalOffset += ctx.measureText(char).width * spaceScale * alignmentOffset;\r\n                        ctx.scale(1 / spaceScale, 1);\r\n                    } else {\r\n                        const upperChar = char.toLocaleUpperCase();\r\n                        ctx.font = `bold ${lowerCaseSize}px stone-serif-bold`;\r\n                        ctx.scale(lowerCaseScale, 1);\r\n                        ctx.fillText(upperChar, totalOffset / lowerCaseScale, baseline);\r\n                        totalOffset += ctx.measureText(upperChar).width * lowerCaseScale * alignmentOffset;\r\n                        ctx.scale(1 / lowerCaseScale, 1);\r\n                    }\r\n                });\r\n            if (!isLast && alignment === 'left') totalOffset = drawSlashTemplate(ctx, totalOffset);\r\n            return totalOffset;\r\n        }\r\n        return totalOffset;\r\n    };\r\n};","const imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n}> = {};\r\n\r\nexport const drawFromSource = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number),\r\n    sy: number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    if (!ctx) return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const img = imageCacheMap[source].image;\r\n            let normalizedX = typeof sx === 'number' ? sx : sx(img);\r\n            let normalizedY = typeof sy === 'number' ? sy : sy(img);\r\n            ctx.drawImage(img, normalizedX, normalizedY);\r\n            resolve(true);\r\n        } else {\r\n            const img = new Image();\r\n            img.src = process.env.PUBLIC_URL + source;\r\n            img.onload = () => {\r\n                let normalizedX = typeof sx === 'number' ? sx : sx(img);\r\n                let normalizedY = typeof sy === 'number' ? sy : sy(img);\r\n                ctx.drawImage(img, normalizedX, normalizedY);\r\n                imageCacheMap[source].ready = true;\r\n                resolve(true);\r\n            };\r\n            img.onerror = () => {\r\n                resolve(false);\r\n            };\r\n            imageCacheMap[source] = {\r\n                image: img,\r\n                ready: false,\r\n            };\r\n        }\r\n    });\r\n};\r\n\r\nexport const drawFromSourceWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number),\r\n    sy: number | ((image: HTMLImageElement) => number),\r\n    dw: number, dh: number,\r\n) => {\r\n    if (!ctx) return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const img = imageCacheMap[source].image;\r\n            let normalizedX = typeof sx === 'number' ? sx : sx(img);\r\n            let normalizedY = typeof sy === 'number' ? sy : sy(img);\r\n            ctx.drawImage(img, normalizedX, normalizedY, dw, dh);\r\n            resolve(true);\r\n        } else {\r\n            const img = new Image();\r\n            img.src = process.env.PUBLIC_URL + source;\r\n            img.onload = () => {\r\n                let normalizedX = typeof sx === 'number' ? sx : sx(img);\r\n                let normalizedY = typeof sy === 'number' ? sy : sy(img);\r\n                ctx.drawImage(img, normalizedX, normalizedY, dw, dh);\r\n                imageCacheMap[source].ready = true;\r\n                resolve(true);\r\n            };\r\n            img.onerror = () => {\r\n                resolve(false);\r\n            };\r\n            imageCacheMap[source] = {\r\n                image: img,\r\n                ready: false,\r\n            };\r\n        }\r\n    });\r\n};","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport './app.scss';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n    Card,\r\n    defaultMonster,\r\n    defaultTextStyle,\r\n    foilStyleMap,\r\n    iconList,\r\n} from './model';\r\nimport {\r\n    checkLink,\r\n    checkMonster,\r\n    checkNormal,\r\n    checkXyz,\r\n    getCardFrame,\r\n} from './util';\r\nimport { AppHeader, CardInputPanel } from './page';\r\nimport {\r\n    arrowPositionList,\r\n    foilPosition,\r\n    pendulumFontList,\r\n    pendulumSizeList,\r\n    stFontList,\r\n    stSizeList,\r\n    typeSizeMap,\r\n} from './const';\r\nimport {\r\n    draw1stEdition,\r\n    drawAD,\r\n    drawBracketSpaceTemplate,\r\n    drawBracketTemplate,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawIconSpaceTemplate,\r\n    drawName,\r\n    drawScale,\r\n    drawTextTemplate,\r\n    fillTextLeftWithSpacing,\r\n    fillTextRightWithSpacing,\r\n    drawFromSource,\r\n    drawFromSourceWithSize,\r\n} from './draw';\r\nimport WebFont from 'webfontloader';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nfunction App() {\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [currentCard, setCard] = useState<Card>(defaultMonster);\r\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const drawCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const artCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const specialFrameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const subFamilyCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const attributeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const ADCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdRef = useRef<HTMLCanvasElement>(null);\r\n    const passcodeRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerRef = useRef<HTMLCanvasElement>(null);\r\n\r\n    const {\r\n        frame, foil,\r\n        name, nameStyleType, nameStyle,\r\n        pictureCrop,\r\n        effect,\r\n        type_ability,\r\n        isPendulum, pendulum_effect, blue_scale, red_scale,\r\n        atk, def, link_map,\r\n        attribute,\r\n        subFamily,\r\n        star,\r\n        set_id,\r\n        passcode, isFirstEdition, creator, sticker,\r\n    } = currentCard;\r\n    const isNormal = checkNormal(currentCard);\r\n    const isXyz = checkXyz(currentCard);\r\n    const isLink = checkLink(currentCard);\r\n    const isMonster = checkMonster(currentCard);\r\n    const pendulumSize = 'medium';\r\n\r\n    const drawingPipeline = useRef<Record<string, () => Promise<any>>>({\r\n        frame: () => Promise.resolve(),\r\n        star: () => Promise.resolve(),\r\n        attribute: () => Promise.resolve(),\r\n        specialFrame: () => Promise.resolve(),\r\n        sticker: () => Promise.resolve(),\r\n    });\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const ctx = frameCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.frame = async () => {\r\n            ctx?.clearRect(0, 0, 549, 800);\r\n            const cardType = getCardFrame(frame);\r\n            const hasFoil = foil !== 'normal';\r\n\r\n            await drawFromSource(ctx, `/asset/image/frame/frame-${cardType}.png`, 0, 0);\r\n            if (hasFoil) {\r\n                const { art } = foilPosition[foil];\r\n\r\n                await drawFromSource(ctx, `/asset/image/frame/frame-art-${foil}.png`, art.left, 120);\r\n                await drawFromSource(ctx, `/asset/image/frame/frame-effect-${foil}.png`, 0, 580);\r\n            }\r\n        };\r\n    }, [foil, frame]);\r\n\r\n    useEffect(() => {\r\n        const ctx = artCanvasRef.current?.getContext('2d');\r\n        const previewCtx = previewCanvasRef.current;\r\n        if (previewCtx && ctx) {\r\n            ctx.clearRect(0, 0, 548, 650);\r\n            if (isPendulum) {\r\n                ctx.drawImage(previewCtx, 38, 144, 474, 470);\r\n            } else {\r\n                ctx.drawImage(previewCtx, 67, 147, 416, 416);\r\n            }\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isPendulum, imageChangeCount]);\r\n\r\n    useEffect(() => {\r\n        const ctx = specialFrameCanvasRef.current?.getContext('2d');\r\n        \r\n        drawingPipeline.current.specialFrame = async () => {\r\n            ctx?.clearRect(0, 0, 549, 800);\r\n            const hasFoil = foil !== 'normal';\r\n\r\n            const cardType = getCardFrame(frame);\r\n            if (isPendulum && !isLink) {\r\n                if (!isXyz) await drawFromSource(ctx, `/asset/image/pendulum/overlay-pendulum-${cardType}.png`, 0, 0);\r\n                await drawFromSource(ctx, `/asset/image/frame/frame-pendulum-${pendulumSize}.png`, 0, 0);\r\n                if (hasFoil) await drawFromSource(ctx, `/asset/image/frame/frame-pendulum-${pendulumSize}-${foil}.png`, 0, 0);\r\n            }\r\n\r\n            const foiledBorder = !hasFoil ? '/asset/image/frame/frame-border.png' : `/asset/image/frame/frame-border-${foil}.png`;\r\n            await drawFromSource(ctx, foiledBorder, 0, 0);\r\n            if (!isPendulum && isLink) {\r\n                if (hasFoil) await drawFromSource(ctx, `./asset/image/link/link-overlay-${foil}.png`, 0, 110);\r\n                else await drawFromSource(ctx, '/asset/image/link/link-overlay.png', 66, 146);\r\n                if (hasFoil) await drawFromSource(ctx, `/asset/image/link/link-overlay-arrow-${foil}.png`, 0, 110);\r\n\r\n                await Promise.all(link_map\r\n                    .map(entry => {\r\n                        const { left, top, height, width } = arrowPositionList[parseInt(entry) - 1];\r\n                        if (hasFoil) return drawFromSourceWithSize(ctx, `/asset/image/link/link-arrow-${entry}-${foil}.png`, left, top, width, height);\r\n                        else return drawFromSourceWithSize(ctx, `/asset/image/link/link-arrow-${entry}.png`, left, top, width, height);\r\n                    })\r\n                );\r\n                if (ctx) {\r\n                    ctx.textAlign = 'right';\r\n                    ctx.scale(1.2, 1);\r\n                    ctx.font = 'bold 24px Yugioh Rush Duel Numbers V4';\r\n                    ctx.fillText(`${link_map.length}`, 505 / 1.2, 746);\r\n                    ctx.scale(1 / 1.2, 1);\r\n                    ctx.textAlign = 'left';\r\n                }\r\n            }\r\n        };\r\n    }, [foil, frame, isLink, isPendulum, isXyz, link_map]);\r\n\r\n    useEffect(() => {\r\n        const ctx = attributeCanvasRef.current?.getContext('2d');\r\n        drawingPipeline.current.attribute = () => {\r\n            ctx?.clearRect(0, 0, 549, 100);\r\n\r\n            return drawFromSource(ctx, `/asset/image/attribute/attr-${attribute.toLowerCase()}.png`, 458, 37);\r\n        };\r\n    }, [attribute]);\r\n\r\n    useEffect(() => {\r\n        const ctx = subFamilyCanvasRef.current?.getContext('2d');\r\n        drawingPipeline.current.star = () => {\r\n            ctx?.clearRect(0, 0, 549, 150);\r\n            if (isMonster && !isLink) {\r\n                let counter = Math.min(13, star ?? 0);\r\n                let type = isXyz ? 'rank' : 'level';\r\n                let offset = 0 - (34 + 2.3636);\r\n                let totalWidth = 34 * counter + 2.3636 * (counter - 1);\r\n                let edge = counter <= 12\r\n                    ? isXyz\r\n                        ? 57 - 34\r\n                        : 492\r\n                    : isXyz\r\n                        ? (549 - totalWidth) / 2 - 34\r\n                        : (549 - totalWidth) / 2 + totalWidth;\r\n    \r\n                return Promise.all([...Array(counter)]\r\n                    .map(() => {\r\n                        offset += (34 + 2.3636);\r\n                        return drawFromSource(\r\n                            ctx,\r\n                            `/asset/image/sub-family/subfamily-${type}.png`,\r\n                            edge + (34 + offset) * (isXyz ? 1 : -1),\r\n                            99,\r\n                        );\r\n                    })\r\n                );\r\n            } else if (!isMonster) {\r\n                const normalizedSubFamily = subFamily.toUpperCase();\r\n                const hasSTIcon = normalizedSubFamily !== 'NO ICON'\r\n                        && iconList.includes(normalizedSubFamily);\r\n    \r\n                return hasSTIcon\r\n                    ? drawFromSourceWithSize(ctx, `/asset/image/sub-family/subfamily-${normalizedSubFamily.toLowerCase()}.png`,\r\n                        (image) => 491 - image.naturalWidth - 7,\r\n                        103,\r\n                        29, 29)\r\n                    : new Promise(resolve => resolve(true));\r\n            };\r\n            return new Promise(resolve => resolve(true));\r\n        };\r\n    }, [isLink, isMonster, isXyz, star, subFamily]);\r\n\r\n    useEffect(() => {\r\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 600);\r\n        if (ctx && isPendulum) {\r\n            let fontSize = 43;\r\n            let top = 532 + fontSize;\r\n\r\n            ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n            ctx.textAlign = 'left';\r\n\r\n            drawScale(ctx, blue_scale ?? 0, 57, top);\r\n            drawScale(ctx, red_scale ?? 0, 493, top);\r\n        }\r\n    }, [isInitializing, blue_scale, isPendulum, red_scale]);\r\n\r\n    useEffect(() => {\r\n        const ctx = nameCanvasRef.current?.getContext('2d');\r\n        if (ctx) {\r\n            ctx.clearRect(0, 0, 549, 100);\r\n            ctx.textAlign = 'left';\r\n            const style = nameStyleType === 'auto'\r\n                ? foil !== 'normal'\r\n                    ? foilStyleMap[foil] ?? defaultTextStyle\r\n                    : { ...defaultTextStyle, fillStyle: isXyz ? '#ffffff' : '#000000' }\r\n                : nameStyle;\r\n\r\n            drawName(ctx, name, 40.52, 78, 409, style);\r\n        }\r\n    }, [foil, isInitializing, isXyz, name, nameStyle, nameStyleType]);\r\n\r\n    useEffect(() => {\r\n        const ctx = ADCanvasRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 800);\r\n        if (isMonster) {\r\n            drawAD(ctx, atk, 343.51, 747);\r\n            if (!isLink) {\r\n                drawAD(ctx, def, 454.93, 747);\r\n            }\r\n        }\r\n    }, [isInitializing, atk, def, isLink, isMonster]);\r\n\r\n    useEffect(() => {\r\n        const ctx = setIdRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 800);\r\n        if (ctx) {\r\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\r\n            else ctx.fillStyle = '#000';\r\n            ctx.font = '15px stone-serif-regular';\r\n\r\n            if (isPendulum) {\r\n                fillTextLeftWithSpacing(ctx, set_id, -0.1, 45, 746);\r\n            } else if (isLink) {\r\n                fillTextLeftWithSpacing(ctx, set_id, -0.1, 364, 590);\r\n            } else fillTextRightWithSpacing(ctx, set_id, -0.1, 492, 589);\r\n        }\r\n    }, [isInitializing, isLink, isPendulum, isXyz, set_id]);\r\n\r\n    useEffect(() => {\r\n        const ctx = passcodeRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 800);\r\n        if (ctx) {\r\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\r\n            else ctx.fillStyle = '#000';\r\n            ctx.font = '15px stone-serif-regular';\r\n\r\n            const endOfPasscode = fillTextLeftWithSpacing(ctx, passcode, 0.1, 25, 777);\r\n            if (isFirstEdition) {\r\n                if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\r\n                else ctx.fillStyle = '#000';\r\n\r\n                draw1stEdition(ctx, endOfPasscode + 10);\r\n            }\r\n        }\r\n    }, [isFirstEdition, isInitializing, isLink, isPendulum, isXyz, passcode]);\r\n\r\n    useEffect(() => {\r\n        const ctx = creatorRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 800);\r\n        if (ctx) {\r\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\r\n            else ctx.fillStyle = '#000';\r\n            \r\n            drawCreatorText(ctx, creator);\r\n        }\r\n    }, [isInitializing, isLink, isPendulum, isXyz, creator]);\r\n\r\n    useEffect(() => {\r\n        const ctx = stickerRef.current?.getContext('2d');\r\n        drawingPipeline.current.sticker = () => {\r\n            ctx?.clearRect(0, 0, 549, 800);\r\n\r\n            return drawFromSource(ctx, `/asset/image/sticker/sticker-${sticker.toLowerCase()}.png`, 499, 750);\r\n        };\r\n    }, [sticker]);\r\n\r\n    const drawTypeAbility  = useCallback((\r\n        ctx: CanvasRenderingContext2D | null | undefined,\r\n        textSize: 'small' | 'medium' | 'large',\r\n        alignment: 'left' | 'right' = 'left',\r\n    ) => {\r\n        if (ctx) {\r\n            ctx?.clearRect(0, 0, 549, 700);\r\n            const size = typeSizeMap[textSize] ?? typeSizeMap['medium'];\r\n            const { left } = size;\r\n            const normalizedSubFamily = subFamily.toUpperCase();\r\n            const instructionList = [\r\n                drawBracketTemplate(ctx, '[', size, alignment),\r\n                drawBracketSpaceTemplate(ctx, ' ', size, alignment),\r\n                ...type_ability.map((entry, index) => drawTextTemplate(\r\n                    ctx,\r\n                    entry,\r\n                    index === type_ability.length - 1,\r\n                    size, alignment)),\r\n                textSize === 'large'\r\n                    ? normalizedSubFamily === 'NO ICON'\r\n                        ? (edge: number) => edge + 4 * (alignment === 'left' ? 1 : -1)\r\n                        : drawIconSpaceTemplate(ctx, size, alignment)\r\n                    : (edge: number) => edge,\r\n                drawBracketTemplate(ctx, ']', size, alignment),\r\n            ];\r\n            const totalLeft = (alignment === 'left'\r\n                ? instructionList\r\n                : instructionList.reverse()).reduce((prev, curr) => {\r\n                return curr(prev);\r\n            }, left);\r\n            ctx.textAlign = 'left';\r\n            if (totalLeft > 508 && textSize === 'medium') drawTypeAbility(ctx, 'small', alignment);\r\n        }\r\n    }, [subFamily, type_ability]);\r\n    useEffect(() => {\r\n        const ctx = effectCanvasRef.current?.getContext('2d');\r\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 750);\r\n        if (isMonster) {\r\n            const effectIndexSize = drawEffect(ctx, effect, false, isNormal);\r\n            drawTypeAbility(typeCtx, effectIndexSize === 0\r\n                ? 'medium'\r\n                : 'small');\r\n        } else {\r\n            drawEffect(\r\n                ctx,\r\n                effect,\r\n                false,\r\n                false,\r\n                stFontList,\r\n                stSizeList,\r\n            );\r\n            drawTypeAbility(typeCtx, 'large', 'right');\r\n        }\r\n    }, [isInitializing, drawTypeAbility, effect, isMonster, isNormal]);\r\n    useEffect(() => {\r\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 600);\r\n        if (isMonster && isPendulum) {\r\n            drawEffect(\r\n                ctx,\r\n                pendulum_effect,\r\n                true,\r\n                false,\r\n                pendulumFontList,\r\n                pendulumSizeList,\r\n            );\r\n        }\r\n    }, [isInitializing, isMonster, isPendulum, pendulum_effect]);\r\n\r\n    // const drawRefrenceImage = useCallback(async (ctx: CanvasRenderingContext2D | null | undefined) => {\r\n    //     let leftOffset = -5;\r\n    //     let topOffset = 150;\r\n    // let leftOffset = -4;\r\n    // let topOffset = 300;\r\n    // let leftOffset = -300;\r\n    // let topOffset = -7;\r\n    // let leftOffset = -1;\r\n    // let topOffset = 100;\r\n    // await drawFromSourceWithSize(ctx, '/asset/image/MP19-EN-C-1E.png', -leftOffset, -topOffset, 541, 800 * (541 / 549));\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        const ctx = drawCanvasRef.current?.getContext('2d');\r\n        if (ctx) {\r\n            const pixelRatio = window.devicePixelRatio;\r\n            ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            ctx.clearRect(0, 0, 549, 800);\r\n        }\r\n        \r\n        // let fontLoaded = false;\r\n        WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'stone-serif-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'MatrixBook',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixRegularSmallCaps',\r\n                    'Yugioh Rush Duel Numbers V4',\r\n                ],\r\n                urls: ['asset/font.css']\r\n            },\r\n            active: () => {\r\n                const localCardVersion = window.localStorage.getItem('card-version');\r\n                const localCardData = window.localStorage.getItem('card-data');\r\n\r\n                if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n                    setCard(JSON.parse(localCardData));\r\n                }\r\n                setInitializing(false);\r\n            },\r\n            inactive: () => {\r\n                setError('Font could not be loaded');\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, []);\r\n\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        queuedPipeline: false,\r\n    });\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        if (isInitializing === false) {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n        }\r\n        // localStorage.setItem('card-created', new Date().toISOString());\r\n\r\n        /**\r\n         * Run export pipeline\r\n         * - While it is running, every effect just mark pipeline as queued, then wait the current pipeline\r\n         * - If the pipeline is complete and there is no effect, run another pipeline and remove the queue\r\n         */\r\n        (async () => {\r\n            const canvasRef = drawCanvasRef.current;\r\n            if (canvasRef) {\r\n                document.querySelector('#export-canvas-guard')?.setAttribute('style', '');\r\n                exportRef.current.queuedPipeline = true;\r\n                await exportRef.current.currentPipeline;\r\n\r\n                if (relevant) {\r\n                    exportRef.current.currentPipeline = onExport({ isPendulum });\r\n                    exportRef.current.queuedPipeline = false;\r\n\r\n                    await exportRef.current.currentPipeline;\r\n                    if (relevant) {\r\n                        document.querySelector('#export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                    }\r\n                }\r\n                // onExport({ isPendulum })\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    const onExport = useRef(async (exportProps: {\r\n        isPendulum: boolean,\r\n    }) => {\r\n        const {\r\n            isPendulum = false\r\n        } = exportProps;\r\n        const canvasRef = drawCanvasRef.current;\r\n        const exportCtx = canvasRef?.getContext('2d');\r\n        const generateLayer = (canvasLayer: React.RefObject<HTMLCanvasElement>, ctx: CanvasRenderingContext2D | null | undefined) => {\r\n            return new Promise<boolean>(resolve => {\r\n                if (canvasLayer.current && ctx) {\r\n                    const layerData = canvasLayer.current.toDataURL('image/png');\r\n\r\n                    if (layerData) {\r\n                        var layer = new Image();\r\n                        layer.src = layerData;\r\n                        layer.onload = () => {\r\n                            ctx.drawImage(layer, 0, 0);\r\n                            resolve(true);\r\n                        };\r\n                        layer.onerror = () => resolve(false);\r\n                    } else resolve(false);\r\n                } else resolve(false);\r\n            });\r\n        };\r\n\r\n        if (canvasRef && exportCtx) {\r\n            exportCtx.clearRect(0, 0, 549, 800);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .map(callDraw => {\r\n                    return callDraw();\r\n                }));\r\n            await generateLayer(frameCanvasRef, exportCtx);\r\n            const previewCtx = previewCanvasRef.current;\r\n            if (previewCtx && exportCtx) {\r\n                if (isPendulum) {\r\n                    exportCtx.drawImage(previewCtx, 38, 144, 474, 470);\r\n                } else {\r\n                    exportCtx.drawImage(previewCtx, 67, 147, 416, 416);\r\n                }\r\n            }\r\n            await generateLayer(specialFrameCanvasRef, exportCtx);\r\n            const layerList = [\r\n                nameCanvasRef,\r\n                attributeCanvasRef,\r\n                subFamilyCanvasRef,\r\n                pendulumScaleCanvasRef,\r\n                pendulumEffectCanvasRef,\r\n                typeCanvasRef,\r\n                effectCanvasRef,\r\n                ADCanvasRef,\r\n                setIdRef,\r\n                passcodeRef,\r\n                creatorRef,\r\n                stickerRef,\r\n            ];\r\n            await Promise.all([\r\n                layerList.map(currentlayer => generateLayer(currentlayer, exportCtx)),\r\n            ]);\r\n            // await drawRefrenceImage(exportCtx);\r\n        }\r\n    }).current;\r\n\r\n    return (\r\n        <div className={'app-container'} style={{\r\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\r\n        }}>\r\n            {isInitializing && <div className=\"full-loading\">\r\n                {error.length > 0 ? <span style={{ color: '#e04040' }}>\r\n                    {error}\r\n                </span> : 'Loading fonts and scripts...'}\r\n            </div>}\r\n            <div className=\"card-filter-panel\">\r\n            </div>\r\n            {isInitializing === false && <CardInputPanel\r\n                receivingCanvasRef={previewCanvasRef.current}\r\n                currentCard={currentCard}\r\n                onCardChange={setCard}\r\n                defaultCropInfo={pictureCrop}\r\n                onImageChange={cropInfo => {\r\n                    setImageChangeCount(cnt => cnt + 1);\r\n                    if (cropInfo) setCard(curr => ({\r\n                        ...curr,\r\n                        pictureCrop: cropInfo,\r\n                    }));\r\n                }}\r\n            >\r\n                <AppHeader /><br />\r\n            </CardInputPanel>}\r\n            <div className=\"card-preview-panel\">\r\n                <button className=\"export-button\">Save Card:<br />Right click the card → \"Save image as...\" / \"Copy Image\"</button>\r\n                <div className=\"card-canvas-group\">\r\n                    <canvas id=\"export-canvas\" ref={drawCanvasRef} width={549} height={800} />\r\n                    <div id=\"export-canvas-guard\">\r\n                        <div className=\"canvas-guard-alert\">Generating...</div>\r\n                        <LoadingOutlined />\r\n                    </div>\r\n                    <canvas id=\"frameCanvas\" ref={frameCanvasRef} width={549} height={800} />\r\n                    <canvas id=\"artCanvas\" ref={artCanvasRef} width={549} height={650} />\r\n                    <canvas id=\"specialFrameCanvas\" ref={specialFrameCanvasRef} width={549} height={800} />\r\n                    <canvas id=\"nameCanvas\" ref={nameCanvasRef} width={549} height={100} />\r\n                    <canvas id=\"attributeCanvas\" ref={attributeCanvasRef} width={549} height={100} />\r\n                    <canvas id=\"subFamilyCanvas\" ref={subFamilyCanvasRef} width={549} height={150} />\r\n                    <canvas id=\"pendulumScaleCanvas\" ref={pendulumScaleCanvasRef} width={549} height={600} />\r\n                    <canvas id=\"pendulumEffectCanvas\" ref={pendulumEffectCanvasRef} width={549} height={600} />\r\n                    <canvas id=\"typeCanvas\" ref={typeCanvasRef} width={549} height={700} />\r\n                    <canvas id=\"effectCanvas\" ref={effectCanvasRef} width={549} height={750} />\r\n                    <canvas id=\"ADCanvas\" ref={ADCanvasRef} width={549} height={800} />\r\n                    <canvas id=\"setId\" ref={setIdRef} width={549} height={800} />\r\n                    <canvas id=\"passcode\" ref={passcodeRef} width={549} height={800} />\r\n                    <canvas id=\"creator\" ref={creatorRef} width={549} height={800} />\r\n                    <canvas id=\"sticker\" ref={stickerRef} width={549} height={800} />\r\n                    <canvas className=\"crop-canvas\" ref={previewCanvasRef} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}