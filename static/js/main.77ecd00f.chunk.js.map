{"version":3,"sources":["model/index.tsx","util/categorize.tsx","3rd/index.ts","util/condenser.ts","util/index.tsx","component/loading/index.tsx","component/card-picture/index.tsx","component/link-marker/index.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/style-picker/index.tsx","page/input-panel/input-train/index.tsx","page/input-panel/index.tsx","page/app-header/index.tsx","const/size.ts","const/position.ts","draw/text.ts","draw/util.ts","draw/predefine.ts","draw/type-ability.ts","draw/image.ts","app.tsx","reportWebVitals.js","index.js"],"names":["defaultTextStyle","fillStyle","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","hasShadow","defaultCard","frame","foil","name","nameStyleType","nameStyle","attribute","subFamily","star","picture","pictureCrop","x","y","width","height","unit","aspect","link_map","isPendulum","pendulum_effect","red_scale","blue_scale","type_ability","effect","set_id","atk","def","passcode","sticker","isFirstEdition","creator","frameType","color","backgroundColor","iconList","foilStyleMap","gold","platinum","foilList","textStyle","checkXyz","card","checkLink","checkMonster","getCardFrame","find","entry","toLowerCase","JSONCrush","e","n","r","o","includes","String","fromCharCode","push","t","unshift","replace","JSONCrushSwap","length","i","l","f","h","substr","a","charCodeAt","g","indexOf","d","encodeURI","encodeURIComponent","split","join","JSONUncrush","substring","pop","RegExp","createCondenser","minThreshold","maxThreshold","min","max","median","lastEffective","iterateCount","magnitude","reverseSearch","finish","Math","searchDown","reset","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","cardFieldShortenMap","_newKey","cardDataCondenser","shortenMap","crush","condensedCard","Object","keys","forEach","cardKey","cardValue","Array","isArray","newKey","curshedCard","JSON","stringify","reverseCardDataCondenser","normalizedCondensedCard","parse","decodeURIComponent","fullCard","fullKey","shortendValue","shortendKey","randomCharacter","charSet","result","charactersLength","charAt","floor","random","randomSetID","randomPassword","splitEffect","isNormal","effectBody","effectMaterial","materialRegex","materialReplacement","exec","material","effectFlavorCondition","flavorConditionRegex","flavorCondition","body","quoteConvert","text","normalizedString","insertUrlParam","key","value","window","history","pushState","searchParams","URLSearchParams","location","search","set","newurl","protocol","host","pathname","toString","path","Loading","FullView","className","size","ImageCropper","noRedrawNumber","defaultExternalSource","previewCanvasRef","children","ratio","defaultCropInfo","onSourceChange","onImageChange","onTainted","useState","crossorigin","setCrossOrigin","sourceType","setSourceType","internalSource","setInternalSource","isLoading","setLoading","externalSource","setExternalSource","imgRef","useRef","crop","setCrop","completedCrop","setCompletedCrop","onLoad","useCallback","img","current","useEffect","image","canvas","ctx","getContext","scaleX","naturalWidth","scaleY","naturalHeight","pixelRatio","devicePixelRatio","boundingWidth","ceil","getBoundingClientRect","boundingHeight","setTransform","imageSmoothingQuality","drawImage","Group","onChange","target","Button","addonBefore","placeholder","source","maxLength","type","accept","files","reader","FileReader","addEventListener","readAsDataURL","disabled","onClick","toBlob","blob","previewUrl","URL","createObjectURL","anchor","document","createElement","download","href","click","revokeObjectURL","generateDownload","style","src","onImageLoaded","onImageError","undefined","cropData","onComplete","ruleOfThirds","LinkMarkChooser","defaultValue","choosenArrow","setChoosenArrow","rotateMap","literalChoosenArrow","map","index","normalizedIndex","overlay","cur","newMap","filter","transform","foilButton","label","toLocaleUpperCase","props","fontWeight","frameButton","attributeButton","alt","process","iconButton","starButton","stickerButton","CharPicker","targetId","onPick","setTarget","internalOnPick","char","inputTarget","getElementById","myField","myValue","selection","focus","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","onDrag","left","top","id","EllipsisOutlined","container","edge","draggable","throttleDrag","StylePicker","React","memo","defaultType","undebouncedOnChange","setType","setValue","isVisible","setVisible","debounce","setCustomValue","inputValue","curValue","newStyle","boxShadow","background","zIndex","checked","newType","CloseOutlined","hex","axis","styles","track","gridRow","thumb","xmax","xmin","ymax","ymin","CheckboxTrain","optionList","combinedClass","isChecked","TextArea","Input","onChangeFactory","mutateFunction","valueTransform","RandomButton","seeder","onGenerate","marginLeft","paddingLeft","borderLeft","SyncOutlined","CardInputPanel","currentCard","receivingCanvasRef","onCardChange","isMirrorScale","setMirrorScale","setCard","mutateFunc","onFoilChange","onAttributeChange","onSubFamilyChange","onNameChange","onStarChange","onPictureChange","onLinkMapChange","onRedScaleChange","onBlueScaleChange","onPendulumEffectChange","onEffectChange","onATKChange","onDEFChange","onTypeAbilityChange","onSetIDChange","onPasscodeChange","onStickerChange","onCreatorChange","isXyz","isLink","isMonster","displayTypeAbility","setDisplayTypeAbility","displayName","setDisplayName","displayEffect","setDisplayEffect","displayPendulumEffect","setDisplayPendulumEffect","onlineCharPicker","setOnlineCharPicker","ref","frameValue","isST","newTypeAbility","toUpperCase","onFocus","allowClear","ev","rows","trim","AppHeader","fontFamily","rel","overlayClassName","content","ExclamationCircleOutlined","taintedCanvasWarning","display","monsterFontList","fontSize","lineHeight","lineCount","monsterSizeList","pendulumFontList","pendulumSizeList","stFontList","stSizeList","typeSizeMap","small","bracketSize","bracketSpace","bracketOffsetTop","upperCaseSize","upperCaseScale","lowerCaseSize","lowerCaseScale","spaceScale","spaceSize","frontSpace","behindSpace","iconSpace","medium","large","arrowPositionList","foilPosition","art","drawScale","baseline","digitList","totalWidth","digit","measureText","accLeft","fillText","drawEffect","isPendulumEffect","fontList","sizeList","normalizedContent","effectIndexSize","tolerantPerSentence","additionalLineCount","sentencizeText","bulletSymbol","specialSymbol","tokenizeR","specialSymbolReg","basedWidth","condenser","effectiveRatio","maxLine","font","textAlign","switchFont","func","tempFont","largeSize","lineList","reduce","prev","curr","condenseRatio","hypoWidth","tokenizedText","currentLineCount","tokenSentence","cnt","tokenWidth","test","fullString","fullStringSplittedByBullet","isLast","drawBullet","beginPath","arc","PI","fill","lineWidth","strokeStyle","stroke","clearRect","actualWidth","scale","sigmoidRatio","splitter","spaceSeparatedText","nonSpaceWidth","spaceCount","spaceWidth","fillTextLeftWithSpacing","str","letterSpacingRatio","charList","curLeft","fillTextRightWithSpacing","curRight","c","drawCreatorText","symbol","maxWidth","splittedContent","splittedWidth","symbolWidth","totalCondensableWidth","returnBundle","measureWithSymbol","nextEdge","drawAD","$value","nextWidth","arr","curText","drawBracketTemplate","alignment","bracketChar","alignmentOffset","drawIconSpaceTemplate","drawBracketSpaceTemplate","drawTextTemplate","spaceChar","drawSlashTemplate","baseOffset","totalOffset","upperChar","imageCacheMap","drawFromSource","sx","sy","Promise","resolve","ready","normalizedX","normalizedY","Image","onload","onerror","drawFromSourceWithSize","dw","dh","App","isInitializing","setInitializing","error","setError","drawCanvasRef","frameCanvasRef","artCanvasRef","specialFrameCanvasRef","subFamilyCanvasRef","pendulumScaleCanvasRef","pendulumEffectCanvasRef","typeCanvasRef","effectCanvasRef","nameCanvasRef","attributeCanvasRef","ADCanvasRef","setIdRef","passcodeRef","creatorRef","stickerRef","pendulumSize","drawingPipeline","specialFrame","imageChangeCount","setImageChangeCount","cardType","hasFoil","previewCtx","foiledBorder","all","parseInt","counter","offset","normalizedSubFamily","splittedText","contentWidth","drawName","endOfPasscode","draw1stEdition","drawTypeAbility","textSize","instructionList","totalLeft","reverse","typeCtx","WebFont","load","custom","families","urls","active","localCardVersion","localStorage","getItem","localCardData","urlParam","get","inactive","pendingSave","exportRef","currentPipeline","queuedPipeline","canvasRef","link","toDataURL","setTainted","alert","querySelector","classList","remove","isTainted","relevant","setItem","setAttribute","onExport","exportProps","exportCtx","generateLayer","canvasLayer","layerData","layer","values","callDraw","layerList","currentlayer","onDrop","backgroundImage","add","onSave","prompt","cardData","LoadingOutlined","cropInfo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.77ecd00f.chunk.js","sourcesContent":["export type TextStyleType = 'auto' | 'custom';\r\nexport type TextStyle = typeof defaultTextStyle;\r\nexport const defaultTextStyle = {\r\n    fillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    hasShadow: false,\r\n};\r\n\r\nexport type Card = typeof defaultCard;\r\nexport const defaultCard = {\r\n    frame: 'fusion',\r\n    foil: 'normal',\r\n    name: 'Junko',\r\n    nameStyleType: 'auto' as TextStyleType,\r\n    nameStyle: {\r\n        fillStyle: '#000000',\r\n        shadowColor: '#000000',\r\n        shadowOffsetY: 0,\r\n        shadowOffsetX: 0,\r\n        shadowBlur: 0,\r\n        hasShadow: false,\r\n    } as TextStyle,\r\n    attribute: 'LIGHT',\r\n    subFamily: 'NO ICON',\r\n    star: 6,\r\n    picture: 'https://i.imgur.com/h5kXZeC.png',\r\n    pictureCrop: {\r\n        x: 0,\r\n        y: 12,\r\n        width: 269,\r\n        height: 269,\r\n        unit: 'px',\r\n        aspect: 1,\r\n    } as Partial<ReactCrop.Crop>,\r\n    link_map: ['1', '3', '7', '9'] as string[],\r\n    isPendulum: false,\r\n    pendulum_effect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\r\n    red_scale: '4',\r\n    blue_scale: '4',\r\n    type_ability: ['Fairy', 'Fusion', 'Effect'] as string[],\r\n    effect: `[2+ Effect Monsters]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    set_id: 'YGOC-EN001',\r\n    atk: '2000',\r\n    def: '2000',\r\n    passcode: '18111996',\r\n    sticker: 'holo5',\r\n    isFirstEdition: true,\r\n    creator: '©2020 Studio Dice/SHUEISHA TV TOKYO, KONAMI',\r\n};\r\n\r\nexport const frameType = [\r\n    { name: 'normal', color: '#fff', backgroundColor: '#c49c5e' },\r\n    { name: 'effect', color: '#fff', backgroundColor: '#b96c49' },\r\n    { name: 'fusion', color: '#fff', backgroundColor: '#8948a4' },\r\n    { name: 'synchro', color: '#000', backgroundColor: '#efefef' },\r\n    { name: 'xyz', color: '#fff', backgroundColor: '#000' },\r\n    { name: 'link', color: '#fff', backgroundColor: '#0c8ac6' },\r\n    { name: 'ritual', color: '#fff', backgroundColor: '#5e85c9' },\r\n    { name: 'spell', color: '#fff', backgroundColor: '#1b8f83' },\r\n    { name: 'trap', color: '#fff', backgroundColor: '#c32a8c' },\r\n    { name: 'token', color: '#fff', backgroundColor: '#6f6c6b' },\r\n];\r\n\r\nexport const iconList = [\r\n    'NO ICON',\r\n    'FIELD',\r\n    'CONTINUOUS',\r\n    'QUICK-PLAY',\r\n    'RITUAL',\r\n    'COUNTER',\r\n];\r\n\r\nexport const foilStyleMap: Record<string, TextStyle> = {\r\n    gold: {\r\n        fillStyle: '#b88c43',\r\n        shadowColor: '#FCC400',\r\n        shadowOffsetY: 1,\r\n        shadowOffsetX: 0,\r\n        shadowBlur: 1,\r\n        hasShadow: true,\r\n    },\r\n    platinum: {\r\n        fillStyle: '#CCCCCC',\r\n        shadowColor: '#FFFFFF',\r\n        shadowOffsetY: 1,\r\n        shadowOffsetX: 0,\r\n        shadowBlur: 1,\r\n        hasShadow: true,\r\n    },\r\n};\r\nexport const foilList = [\r\n    { name: 'normal', color: '#747b95', textStyle: defaultTextStyle },\r\n    { name: 'gold', color: '#cfa65f' },\r\n    { name: 'platinum', color: '#b1b1b1' },\r\n];\r\n\r\nexport const stickerList = [\r\n    'no-sticker',\r\n    'gold',\r\n    'silver',\r\n    'beta',\r\n    'holo5',\r\n    'holo4',\r\n    'holo3',\r\n    'holo2',\r\n    'holo1',\r\n];\r\n\r\nexport const attributeList = [\r\n    { name: 'DARK', color: '#b41dda' },\r\n    { name: 'EARTH', color: '#8d8e8e' },\r\n    { name: 'FIRE', color: '#e51b23' },\r\n    { name: 'LIGHT', color: '#bfae32' },\r\n    { name: 'WATER', color: '#008ecd' },\r\n    { name: 'WIND', color: '#28ab35' },\r\n    { name: 'DIVINE', color: '#ef6300' },\r\n    { name: 'SPELL', color: '#1b8f83' },\r\n    { name: 'TRAP', color: '#c32a8c' },\r\n];","import { Card, frameType } from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'frame' | 'type_ability'>) => {\r\n    return card.frame === 'link' && checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap';\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameType.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};","// @ts-nocheck\r\n/* eslint-disable */\r\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\r\n\"use strict\"\r\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { JSONCrush, JSONUncrush } from '../3rd';\r\n\r\nexport const createCondenser = (minThreshold = 0, maxThreshold = 1000) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= 10;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\t\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\t\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};\r\n\r\nconst cardFieldShortenMap: Record<string, string | Record<string, string>> = {\r\n    frame: 'fr',\r\n    foil: 'fo',\r\n    name: 'na',\r\n    nameStyleType: 'nst',\r\n    nameStyle: {\r\n        _newKey: 'ns',\r\n        fillStyle: 'nsfs',\r\n        shadowColor: 'nssc',\r\n        shadowOffsetY: 'nssoy',\r\n        shadowOffsetX: 'nssox',\r\n        shadowBlur: 'nssb',\r\n        hasShadow: 'nshs',\r\n    },\r\n    attribute: 'at',\r\n    subFamily: 'sf',\r\n    star: 'st',\r\n    picture: 'pt',\r\n    pictureCrop: {\r\n        _newKey: 'ptc',\r\n        x: 'ptx',\r\n        y: 'pty',\r\n        width: 'ptw',\r\n        height: 'pth',\r\n        unit: 'ptu',\r\n        aspect: 'pta',\r\n    },\r\n    link_map: 'lm',\r\n    isPendulum: 'ip',\r\n    pendulum_effect: 'pe',\r\n    red_scale: 'rs',\r\n    blue_scale: 'bs',\r\n    type_ability: 'ta',\r\n    effect: 'ef',\r\n    set_id: 'si',\r\n    atk: 'atk',\r\n    def: 'def',\r\n    passcode: 'pc',\r\n    sticker: 'sti',\r\n    isFirstEdition: 'ife',\r\n    creator: 'cr',\r\n};\r\nexport const cardDataCondenser = (\r\n    card: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n    crush = true,\r\n) => {\r\n    const condensedCard: Record<string, any> = {};\r\n    Object.keys(card).forEach(cardKey => {\r\n        const cardValue = card[cardKey];\r\n\r\n        if (typeof cardValue === 'object' && cardValue !== null && !Array.isArray(cardValue)) {\r\n            const newKey = shortenMap[cardKey]?._newKey;\r\n\r\n            if (newKey) {\r\n                condensedCard[newKey] = cardDataCondenser(cardValue, shortenMap[cardKey], false);\r\n            }\r\n        } else {\r\n            const newKey = shortenMap[cardKey];\r\n\r\n            if (typeof newKey === 'string') condensedCard[newKey] = cardValue;\r\n        }\r\n    });\r\n\r\n    if (crush) {\r\n        const curshedCard = JSONCrush(JSON.stringify(condensedCard));\r\n\r\n        return curshedCard;\r\n    }\r\n    return condensedCard;\r\n};\r\nexport const reverseCardDataCondenser = (\r\n    condensedCard: Record<string, any> | string,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const normalizedCondensedCard = typeof condensedCard === 'string'\r\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\r\n        : condensedCard;\r\n\r\n    const fullCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortendValue = shortenMap[fullKey];\r\n\r\n        if (typeof shortendValue === 'object' && shortendValue !== null && !Array.isArray(shortendValue)) {\r\n            const shortendKey = shortendValue?._newKey;\r\n\r\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\r\n                fullCard[fullKey] = reverseCardDataCondenser(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (normalizedCondensedCard[shortendValue]) {\r\n                fullCard[fullKey] = normalizedCondensedCard[shortendValue];\r\n            }\r\n        }\r\n    });\r\n    return fullCard;\r\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result           = '';\r\n    const charactersLength = charSet.length;\r\n    for ( let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = () => {\r\n    return `${randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)}-EN${randomCharacter('0123456789', 3)}`;\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};\r\n\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    let effectBody = effect;\r\n\r\n    let effectMaterial = '';\r\n    const materialRegex = /^(\\[([^\\]]*)\\]\\s*)/m;\r\n    const materialReplacement = materialRegex.exec(effectBody)?.[1];\r\n    const material = materialRegex.exec(effectBody)?.[2];\r\n    if (material && materialReplacement) {\r\n        effectMaterial = material;\r\n        effectBody = effectBody.replace(materialReplacement, '');\r\n    } else effectMaterial = '';\r\n\r\n    let effectFlavorCondition = '';\r\n    const flavorConditionRegex = /(\\n^[\\r\\t\\f\\v \\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]*\\([\\w\\W]+\\))\\s*$/m;\r\n    const flavorCondition = flavorConditionRegex.exec(effect)?.[1];\r\n    if (flavorCondition && isNormal) {\r\n        effectFlavorCondition = flavorCondition;\r\n        effectBody = effectBody.replace(flavorCondition, '');\r\n    } else effectFlavorCondition = '';\r\n\r\n    return {\r\n        material: effectMaterial,\r\n        body: effectBody,\r\n        flavorCondition: effectFlavorCondition\r\n    };\r\n};\r\n\r\nexport const quoteConvert = (text?: string) => {\r\n    let normalizedString = (text ?? '');\r\n    normalizedString = normalizedString.replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')\r\n        .replace(/'/g, '\\u2019')\r\n        .replace(/(^|[-\\u2014/[(\\u2018\\s])\"/g, '$1\\u201c')\r\n        .replace(/\"/g, '\\u201d')\r\n        .replace(/--/g, '\\u2014');\r\n    return normalizedString;\r\n};\r\n\r\nexport function insertUrlParam(key: string, value: string) {\r\n    if (window.history.pushState) {\r\n        let searchParams = new URLSearchParams(window.location.search);\r\n        searchParams.set(key, value);\r\n        let newurl = window.location.protocol + '//' + window.location.host + window.location.pathname + '?' + searchParams.toString();\r\n        window.history.pushState({path: newurl}, '', newurl);\r\n    }\r\n}\r\n\r\nexport * from './categorize';\r\nexport * from './condenser';","import { Spin } from 'antd';\r\nimport './loading.scss';\r\n\r\nexport const Loading = () => {\r\n    return <Spin />;\r\n};\r\nLoading.FullView = () => {\r\n    return <div className=\"loading-fullview\">\r\n        <Spin size=\"large\" />\r\n    </div>;\r\n};","import { Button, Input, Radio } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { Loading } from '../loading';\r\nimport './card-picture.scss';\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n            const anchor = document.createElement('a');\r\n            anchor.download = 'cropPreview.png';\r\n            anchor.href = URL.createObjectURL(blob);\r\n            anchor.click();\r\n\r\n            window.URL.revokeObjectURL(previewUrl);\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\nexport type ImageCropper = {\r\n    noRedrawNumber?: number,\r\n\tdefaultExternalSource?: string,\r\n    previewCanvasRef?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    ratio?: number,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    onSourceChange?: (source: string) => void,\r\n    onImageChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'internal' | 'external') => void,\r\n    onTainted: () => void,\r\n}\r\nexport const ImageCropper = ({\r\n    noRedrawNumber = 0,\r\n    defaultExternalSource = '',\r\n    previewCanvasRef,\r\n    children,\r\n    ratio = 1,\r\n    defaultCropInfo,\r\n    onSourceChange = () => {},\r\n    onImageChange = () => {},\r\n    onTainted = () => {},\r\n}: ImageCropper) => {\r\n    const [crossorigin, setCrossOrigin] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\r\n    const [sourceType, setSourceType] = useState<'internal' | 'external'>('external');\r\n    const [internalSource, setInternalSource] = useState('');\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState<ReactCrop.Crop>(defaultCropInfo);\r\n    const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n\r\n    const onSelectFile = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            setLoading(true);\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () => {\r\n                if (typeof reader.result === 'string') {\r\n                    setInternalSource(reader.result);\r\n                    setSourceType('internal');\r\n                }\r\n            });\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const onLoad = useCallback((img: HTMLImageElement) => {\r\n        setLoading(false);\r\n        imgRef.current = img;\r\n    }, []);\r\n\t\r\n    const onExternalSourceChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n\r\n        setLoading(true);\r\n        setSourceType('external');\r\n        onSourceChange(source);\r\n        setExternalSource(source);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        const canvas = previewCanvasRef;\r\n        const crop = completedCrop;\r\n        if (!crop || !canvas || !image) return;\r\n\r\n        const ctx = canvas.getContext('2d');\r\n        if (!ctx) return;\r\n\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        const pixelRatio = window.devicePixelRatio;\r\n        const boundingWidth = Math.ceil(canvas.getBoundingClientRect().width);\r\n        const boundingHeight = Math.ceil(canvas.getBoundingClientRect().height);\r\n\r\n        canvas.width = (boundingWidth ?? 0) * pixelRatio;\r\n        canvas.height = (boundingHeight ?? 0) * pixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        ctx.imageSmoothingQuality = 'high';\r\n\r\n        ctx.drawImage(\r\n            image,\r\n            (crop.x ?? 0) * scaleX,\r\n            (crop.y ?? 0) * scaleY,\r\n            (crop.width ?? 0) * scaleX,\r\n            (crop.height ?? 0) * scaleY,\r\n            0,\r\n            0,\r\n            (boundingWidth ?? 0),\r\n            (boundingHeight ?? 0)\r\n        );\r\n        onImageChange(crop, sourceType);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, previewCanvasRef, noRedrawNumber]);\r\n\r\n    return (\r\n        <div className=\"card-image-cropper\">\r\n            <div className=\"card-image-source-input\">\r\n                {children}\r\n                <Radio.Group onChange={e => setSourceType(e.target.value)} value={sourceType}>\r\n                    <Radio.Button value={'external'}>\r\n                        <Input key=\"key\"\r\n                            addonBefore=\"Link\" placeholder=\"https://my-online-image...\"\r\n                            value={externalSource}\r\n                            onChange={onExternalSourceChange} maxLength={256} />\r\n                    </Radio.Button>\r\n                    <Radio.Button value={'internal'}>\r\n                        <Input type=\"file\"  accept=\"image/*\" onChange={onSelectFile} />\r\n                        <div>\r\n                            {sourceType === 'internal' && <>\r\n                                <Button\r\n                                    className=\"download-button\"\r\n                                    disabled={!completedCrop?.width || !completedCrop?.height}\r\n                                    onClick={() => previewCanvasRef && generateDownload(previewCanvasRef, completedCrop)}\r\n                                >\r\n                                Download cropped image#3b9dff\r\n                                </Button>\r\n                                <span style={{ color: '#FF6F6F' }}>Offline images are not auto saved!</span>\r\n                            </>}\r\n                        </div>\r\n                    </Radio.Button>\r\n                </Radio.Group>\r\n            </div>\r\n            <div className=\"card-cropper\">\r\n                {isLoading && <Loading.FullView />}\r\n                <ReactCrop key={sourceType}\r\n                    src={sourceType === 'internal' ? internalSource : externalSource}\r\n                    onImageLoaded={onLoad}\r\n                    onImageError={() => {\r\n                        onTainted();\r\n                        setCrossOrigin(undefined);\r\n                    }}\r\n                    crop={crop}\r\n                    onChange={cropData => setCrop({ ...cropData, aspect: ratio })}\r\n                    onComplete={cropData => setCompletedCrop(cropData)}\r\n                    ruleOfThirds={true}\r\n                    crossorigin={crossorigin}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport './link-marker.scss';\r\n\r\nexport type LinkMarkChooser = {\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n};\r\nexport const LinkMarkChooser = ({\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n}: LinkMarkChooser) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const rotateMap = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <div className=\"link-marker-chooser\">\r\n        <div className=\"title\">\r\n            Link Arrows\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((entry, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip key=\"5\" overlay=\"Reset\">\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        setChoosenArrow([]);\r\n                    }}>R</div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div className={`link-marker-icon link-marker-icon-${index + 1}`} style={{ transform: `rotate(${rotateMap[index]}deg)` }} />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </div>;\r\n};","import { frameType, iconList, attributeList, stickerList, foilList } from '../../model';\r\nimport './input-panel.scss';\r\n\r\nexport const foilButton = foilList.map(({ color, name }) => ({\r\n    label: name.toLocaleUpperCase(),\r\n    value: name,\r\n    props: {\r\n        style: {\r\n            color,\r\n            fontWeight: 'bold',\r\n        } as React.CSSProperties,\r\n    }\r\n}));\r\nexport const frameButton = frameType.map(({ color, name, backgroundColor }) => ({\r\n    label: name,\r\n    value: name,\r\n    props: {\r\n        style: {\r\n            backgroundColor,\r\n            color,\r\n        } as React.CSSProperties,\r\n    }\r\n}));\r\nexport const attributeButton = attributeList.map(({ name }) => ({\r\n    label: <img alt={name} src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${name.toLowerCase()}.png`} />,\r\n    value: name,\r\n}));\r\nexport const iconButton = iconList.map(entry => ({\r\n    label: entry,\r\n    value: entry,\r\n}));\r\nexport const starButton = [...Array(14)].map((e, index) => ({ label: index, value: index }));\r\nexport const stickerButton = stickerList.map(name => ({\r\n    label: name === 'no-sticker'\r\n        ? <span>NONE</span>\r\n        : <img alt={name} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${name.toLowerCase()}.png`} />,\r\n    value: name,\r\n}));","import { useCallback, useEffect, useState } from 'react';\r\nimport Moveable from 'react-moveable';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport './char-picker.scss';\r\n\r\nfunction insertAtCursor(myField: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        myField.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: myField.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (myField.selectionStart || myField.selectionStart === 0) {\r\n        const startPos = myField.selectionStart;\r\n        const endPos = myField.selectionEnd;\r\n        myField.value = myField.value.substring(0, startPos)\r\n            + myValue\r\n            + myField.value.substring(endPos, myField.value.length);\r\n        myField.selectionStart = startPos + myValue.length;\r\n        myField.selectionEnd = startPos + myValue.length;\r\n        myField.focus();\r\n\r\n        return {\r\n            value: myField.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        myField.value += myValue;\r\n\r\n        return {\r\n            value: myField.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (char: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, char);\r\n\r\n            onPick(value);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTarget(document.getElementById('char-picker'));\r\n    }, []);\r\n\r\n    const onDrag = useCallback(({\r\n        target,\r\n        left, top,\r\n        transform,\r\n    }) => {\r\n        target!.style.left = `${left}px`;\r\n        target!.style.top = `${top}px`;\r\n        target!.style.transform = transform;\r\n    }, []);\r\n\r\n    return <div className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div>\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n            ].map(entry => {\r\n                return <button key={entry} className=\"ant-btn\" onClick={() => internalOnPick(entry)}>{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <Moveable\r\n            target={target}\r\n            container={null}\r\n\r\n            /* Resize event edges */\r\n            edge={false}\r\n\r\n            /* draggable */\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        />\r\n    </div>;\r\n};","import { Checkbox, InputNumber, Slider } from 'antd';\r\nimport React, { useRef, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport { TextStyle, TextStyleType } from '../../../model';\r\nimport PowerSlider from 'react-input-slider';\r\nimport { debounce } from 'lodash';\r\nimport './style-picker.scss';\r\n\r\nexport type StylePicker = {\r\n    defaultType: TextStyleType,\r\n\tdefaultValue: TextStyle,\r\n\tonChange: (type: TextStyleType, style: TextStyle) => void,\r\n}\r\nexport const StylePicker = React.memo(({\r\n    defaultType,\r\n    defaultValue,\r\n    onChange: undebouncedOnChange,\r\n}: StylePicker) => {\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [isVisible, setVisible] = useState(false);\r\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\r\n\r\n    const setCustomValue = <ValueType extends any>(key: keyof TextStyle) => {\r\n        return (inputValue: ValueType) => {\r\n            setValue(curValue => {\r\n                const newStyle = { ...curValue, [key]: inputValue };\r\n\r\n                onChange('custom', newStyle);\r\n                return newStyle;\r\n            });\r\n        };\r\n    };\r\n\r\n    return <div className=\"style-picker\">\r\n        <div className=\"style-picker-preview\"\r\n            style={type === 'auto'\r\n                ? {}\r\n                : { boxShadow: `${value.shadowOffsetX}px ${value.shadowOffsetY}px ${value.shadowBlur}px 0 ${value.shadowColor}` }}\r\n            onClick={() => setVisible(cur => !cur)}\r\n        >\r\n            <div className=\"style-picker-display\" style={type === 'auto' ? { background: 'white' } : { background: value.fillStyle }}>\r\n                {type === 'auto' ? 'Auto' : <>&nbsp;</>}\r\n            </div>\r\n        </div>\r\n        {isVisible\r\n            ? <div className=\"style-picker-overlay\" style={{ position: 'absolute', zIndex: 2 }}>\r\n                <div className=\"style-picker-mask\" onClick={() => setVisible(false)} />\r\n                <div className=\"style-picker-auto\">\r\n                    <Checkbox value={'auto'} checked={type === 'auto'} onChange={() => {\r\n                        const newType = type === 'auto' ? 'custom' : 'auto';\r\n                        setType(newType);\r\n                        onChange(newType, value);\r\n                    }}>Auto</Checkbox>\r\n                    <CloseOutlined className=\"style-picker-close\" onClick={() => setVisible(false)} />\r\n                </div>\r\n                <div className={'custom-style-picker'}>\r\n                    <div className=\"custom-style-text\">\r\n                        {/* {type === 'auto' && <div className=\"disable-overlay\" />} */}\r\n                        <h2>Text Color</h2>\r\n                        <CompactPicker color={value.fillStyle} onChange={color => {\r\n                            setType('custom');\r\n                            setValue(cur => {\r\n                                const newStyle = { ...cur, fillStyle: color.hex };\r\n\r\n                                onChange('custom', newStyle);\r\n                                return newStyle;\r\n                            });\r\n                        }} />\r\n                    </div>\r\n                    <h3 className=\"custom-style-expand\">\r\n                        <Checkbox value={'has-shadow'} checked={value.hasShadow} onChange={() => {\r\n                            setType('custom');\r\n                            setValue(cur => {\r\n                                const newStyle = { ...cur, hasShadow: !cur.hasShadow };\r\n\r\n                                onChange('custom', newStyle);\r\n                                return newStyle;\r\n                            });\r\n                        }}>Has Shadow?</Checkbox>\r\n                    </h3>\r\n                    {value.hasShadow && <div className=\"custom-style-shadow\">\r\n                        {/* {type === 'auto' && <div className=\"disable-overlay\" />} */}\r\n                        <h2>Position</h2>\r\n                        <div className=\"shadow-position\">\r\n                            <PowerSlider axis=\"xy\"\r\n                                styles={{\r\n                                    track: {\r\n                                        backgroundColor: '#009ce0',\r\n                                        width: 100,\r\n                                        height: 100,\r\n                                        gridRow: 'span 3',\r\n                                        position: 'relative',\r\n                                    },\r\n                                    thumb: {\r\n                                        backgroundColor: '#91d5ff',\r\n                                        zIndex: 10,\r\n                                    },\r\n                                }}\r\n                                xmax={5} xmin={-5}\r\n                                ymax={5} ymin={-5}\r\n                                x={value.shadowOffsetX}\r\n                                y={value.shadowOffsetY}\r\n                                onChange={({ x, y }) => {\r\n                                    setValue(cur => {\r\n                                        const newStyle = { ...cur,\r\n                                            ...cur,\r\n                                            shadowOffsetX: x,\r\n                                            shadowOffsetY: y,\r\n                                        };\r\n\r\n                                        onChange('custom', newStyle);\r\n                                        return newStyle;\r\n                                    });\r\n                                }} />\r\n                            <div className=\"single-slider\">\r\n                                X Offset: <InputNumber size=\"small\" value={value.shadowOffsetX}\r\n                                    onChange={setCustomValue('shadowOffsetX')} />\r\n                            </div>\r\n                            <div className=\"single-slider\">\r\n                                Y Offset: <InputNumber size=\"small\" value={value.shadowOffsetY}\r\n                                    onChange={setCustomValue('shadowOffsetY')} />\r\n                            </div>\r\n                            <div className=\"single-slider\">\r\n                                Blur: <Slider value={value.shadowBlur} min={0} max={10} onChange={(value: number) => {\r\n                                    if (typeof value === 'number') setValue(cur => {\r\n                                        const newStyle = { ...cur, shadowBlur: value };\r\n\r\n                                        onChange('custom', newStyle);\r\n                                        return newStyle;\r\n                                    });\r\n                                }} />\r\n                            </div>\r\n                            <div />\r\n                        </div>\r\n                        <h2>Color</h2>\r\n                        <CompactPicker color={value.shadowColor} onChange={color => {\r\n                            setValue(cur => {\r\n                                const newStyle = { ...cur, shadowColor: color.hex };\r\n\r\n                                onChange('custom', newStyle);\r\n                                return newStyle;\r\n                            });\r\n                        }} />\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n            : null}\r\n    </div>;\r\n}, () => true);","import React from 'react';\r\n\r\n\r\n\r\nexport type CheckboxTrain = {\r\n\tclassName?: string,\r\n\tvalue: string,\r\n\toptionList: { label: React.ReactNode, value: string | number, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n\tonChange: (value: string | number) => void,\r\n\tchildren?: React.ReactNode,\r\n}\r\nexport const CheckboxTrain = ({\r\n    onChange,\r\n    value,\r\n    optionList,\r\n    children,\r\n    className,\r\n}: CheckboxTrain) => {\r\n    const combinedClass = ['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ');\r\n\r\n    return <div className={combinedClass}>\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        {optionList.map(entry => {\r\n            const isChecked = `${entry.value}` === `${value}`;\r\n\r\n            return <label key={entry.value}\r\n                {...entry.props}\r\n                className={`ant-radio-button-wrapper ${isChecked ? 'ant-radio-button-wrapper-checked' : ''}`}\r\n                onClick={() => {\r\n                    onChange(entry.value);\r\n                }}\r\n            >\r\n                <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                    <span className=\"ant-radio-button-inner\"></span>\r\n                </span>\r\n                <span>{entry.label}</span>\r\n            </label>;\r\n        })}\r\n    </div>;\r\n};","import React, { useRef, useState } from 'react';\r\nimport { Input, Checkbox, Tooltip } from 'antd';\r\nimport { Card, TextStyle, TextStyleType } from '../../model';\r\nimport { ImageCropper, LinkMarkChooser } from '../../component';\r\nimport { checkXyz, checkLink, checkMonster, randomPassword, randomSetID } from '../../util';\r\nimport { debounce } from 'lodash';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { foilButton, frameButton, starButton, iconButton, attributeButton, stickerButton } from './const';\r\nimport { CharPicker } from './char-picker';\r\nimport { StylePicker } from './style-picker';\r\nimport { CheckboxTrain } from './input-train';\r\nimport './input-panel.scss';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst onChangeFactory = (\r\n    key: string,\r\n    mutateFunction: (func: (card: Card) => Card) => void,\r\n    valueTransform: (value: any) => any = (value) => value,\r\n) => {\r\n    return (e: any) => {\r\n        mutateFunction(current => ({\r\n            ...current,\r\n            [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\r\n        }));\r\n    };\r\n};\r\n\r\ntype RandomButton = {\r\n    seeder: () => string,\r\n    onGenerate: (value: string) => void,\r\n}\r\nconst RandomButton = ({\r\n    seeder,\r\n    onGenerate,\r\n}: RandomButton) => {\r\n    return <span style={{ marginLeft: 10, paddingLeft: 10, borderLeft: '1px solid #222' }}>\r\n        <Tooltip overlay=\"Randomize\">\r\n            <SyncOutlined onClick={() => onGenerate(seeder())} />\r\n        </Tooltip>\r\n    </span>;\r\n};\r\n\r\nexport type CardInputPanelRef = {\r\n    getCroppedImageCanvasRef: () => HTMLCanvasElement | null\r\n}\r\nexport type CardInputPanel = {\r\n\tcurrentCard: Card,\r\n    receivingCanvasRef: HTMLCanvasElement | null,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n\tonCardChange: React.Dispatch<React.SetStateAction<Card>>,\r\n    onImageChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'internal' | 'external') => void,\r\n    children?: React.ReactNode,\r\n} & {\r\n    onTainted: ImageCropper['onTainted']\r\n}\r\nexport const CardInputPanel = ({\r\n    currentCard,\r\n    receivingCanvasRef,\r\n    defaultCropInfo,\r\n    onCardChange,\r\n    onImageChange,\r\n    onTainted,\r\n    children,\r\n}: CardInputPanel) => {\r\n    const [isMirrorScale, setMirrorScale] = useState(true);\r\n    const setCard = (mutateFunc: (card: Card) => Card) => {\r\n        onCardChange(currentCard => mutateFunc(currentCard));\r\n    };\r\n    const onFoilChange = onChangeFactory('foil', setCard);\r\n    const onFrameChange = (frameValue: number | string) => {\r\n        onCardChange(currentCard => {\r\n            const value = `${frameValue}`;\r\n            const isST = value === 'spell' || value === 'trap';\r\n            const newTypeAbility = value === 'spell'\r\n                ? ['Spell Card']\r\n                : value === 'trap' ? ['Trap Card'] : currentCard.type_ability;\r\n            if (isST) setDisplayTypeAbility(newTypeAbility[0]);\r\n    \r\n            return {\r\n                ...currentCard,\r\n                frame: value,\r\n                isPendulum: value === 'link' || value === 'token' || isST ? false : currentCard.isPendulum,\r\n                subFamily: isST ? 'NO ICON' : currentCard.subFamily,\r\n                attribute: isST\r\n                    ? `${value}`.toUpperCase()\r\n                    : currentCard.attribute,\r\n                type_ability: value === 'spell'\r\n                    ? ['Spell Card']\r\n                    : value === 'trap' ? ['Trap Card'] : currentCard.type_ability,\r\n            };\r\n        });\r\n    };\r\n    const onAttributeChange = onChangeFactory('attribute', setCard);\r\n    const onSubFamilyChange = onChangeFactory('subFamily', setCard);\r\n    const onNameChange = debounce(onChangeFactory('name', setCard), 250);\r\n    const onNameColorChange = (type: TextStyleType, value: TextStyle) => {\r\n        onCardChange(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    };\r\n    const onStarChange = onChangeFactory('star', setCard);\r\n    const onIsPendulumChange = (e: any) => onCardChange(currentCard => {\r\n        return { ...currentCard, isPendulum: e.target.checked };\r\n    });\r\n    const onPictureChange = onChangeFactory('picture', setCard);\r\n    const onLinkMapChange = onChangeFactory('link_map', setCard);\r\n    const onRedScaleChange = onChangeFactory('red_scale', setCard);\r\n    const onBlueScaleChange = onChangeFactory('blue_scale', setCard);\r\n    const onPendulumEffectChange = debounce(onChangeFactory('pendulum_effect', setCard), 250);\r\n    const onEffectChange = debounce(onChangeFactory('effect', setCard), 250);\r\n    const onATKChange = onChangeFactory('atk', setCard);\r\n    const onDEFChange = onChangeFactory('def', setCard);\r\n    const onTypeAbilityChange = debounce((value: (string | number)[]) => {\r\n        setCard(current => ({\r\n            ...current,\r\n            type_ability: value.map(entry => `${entry}`),\r\n        }));\r\n    }, 250);\r\n    const onSetIDChange = onChangeFactory('set_id', setCard);\r\n    const onPasscodeChange = onChangeFactory('passcode', setCard);\r\n    const onStickerChange = onChangeFactory('sticker', setCard);\r\n    const onCreatorChange = onChangeFactory('creator', setCard);\r\n    const onFirstEditionChange = (e: any) => onCardChange(currentCard => {\r\n        return { ...currentCard, isFirstEdition: e.target.checked };\r\n    });\r\n\r\n    const {\r\n        frame, foil,\r\n        name, nameStyleType, nameStyle,\r\n        picture,\r\n        effect,\r\n        type_ability,\r\n        isPendulum, pendulum_effect, red_scale, blue_scale,\r\n        atk, def, link_map,\r\n        attribute,\r\n        subFamily,\r\n        star,\r\n        set_id,\r\n        passcode, isFirstEdition, creator, sticker,\r\n    } = currentCard;\r\n    const isXyz = checkXyz(currentCard);\r\n    const isLink = checkLink(currentCard);\r\n    const isMonster = checkMonster(currentCard);\r\n    const [displayTypeAbility, setDisplayTypeAbility] = useState(type_ability.join('/'));\r\n    const [displayName, setDisplayName] = useState(name);\r\n    const [displayEffect, setDisplayEffect] = useState(effect);\r\n    const [displayPendulumEffect, setDisplayPendulumEffect] = useState(pendulum_effect);\r\n    const [onlineCharPicker, setOnlineCharPicker] = useState('');\r\n    const ref = useRef();\r\n    \r\n\r\n    return <div className=\"card-info-panel\">\r\n        {children}\r\n        <CharPicker\r\n            targetId={onlineCharPicker}\r\n            onPick={value => {\r\n                if (ref.current) (ref.current as any)?.props?.onChange?.({\r\n                    target: { value }\r\n                });\r\n            }}\r\n        />\r\n        <CheckboxTrain className=\"foil-radio\" value={foil} onChange={onFoilChange} optionList={foilButton}>\r\n            <span>Foil</span>\r\n        </CheckboxTrain>\r\n        <CheckboxTrain className=\"frame-radio\" value={frame} onChange={onFrameChange} optionList={frameButton} />\r\n        <hr />\r\n        <div className=\"card-header custom-gap\">\r\n            <Input\r\n                id=\"name\"\r\n                ref={onlineCharPicker === 'name' ? ref as any : null}\r\n                onFocus={() => setOnlineCharPicker('name')}\r\n                allowClear\r\n                addonBefore={<>Name <StylePicker defaultType={nameStyleType} defaultValue={nameStyle} onChange={onNameColorChange} /></>}\r\n                placeholder=\"Card Name\"\r\n                value={displayName}\r\n                className=\"name-input\"\r\n                onChange={ev => {\r\n                    onNameChange(ev);\r\n                    setDisplayName(ev.target.value);\r\n                }}\r\n            />\r\n            {isMonster\r\n                ? !isLink\r\n                    ? <CheckboxTrain className=\"checkbox-star-train\" value={`${star}`} onChange={onStarChange} optionList={starButton}>\r\n                        <span>{isXyz ? 'Rank' : 'Level'}</span>\r\n                    </CheckboxTrain>\r\n                    : null\r\n                : <CheckboxTrain value={subFamily} onChange={onSubFamilyChange} optionList={iconButton}>\r\n                    <span>Icon</span>\r\n                </CheckboxTrain>\r\n            }\r\n            <CheckboxTrain className=\"checkbox-image-train\" value={attribute} onChange={onAttributeChange} optionList={attributeButton}>\r\n                <span>Attribute</span>\r\n            </CheckboxTrain>\r\n        </div>\r\n        <div key=\"pic\" className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <Input\r\n                    id=\"set-id\"\r\n                    ref={onlineCharPicker === 'set-id' ? ref as any : null}\r\n                    onFocus={() => setOnlineCharPicker('set-id')}\r\n                    allowClear\r\n                    className=\"set-id-input\"\r\n                    addonBefore={<>Set ID<RandomButton seeder={randomSetID} onGenerate={onSetIDChange} /></>}\r\n                    onChange={onSetIDChange}\r\n                    placeholder=\"Set ID\"\r\n                    value={set_id}\r\n                />\r\n                {(isMonster && frame !== 'link' && frame !== 'token') && <div className=\"pendulum-container\">\r\n                    <div className=\"joined-row\">\r\n                        <Checkbox onChange={onIsPendulumChange} checked={isPendulum}>Is Pendulum?</Checkbox>\r\n                        {isPendulum && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>Mirror Scale?</Checkbox>}\r\n                    </div>\r\n                    {isPendulum && <>\r\n                        <div>\r\n                            <Input key=\"blue-scale\" addonBefore={<span>\r\n                                <span style={{ color: '#3b9dff' }}>Blue</span> Scale\r\n                            </span>}\r\n                            value={blue_scale}\r\n                            onChange={e => {\r\n                                onBlueScaleChange(e);\r\n                                if (isMirrorScale) onRedScaleChange(e);\r\n                            }} />\r\n                        </div>\r\n                        <div>\r\n                            <Input key=\"red-scale\" addonBefore={<span>\r\n                                <span style={{ color: '#ff6f6f' }}>Red</span> Scale\r\n                            </span>}\r\n                            value={red_scale}\r\n                            onChange={e => {\r\n                                if (isMirrorScale) onBlueScaleChange(e);\r\n                                onRedScaleChange(e);\r\n                            }} />\r\n                        </div>\r\n                        <div className=\"joined-row\" style={{ position: 'relative' }}>\r\n                            <TextArea key=\"pendulum-effect\"\r\n                                id=\"pendulum-effect\"\r\n                                ref={onlineCharPicker === 'pendulum-effect' ? ref as any : null}\r\n                                onFocus={() => setOnlineCharPicker('pendulum-effect')}\r\n                                allowClear\r\n                                placeholder=\"Pendulum effect\"\r\n                                value={displayPendulumEffect}\r\n                                onChange={ev => {\r\n                                    onPendulumEffectChange(ev);\r\n                                    setDisplayPendulumEffect(ev.target.value);\r\n                                }}\r\n                                rows={6}\r\n                            />\r\n                        </div>\r\n                    </>}\r\n                </div>}\r\n                <Input addonBefore=\"Type\"\r\n                    id=\"type\"\r\n                    ref={onlineCharPicker === 'type' ? ref as any : null}\r\n                    onFocus={() => setOnlineCharPicker('type')}\r\n                    allowClear\r\n                    onChange={ev => {\r\n                        const value = ev.target.value;\r\n\r\n                        setDisplayTypeAbility(value);\r\n                        onTypeAbilityChange(value\r\n                            .split('/')\r\n                            .map(entry => entry.trim())\r\n                            .filter(entry => typeof entry === 'string' && entry.length > 0));\r\n                    }}\r\n                    placeholder=\"Type / Ability\"\r\n                    style={{ width: '100%' }}\r\n                    value={displayTypeAbility}\r\n                />\r\n                <TextArea key=\"effect\"\r\n                    id=\"card-effect\"\r\n                    ref={onlineCharPicker === 'card-effect' ? ref as any : null}\r\n                    onFocus={() => setOnlineCharPicker('card-effect')}\r\n                    allowClear\r\n                    placeholder=\"Card effect\"\r\n                    value={displayEffect}\r\n                    rows={10}\r\n                    onChange={ev => {\r\n                        onEffectChange(ev);\r\n                        setDisplayEffect(ev.target.value);\r\n                    }}\r\n                />\r\n                <div className=\"card-footer-input\">\r\n                    {isMonster\r\n                        ? <Input key=\"atk\"\r\n                            id=\"atk\"\r\n                            ref={onlineCharPicker === 'atk' ? ref as any : null}\r\n                            onFocus={() => setOnlineCharPicker('atk')}\r\n                            addonBefore=\"ATK\" allowClear value={atk} onChange={onATKChange} />\r\n                        : <div />}\r\n                    {isMonster\r\n                        ? <Input key=\"def\"\r\n                            id=\"def\"\r\n                            ref={onlineCharPicker === 'def' ? ref as any : null}\r\n                            onFocus={() => setOnlineCharPicker('def')}\r\n                            addonBefore=\"DEF\" allowClear value={def} onChange={onDEFChange} />\r\n                        : <div />\r\n                    }\r\n                    <Input\r\n                        id=\"password\"\r\n                        ref={onlineCharPicker === 'password' ? ref as any : null}\r\n                        onFocus={() => setOnlineCharPicker('password')}\r\n                        allowClear\r\n                        className=\"password-input\"\r\n                        addonBefore={<>Password<RandomButton seeder={randomPassword} onGenerate={onPasscodeChange} /></>}\r\n                        onChange={onPasscodeChange}\r\n                        placeholder=\"Password\"\r\n                        value={passcode}\r\n                    />\r\n                    <Checkbox\r\n                        className=\"input-1st\"\r\n                        onChange={onFirstEditionChange}\r\n                        checked={isFirstEdition}\r\n                    >\r\n                        Is 1st Edition?\r\n                    </Checkbox>\r\n                    <Input addonBefore=\"Creator\"\r\n                        id=\"creator\"\r\n                        ref={onlineCharPicker === 'creator' ? ref as any : null}\r\n                        onFocus={() => setOnlineCharPicker('creator')}\r\n                        allowClear\r\n                        className=\"creator-input\"\r\n                        onChange={onCreatorChange}\r\n                        placeholder=\"Creator\"\r\n                        value={creator}\r\n                    />\r\n                    <CheckboxTrain className=\"sticker-input checkbox-image-train\" value={sticker} onChange={onStickerChange} optionList={stickerButton}>\r\n                        <span>Sticker</span>\r\n                    </CheckboxTrain>\r\n                </div>\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageCropper\r\n                    noRedrawNumber={1}\r\n                    defaultExternalSource={picture}\r\n                    defaultCropInfo={defaultCropInfo}\r\n                    previewCanvasRef={receivingCanvasRef}\r\n                    onSourceChange={onPictureChange}\r\n                    onImageChange={onImageChange}\r\n                    onTainted={onTainted}\r\n                >\r\n                    {isLink\r\n                        ? <LinkMarkChooser defaultValue={link_map} onChange={onLinkMapChange} />\r\n                        : <div />}\r\n                </ImageCropper>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n};","import React from 'react';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { Popover } from 'antd';\r\nimport './app-header.scss';\r\n\r\nexport const AppHeader = React.memo(() => {\r\n    return <div className=\"app-header\">\r\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={48} />\r\n        <div className=\"app-description\">\r\n            <h1>Yugioh Carder <small style={{ fontFamily: 'serif' }}>v{process.env.REACT_APP_VERSION ?? 'unknown'} TCG</small></h1>\r\n            <div className=\"app-contribution\">\r\n                <span>GUI: <b>Lauqerm</b></span>\r\n                <span>Template: <b>Grezar</b> and others (<a\r\n                    href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\">Deviant Art</a>)</span>\r\n                <Popover overlayClassName=\"disclaimer-overlay\" content={<div className=\"disclaimer\">\r\n                    <h2>Disclaimer</h2>\r\n                    <ul>\r\n                        <li>This is a personal project, not an \"official\" card maker.</li>\r\n                        <li>I holds no liability for cards created by this app, including picture, card text and any product that related to it.</li>\r\n                        <li>I do not own any of Yu-Gi-Oh card layers and fonts use in this project.</li>\r\n                        <li>If you want to modify card layers, or use it in any public project, please contact <a\r\n                            href=\"https://www.deviantart.com/grezar\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\">Grezar</a> directly.</li>\r\n                    </ul>\r\n                </div>}>\r\n                    <ExclamationCircleOutlined className=\"disclaimer-icon\" />\r\n                </Popover>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n}, () => true);\r\n\r\nexport const taintedCanvasWarning = <Popover\r\n    overlayClassName=\"disclaimer-overlay\"\r\n    style={{ display: 'inline-block' }}\r\n    content={<div className=\"disclaimer\">\r\n        <h2>What is a tainted canvas?</h2>\r\n        <p>\r\n        You are using an image host that does not get the \"approval\" needed to be draw to the app. Browsers see it as a potential security risk (even if it is not the case), and mark the canvas as \"tainted\".\r\n        </p>\r\n        <h2>How does it affect me?</h2>\r\n        <p>\r\n        A \"tainted canvas\" prevent all sort of automatic save. From then on you must save the card manually by right click it → \"Save image as...\". It is implying that this action is fully as your concern.<br />\r\n        Furthemore, once it get tainted, it will remains tainted even if you switch to other \"safe\" image host.\r\n        </p>\r\n        <h2>How do I fix it?</h2>\r\n        <p>\r\n        Change to other host (\"imgur\" for example, Facebook and Twitter will also work just fine) THEN refresh the page.<br />\r\n        If you cannot afford to do that, the app will also work mostly just fine, you only need to manually save the card (and keep cautious).\r\n        </p>\r\n    </div>}>\r\n    <ExclamationCircleOutlined className=\"disclaimer-icon\" />\r\n</Popover>;","export type FontSize = {\r\n    fontSize: number,\r\n    lineHeight: number,\r\n    lineCount: number,\r\n};\r\nexport type BoxSize = {\r\n\twidth: number,\r\n\ttop: number,\r\n\tleft: number,\r\n};\r\n\r\nexport const monsterFontList: FontSize[] = [\r\n    { fontSize: 17, lineHeight: 17, lineCount: 6 },\r\n    { fontSize: 14, lineHeight: 14, lineCount: 7 },\r\n    { fontSize: 12, lineHeight: 12, lineCount: 8 },\r\n    { fontSize: 11, lineHeight: 11, lineCount: 9 },\r\n    { fontSize: 10, lineHeight: 10, lineCount: 10 },\r\n    { fontSize: 9, lineHeight: 9, lineCount: 11 },\r\n    { fontSize: 8, lineHeight: 8, lineCount: 12 },\r\n];\r\nexport const monsterSizeList: BoxSize[] = [\r\n    { width: 463, top: 620, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n];\r\nexport const monsterVanillaFontList: FontSize[] = [\r\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 6 },\r\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 7 },\r\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 8 },\r\n];\r\n\r\nexport const pendulumFontList: FontSize[] = [\r\n    { fontSize: 16.41, lineHeight: 16.44, lineCount: 5 },\r\n    { fontSize: 16.41, lineHeight: 16.44, lineCount: 5 },\r\n];\r\nexport const pendulumSizeList: BoxSize[] = [\r\n    { width: 375, top: 504.5, left: 87.05 },\r\n    { width: 375, top: 504.5, left: 87.05 },\r\n];\r\n\r\nexport const stFontList: FontSize[] = [\r\n    { fontSize: 16.41, lineHeight: 16.74, lineCount: 8 },\r\n    { fontSize: 13.46, lineHeight: 14.28, lineCount: 10 },\r\n];\r\nexport const stSizeList: BoxSize[] = [\r\n    { width: 461, top: 601, left: 45 },\r\n    { width: 461, top: 601, left: 45 },\r\n];\r\n\r\nexport type TypeSize = {\r\n\ttop: number,\r\n\tleft: number,\r\n    bracketSize: {\r\n        char: number,\r\n        bracketSpace: number,\r\n        bracketOffsetTop: number,\r\n    },\r\n    upperCaseSize: number,\r\n    upperCaseScale: number,\r\n    lowerCaseSize: number,\r\n    lowerCaseScale: number,\r\n    spaceScale: number,\r\n    spaceSize: {\r\n        frontSpace: number,\r\n        char: number,\r\n        behindSpace: number,\r\n    },\r\n    iconSpace: number,\r\n};\r\nexport const typeSizeMap: Record<string, TypeSize> = {\r\n    small: {\r\n        top: 622,\r\n        left: 43,\r\n        bracketSize: {\r\n            char: 18.71,\r\n            bracketSpace: 8.51,\r\n            bracketOffsetTop: 1.64,\r\n        },\r\n        upperCaseSize: 20,\r\n        upperCaseScale: 1,\r\n        lowerCaseSize: 16,\r\n        lowerCaseScale: 1.1,\r\n        spaceScale: 1,\r\n        spaceSize: {\r\n            frontSpace: 5,\r\n            char: 21,\r\n            behindSpace: 15,\r\n        },\r\n        iconSpace: 0,\r\n    },\r\n    medium: {\r\n        top: 620.80,\r\n        left: 43,\r\n        bracketSize: {\r\n            char: 19.69,\r\n            bracketSpace: 8.51,\r\n            bracketOffsetTop: 1.64,\r\n        },\r\n        upperCaseSize: 21,\r\n        upperCaseScale: 1,\r\n        lowerCaseSize: 18,\r\n        lowerCaseScale: 0.95,\r\n        spaceScale: 1,\r\n        spaceSize: {\r\n            frontSpace: 5,\r\n            char: 23,\r\n            behindSpace: 15,\r\n        },\r\n        iconSpace: 0,\r\n    },\r\n    large: {\r\n        top: 126,\r\n        left: 494,\r\n        bracketSize: {\r\n            char: 25,\r\n            bracketSpace: 11,\r\n            bracketOffsetTop: 2,\r\n        },\r\n        upperCaseSize: 26,\r\n        upperCaseScale: 1.1,\r\n        lowerCaseSize: 23,\r\n        lowerCaseScale: 1,\r\n        spaceScale: 1.4,\r\n        spaceSize: {\r\n            frontSpace: 5,\r\n            char: 23,\r\n            behindSpace: 15,\r\n        },\r\n        iconSpace: 32,\r\n    },\r\n};","export const arrowPositionList = [\r\n    { top: 126, left: 46, width: 50, height: 51 },\r\n    { top: 116, left: 226, width: 99, height: 32 },\r\n    { top: 126, left: 453, width: 51, height: 51 },\r\n    { top: 305, left: 35, width: 33, height: 99 },\r\n    { top: 0, left: 0, width: 0, height: 0 },   // Middle\r\n    { top: 305, left: 482, width: 32, height: 99 },\r\n    { top: 534, left: 46, width: 50, height: 50 },\r\n    { top: 562, left: 226, width: 99, height: 33 },\r\n    { top: 534, left: 453, width: 51, height: 50 },\r\n];\r\n\r\nexport const foilPosition: Record<string, {\r\n    art: { left: number }\r\n}> = {\r\n    gold: {\r\n        art: {\r\n            left: 2,\r\n        }\r\n    },\r\n    platinum: {\r\n        art: {\r\n            left: 1,\r\n        }\r\n    },\r\n};","import { FontSize, monsterFontList, BoxSize, monsterSizeList } from '../const';\r\nimport { defaultTextStyle, TextStyle } from '../model';\r\nimport { splitEffect, createCondenser, quoteConvert } from '../util';\r\n\r\nexport const drawName = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    baseline: number,\r\n    maxWidth: number,\r\n    style: TextStyle,\r\n) => {\r\n    if (ctx && value) {\r\n        ctx.fillStyle = style.fillStyle;\r\n        if (style.hasShadow) {\r\n            ctx.shadowColor = style.shadowColor;\r\n            ctx.shadowOffsetY = style.shadowOffsetY;\r\n            ctx.shadowOffsetX = style.shadowOffsetX;\r\n            ctx.shadowBlur = style.shadowBlur;\r\n        }\r\n        const splittedText = quoteConvert(value).split(/([^&A-Za-z0-9\\-/\\s()])/g);\r\n        const contentWidth = splittedText\r\n            .reduce((prev, cur, index) => {\r\n                if (index % 2 === 0) ctx.font = '64.59px MatrixRegularSmallCaps';\r\n                else ctx.font = '54.59px matrix';\r\n\r\n                return prev + ctx.measureText(cur).width;\r\n            }, 0);\r\n\r\n        // ctx.fillText(value, edge, baseline, maxWidth);\r\n        if (contentWidth > 0) {\r\n            const condenseRatio = Math.min(maxWidth / contentWidth, 1);\r\n            ctx.scale(condenseRatio, 1);\r\n            splittedText\r\n                .reduce((prev, cur, index) => {\r\n                    if (index % 2 === 0) ctx.font = '64.59px MatrixRegularSmallCaps';\r\n                    else ctx.font = 'small-caps 54.59px matrix';\r\n    \r\n                    ctx.fillText(cur, prev / condenseRatio, baseline);\r\n                    return prev + ctx.measureText(cur).width * condenseRatio;\r\n                }, edge);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n        ctx.fillStyle = defaultTextStyle.fillStyle;\r\n        ctx.shadowColor = defaultTextStyle.shadowColor;\r\n        ctx.shadowOffsetY = defaultTextStyle.shadowOffsetY;\r\n        ctx.shadowOffsetX = defaultTextStyle.shadowOffsetX;\r\n        ctx.shadowBlur = defaultTextStyle.shadowBlur;\r\n    }\r\n};\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx && value) {\r\n        const digitList = `${value}`.split('');\r\n        let totalWidth = 0;\r\n\r\n        digitList.forEach(digit => {\r\n            totalWidth += (digit === '1' ? ctx.measureText(digit).width * 0.65 : ctx.measureText(digit).width);\r\n        });\r\n        let accLeft = edge - totalWidth / 2;\r\n\r\n        digitList.forEach(digit => {\r\n            ctx.fillText(digit, digit === '1' ? accLeft - 3 : accLeft, baseline);\r\n            accLeft += (digit === '1' ? ctx.measureText(digit).width * 0.65 : ctx.measureText(digit).width);\r\n        });\r\n    }\r\n};\r\n\r\nexport const drawEffect = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isPendulumEffect = false,\r\n    isNormal = false,\r\n    fontList: FontSize[] = monsterFontList,\r\n    sizeList: BoxSize[] = monsterSizeList,\r\n) => {\r\n    const normalizedContent = quoteConvert(content);\r\n    let effectIndexSize = 0;\r\n    if (ctx && content) {\r\n        const tolerantPerSentence: Record<string, number> = {\r\n            '1': 645,\r\n            '2': 665,\r\n            '3': 685,\r\n        };\r\n        const {\r\n            body: effectBody,\r\n            flavorCondition: effectFlavorCondition,\r\n            material: effectMaterial,\r\n        } = isPendulumEffect\r\n            ? {\r\n                body: normalizedContent,\r\n                flavorCondition: '',\r\n                material: '',\r\n            } : splitEffect(normalizedContent, isNormal);\r\n\r\n        const additionalLineCount = (effectMaterial.length > 0 ? 1 : 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\r\n        const sentencizeText = effectBody.split('\\n');\r\n        const bulletSymbol = '●';\r\n        const bulletSymbolWidth = 15;\r\n        const specialSymbol = '#@∞';\r\n        const breakableSymbol = '\\\\s-';\r\n        \r\n        const tokenizeR = new RegExp(`([${specialSymbol}${breakableSymbol}])`, 'g');\r\n        const specialSymbolReg = new RegExp(specialSymbol, 'g');\r\n\r\n        while(effectIndexSize < fontList.length) {\r\n            const { fontSize, lineHeight, lineCount } = fontList[effectIndexSize];\r\n            const { left, width: basedWidth, top } = sizeList[effectIndexSize];\r\n            const width = isNormal ? basedWidth - 2 : basedWidth;\r\n            const condenser = createCondenser();\r\n            let effectiveRatio = 1000;\r\n\r\n            const maxLine = Math.max(sentencizeText.length, lineCount);\r\n\r\n            ctx.font = `${isNormal ? 'italic' : ''} ${fontSize}px MatrixBook`;\r\n            ctx.textAlign = 'left';\r\n\r\n            const switchFont = (func: () => void) => {\r\n                const tempFont = ctx.font;\r\n                const largeSize = fontSize * 1.15;\r\n                ctx.font = tempFont.replace('MatrixBook', 'matrix').replace(`${fontSize}`, `${largeSize}`);\r\n                func();\r\n                ctx.font = tempFont;\r\n            };\r\n\r\n            // [CREATE SENTENCE ON EACH LINE]\r\n            let lineList: { text: string, width: number, isLast: boolean }[] = [];\r\n            const createSentence = () => {\r\n                lineList = [];\r\n\r\n                return sentencizeText.reduce((prev, curr) => {\r\n                    // The width is \"expand\" based on condense ratio so all the calculate does not need to be scaled\r\n                    const condenseRatio = condenser.getMedian() / 1000;\r\n                    const hypoWidth = width / condenseRatio;\r\n                    const tokenizedText = curr.split(tokenizeR);\r\n                    let currentLineCount = 1;\r\n                    let tokenSentence: string[] = [];\r\n                    let totalWidth = 0;\r\n\r\n                    for (let cnt = 0; cnt < tokenizedText.length; cnt++) {\r\n                        let tokenWidth = 0;\r\n                        /**\r\n                         * If bullet symbol is met, it will become \"wider\" based on condense ratio\r\n                         * so that when the whole line is condense, bullet symbol's width become\r\n                         * \"normal\", as if it were not condensed\r\n                         */\r\n                        if (tokenizedText[cnt] === bulletSymbol) tokenWidth = bulletSymbolWidth / condenseRatio;\r\n                        /**\r\n                         * Some special symbol required different font\r\n                         */\r\n                        else if (specialSymbolReg.test(tokenizedText[cnt])) {\r\n                            switchFont(() => {\r\n                                tokenWidth = ctx.measureText(tokenizedText[cnt]).width;\r\n                            });\r\n                        } else tokenWidth = ctx.measureText(tokenizedText[cnt]).width;\r\n                        if (totalWidth + tokenWidth > hypoWidth) {\r\n                            // If the next token cause overflow, wrap it down\r\n                            const fullString = tokenSentence.join('').trim();\r\n                            // Calculate the line width as if the bullet is wider\r\n                            const fullStringSplittedByBullet = fullString.split(bulletSymbol);\r\n                            lineList.push({\r\n                                text: fullString,\r\n                                width: fullStringSplittedByBullet.reduce((prev, curr) => prev + ctx.measureText(curr).width, 0)\r\n                                    + (fullStringSplittedByBullet.length - 1) * bulletSymbolWidth / condenseRatio,\r\n                                isLast: false,\r\n                            });\r\n                            totalWidth = tokenWidth;\r\n                            tokenSentence = [tokenizedText[cnt]];\r\n                            currentLineCount += 1;\r\n                        } else {\r\n                            totalWidth += tokenWidth;\r\n                            tokenSentence.push(tokenizedText[cnt]);\r\n                        }\r\n                    }\r\n\r\n                    const fullString = tokenSentence.join('').trim();\r\n                    const fullStringSplittedByBullet = fullString.split(bulletSymbol);\r\n                    lineList.push({\r\n                        text: fullString,\r\n                        width: fullStringSplittedByBullet.reduce((prev, curr) => prev + ctx.measureText(curr).width, 0)\r\n                            + (fullStringSplittedByBullet.length - 1) * bulletSymbolWidth / condenseRatio,\r\n                        isLast: true,\r\n                    });\r\n    \r\n                    return prev + currentLineCount;\r\n                }, 0) + additionalLineCount;\r\n            };\r\n\r\n            // [FIND SUITABLE CONDENSE RATIO]\r\n            while (condenser.getIterateCount() >= 0) {\r\n                if (condenser.getIterateCount() <= 0) {\r\n                    // When out of iteration, return the concluded median\r\n                    effectiveRatio = condenser.getMedian();\r\n                    break;\r\n                } else {\r\n                    const lineCount = createSentence();\r\n\r\n                    if (lineCount > maxLine) {\r\n                        // If overflow, lower the median and apply it\r\n                        condenser.searchDown();\r\n                    } else {\r\n                        if (condenser.getMedian() === 1000) break;\r\n                        else effectiveRatio = condenser.reverseSearch();\r\n                    }\r\n                }\r\n            }\r\n\r\n            // [START DRAWING]\r\n            const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number) => {\r\n                ctx.beginPath();\r\n                ctx.arc(edge + 7, baseline - 5.5, 5.5, 0, 2 * Math.PI, false);\r\n                ctx.fill();\r\n                ctx.lineWidth = 1;\r\n                ctx.strokeStyle = '#003300';\r\n                ctx.stroke();\r\n            };\r\n            if ((effectiveRatio < (tolerantPerSentence[`${sentencizeText.length}`] ?? tolerantPerSentence['3']))\r\n            && effectIndexSize < fontList.length - 1) {\r\n                effectIndexSize += 1;\r\n            } else {\r\n                ctx?.clearRect(0, 0, 549, 750);\r\n                let baseline = top + lineHeight;\r\n                if (effectMaterial.length > 0) {\r\n                    let actualWidth = ctx.measureText(effectMaterial).width;\r\n                    let condenseRatio = Math.min(width / actualWidth, 1);\r\n\r\n                    ctx.scale(condenseRatio, 1);\r\n                    ctx.fillText(effectMaterial, left / condenseRatio, baseline);\r\n                    baseline += lineHeight;\r\n                    ctx.scale(1 / condenseRatio, 1);\r\n                }\r\n\r\n                const sigmoidRatio = effectiveRatio / 1000; // Fancy way to force ratio in to 0-1 range\r\n                lineList.forEach(({\r\n                    text,\r\n                    width: actualWidth,\r\n                    isLast,\r\n                }) => {\r\n                    const condenseRatio = isLast\r\n                        ? Math.min(sigmoidRatio, 1)\r\n                        : width / actualWidth;\r\n\r\n                    if (condenseRatio <= 1) {\r\n                        ctx.scale(condenseRatio, 1);\r\n                        const splitter = new RegExp(`([${bulletSymbol}${specialSymbol}])`, 'g');\r\n                        const splittedText = text.split(splitter);\r\n\r\n                        splittedText.reduce((prev, cur, index) => {\r\n                            let edge = prev;\r\n\r\n                            // Normal text\r\n                            if (index % 2 === 0) {\r\n                                ctx.fillText(cur, edge / condenseRatio, baseline);\r\n                                edge += ctx.measureText(cur).width * condenseRatio;\r\n                            } else {\r\n                                // Special bullet\r\n                                if (cur === bulletSymbol) {\r\n                                    ctx.scale(1 / condenseRatio, 1);\r\n                                    drawBullet(ctx, edge, baseline);\r\n                                    edge += 15;\r\n                                    ctx.scale(condenseRatio, 1);\r\n                                } else {\r\n                                    switchFont(() => {\r\n                                        ctx.fillText(cur, edge / condenseRatio, baseline);\r\n                                        edge += ctx.measureText(cur).width * condenseRatio;\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            return edge;\r\n                        }, left);\r\n                        baseline += lineHeight;\r\n                        ctx.scale(1 / condenseRatio, 1);\r\n                    } else {\r\n                        const splitter = new RegExp(`([${bulletSymbol}${specialSymbol} ])`, 'g');\r\n                        const spaceSeparatedText = text.split(splitter);\r\n                        ctx.scale(1, 1);\r\n                        let nonSpaceWidth = 0;\r\n                        let spaceCount = 0;\r\n\r\n                        spaceSeparatedText.forEach(entry => {\r\n                            if (entry === ' ') spaceCount += 1;\r\n                            else if (entry === bulletSymbol) nonSpaceWidth += 15;\r\n                            else if (specialSymbolReg.test(entry)) {\r\n                                switchFont(() => nonSpaceWidth += ctx.measureText(entry).width);\r\n                            } else nonSpaceWidth += ctx.measureText(entry).width;\r\n                        });\r\n                        // Split text by \"space\", then distribute remaining width to those spaces, resulting in \"widen\" space\r\n                        const spaceWidth = spaceCount > 0 ? (width - nonSpaceWidth) / spaceCount : 0;\r\n\r\n                        spaceSeparatedText.reduce((prev, cur, index) => {\r\n                            let edge = prev;\r\n\r\n                            // Normal text\r\n                            if (index % 2 === 0) {\r\n                                ctx.fillText(cur, edge, baseline);\r\n                                edge += ctx.measureText(cur).width;\r\n                            } else {\r\n                                // Special bullet\r\n                                if (cur === bulletSymbol) {\r\n                                    drawBullet(ctx, edge, baseline);\r\n                                    edge += 15;\r\n                                } else if (cur === ' ') {\r\n                                    edge += spaceWidth;\r\n                                } else {\r\n                                    switchFont(() => {\r\n                                        ctx.fillText(cur, edge, baseline);\r\n                                        edge += ctx.measureText(cur).width;\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            return edge;\r\n                        }, left);\r\n                        baseline += lineHeight;\r\n                    }\r\n                });\r\n\r\n                if (effectFlavorCondition.length > 0) {\r\n                    let actualWidth = ctx.measureText(effectFlavorCondition).width;\r\n                    let condenseRatio = Math.min(width / actualWidth, 1);\r\n\r\n                    ctx.font = `${fontSize}px MatrixBook`;\r\n                    ctx.scale(condenseRatio, 1);\r\n                    ctx.fillText(effectFlavorCondition, left / condenseRatio, baseline);\r\n                    baseline += lineHeight;\r\n                    ctx.scale(1 / condenseRatio, 1);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return effectIndexSize;\r\n    }\r\n    return effectIndexSize;\r\n};","export const measureWithSymbol = (\r\n    ctx: CanvasRenderingContext2D,\r\n    content: string,\r\n    symbol: string,\r\n    maxWidth: number,\r\n) => {\r\n    const splittedContent = content.split(symbol);\r\n    const splittedWidth = splittedContent.map(entry => ctx.measureText(entry).width);\r\n    const symbolWidth = ctx.measureText(symbol).width;\r\n    const totalCondensableWidth = splittedWidth.reduce((prev, curr) => prev + curr, 0);\r\n    const returnBundle = {\r\n        splittedContent,\r\n        splittedWidth,\r\n        symbolWidth,\r\n        totalCondensableWidth,\r\n        condenseRatio: 1,\r\n    };\r\n\r\n    if (totalCondensableWidth > 0) {\r\n        // Calculate as if the \"symbol\" always appear as full width\r\n        returnBundle.condenseRatio = Math.min((maxWidth - (splittedWidth.length - 1) * symbolWidth) / totalCondensableWidth, 1);\r\n    }\r\n\r\n    return returnBundle;\r\n};\r\n\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx && str) {\r\n        ctx.textAlign = 'left';\r\n        const charList = str.split('');\r\n        let curLeft = edge;\r\n\r\n        charList.forEach(char => {\r\n            ctx.fillText(char, curLeft, baseline);\r\n            curLeft += ctx.measureText(char).width * (1 + (letterSpacingRatio / 2));\r\n        });\r\n\r\n        return curLeft;\r\n    }\r\n    return 0;\r\n};\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx && str) {\r\n        ctx.textAlign = 'right';\r\n        const charList = str.split('');\r\n        let curRight = edge;\r\n\r\n        charList.forEach((c, index) => {\r\n            const char = charList[charList.length - index - 1];\r\n            ctx.fillText(char, curRight, baseline);\r\n            curRight -= ctx.measureText(char).width * (1 + (letterSpacingRatio / 2));\r\n        });\r\n        return curRight;\r\n    };\r\n    return edge;\r\n};\r\n\r\nexport const fillTextLeftWithLimit = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    edge: number,\r\n    baseline: number,\r\n    maxWidth: number,\r\n) => {\r\n    if (ctx) {\r\n        const contentWidth = ctx.measureText(content).width;\r\n\r\n        if (contentWidth > 0) {\r\n            const condenseRatio = Math.min(maxWidth / contentWidth, 1);\r\n            ctx.scale(condenseRatio, 1);\r\n            ctx.fillText(content, edge / condenseRatio, baseline);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n            ctx.fillStyle = '#000000';\r\n        }\r\n    }\r\n};","import { fillTextRightWithSpacing, measureWithSymbol } from './util';\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    edge = 99,\r\n) => {\r\n    if (ctx) {\r\n        ctx.font = 'bold 16px palatino-linotype-bold';\r\n\r\n        let left = edge;\r\n        ctx.fillText('1', left, 777);\r\n        left += ctx.measureText('1').width - 2;\r\n\r\n        ctx.font = 'bold 12px palatino-linotype-bold';\r\n        ctx.fillText('st', left, 777 - 5);\r\n        left += ctx.measureText('st').width;\r\n\r\n        ctx.font = 'bold 15px palatino-linotype-bold';\r\n        ctx.fillText(' Edition', left, 777);\r\n    }\r\n};\r\n\r\nexport const drawCreatorText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n) => {\r\n    if (ctx && content) {\r\n        ctx.font = '16px stone-serif-regular';\r\n\r\n        const uncondensableSymbol = '©';\r\n        const {\r\n            splittedContent,\r\n            splittedWidth,\r\n            symbolWidth,\r\n            condenseRatio,\r\n        } = measureWithSymbol(ctx, content, uncondensableSymbol, 257);\r\n\r\n        if (condenseRatio < 1) {\r\n            ctx.textAlign = 'left';\r\n            ctx.scale(condenseRatio, 1);\r\n            splittedContent.reduce((prev, cur, index) => {\r\n                // Fill condense text at the current edge\r\n                ctx.fillText(cur, prev / condenseRatio, 777);\r\n                // Increase edge equal to the draw text (condense ratio factored)\r\n                let nextEdge = prev + splittedWidth[index] * condenseRatio;\r\n                if (index < splittedContent.length - 1) {\r\n                    // Restore 1:1 ratio\r\n                    ctx.scale(1 / condenseRatio, 1);\r\n                    // Increase edge equal to the character \"©\" (condense ratio is 1 so no factored)\r\n                    ctx.fillText(uncondensableSymbol, nextEdge, 777);\r\n                    nextEdge += symbolWidth;\r\n                    // Restore condense ratio\r\n                    ctx.scale(condenseRatio, 1);\r\n                }\r\n                return nextEdge;\r\n            }, 496 - 257);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        } else {\r\n            ctx.textAlign = 'right';\r\n            fillTextRightWithSpacing(ctx, content, -0.15, 496 / condenseRatio, 777);\r\n        }\r\n        ctx.textAlign = 'left';\r\n    }\r\n};\r\n\r\nexport const drawAD = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    $value: string | number,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx && $value !== undefined) {\r\n        ctx.textAlign = 'left';\r\n        const tokenizedText = `${$value}`.split('?');\r\n\r\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n            ctx.font = '25px MatrixBoldSmallCaps';\r\n            let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n            if (index < tokenizedText.length - 1) {\r\n                ctx.font = '25px matrix';\r\n                nextWidth += ctx.measureText('?').width;\r\n            }\r\n\r\n            return nextWidth;\r\n        }, 0);\r\n\r\n        if (totalWidth > 0) {\r\n            const condenseRatio = Math.min(49.94 / totalWidth, 1);\r\n\r\n            ctx.scale(condenseRatio, 1);\r\n            tokenizedText.reduce((prev, curr, index, arr) => {\r\n                const curText = arr[arr.length - 1 - index];\r\n                let nextEdge = prev;\r\n                ctx.font = '25px MatrixBoldSmallCaps';\r\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = 'bold 25px matrix';\r\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\r\n                }\r\n    \r\n                return nextEdge;\r\n            }, edge + 49.94);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n    }\r\n};","import { TypeSize } from '../const';\r\n\r\ntype Aligment = 'left' | 'right';\r\nexport const drawBracketTemplate = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    size: TypeSize,\r\n    alignment: Aligment,\r\n) => {\r\n    return (edge: number) => {\r\n        if (ctx) {\r\n            const {\r\n                top: baseline,\r\n                bracketSize: { char: bracketChar, bracketOffsetTop }\r\n            } = size;\r\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\r\n\r\n            ctx.font = `bold ${bracketChar}px stone-serif-bold`;\r\n            ctx.textAlign = alignment;\r\n            ctx.fillText(content, edge, baseline - bracketOffsetTop);\r\n            return edge + ctx.measureText(content).width * alignmentOffset;\r\n        }\r\n        return edge;\r\n    };\r\n};\r\nexport const drawIconSpaceTemplate = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    size: TypeSize,\r\n    alignment: Aligment,\r\n) => {\r\n    return (edge: number) => {\r\n        if (ctx) {\r\n            const { iconSpace } = size;\r\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\r\n\r\n            return edge + iconSpace * alignmentOffset;\r\n        }\r\n        return edge;\r\n    };\r\n};\r\nexport const drawBracketSpaceTemplate = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    size: TypeSize,\r\n    alignment: Aligment,\r\n) => {\r\n    return (edge: number) => {\r\n        if (ctx) {\r\n            const { top: baseline, bracketSize: { bracketSpace } } = size;\r\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\r\n\r\n            ctx.font = `bold ${bracketSpace}px stone-serif-bold`;\r\n            ctx.textAlign = alignment;\r\n            ctx.fillText(content, edge, baseline);\r\n            return edge + ctx.measureText(content).width * alignmentOffset;\r\n        }\r\n        return edge;\r\n    };\r\n};\r\nexport const drawTextTemplate = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isLast = false,\r\n    size: TypeSize,\r\n    alignment: Aligment,\r\n) => {\r\n    const {\r\n        top: baseline,\r\n        spaceSize: { frontSpace, char: spaceChar, behindSpace },\r\n        upperCaseScale,\r\n        upperCaseSize,\r\n        lowerCaseScale,\r\n        lowerCaseSize,\r\n        spaceScale,\r\n    } = size;\r\n    const alignmentOffset = alignment === 'left' ? 1 : -1;\r\n    const drawSlashTemplate = (\r\n        ctx: CanvasRenderingContext2D,\r\n        baseOffset: number,\r\n    ) => {\r\n        let totalOffset = baseOffset;\r\n        ctx.font = `bold ${frontSpace}px stone-serif-bold`;\r\n        ctx.fillText(' ', totalOffset, baseline);\r\n        totalOffset += ctx.measureText(' ').width * alignmentOffset;\r\n\t\r\n        ctx.font = `oblique bold ${spaceChar}px stone-serif-bold`;\r\n        ctx.scale(0.65, 1);\r\n        ctx.fillText('/', totalOffset / 0.65, baseline);\r\n        totalOffset += ctx.measureText('/').width * 0.65 * alignmentOffset;\r\n        ctx.scale(1 / 0.65, 1);\r\n\t\r\n        ctx.font = `bold ${behindSpace}px stone-serif-bold`;\r\n        ctx.fillText(' ', totalOffset, baseline);\r\n        totalOffset += ctx.measureText(' ').width * alignmentOffset;\r\n        return totalOffset;\r\n    };\r\n\r\n    return (left: number) => {\r\n        let totalOffset = left;\r\n        if (ctx) {\r\n            ctx.textAlign = alignment;\r\n\r\n            if (!isLast && alignment === 'right') totalOffset = drawSlashTemplate(ctx, totalOffset);\r\n            content\r\n                .split('')\r\n                .forEach((c, index, arr) => {\r\n                    const char = alignment === 'left' ? arr[index] : arr[arr.length - 1 - index];\r\n                    if (/[A-Z]/.test(char)) {\r\n                        ctx.font = `bold ${upperCaseSize}px stone-serif-bold`;\r\n                        ctx.scale(upperCaseScale, 1);\r\n                        ctx.fillText(char, totalOffset / upperCaseScale, baseline);\r\n                        totalOffset += ctx.measureText(char).width * upperCaseScale * alignmentOffset;\r\n                        ctx.scale(1 / upperCaseScale, 1);\r\n                    } else if (/\\s/.test(char)) {\r\n                        ctx.font = `bold ${lowerCaseSize}px stone-serif-bold`;\r\n                        ctx.scale(spaceScale, 1);\r\n                        ctx.fillText(char, totalOffset / spaceScale, baseline);\r\n                        totalOffset += ctx.measureText(char).width * spaceScale * alignmentOffset;\r\n                        ctx.scale(1 / spaceScale, 1);\r\n                    } else {\r\n                        const upperChar = char.toLocaleUpperCase();\r\n                        ctx.font = `bold ${lowerCaseSize}px stone-serif-bold`;\r\n                        ctx.scale(lowerCaseScale, 1);\r\n                        ctx.fillText(upperChar, totalOffset / lowerCaseScale, baseline);\r\n                        totalOffset += ctx.measureText(upperChar).width * lowerCaseScale * alignmentOffset;\r\n                        ctx.scale(1 / lowerCaseScale, 1);\r\n                    }\r\n                });\r\n            if (!isLast && alignment === 'left') totalOffset = drawSlashTemplate(ctx, totalOffset);\r\n            return totalOffset;\r\n        }\r\n        return totalOffset;\r\n    };\r\n};","const imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n}> = {};\r\n\r\nexport const drawFromSource = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number),\r\n    sy: number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    if (!ctx) return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const img = imageCacheMap[source].image;\r\n            let normalizedX = typeof sx === 'number' ? sx : sx(img);\r\n            let normalizedY = typeof sy === 'number' ? sy : sy(img);\r\n            ctx.drawImage(img, normalizedX, normalizedY);\r\n            resolve(true);\r\n        } else {\r\n            const img = new Image();\r\n            img.src = process.env.PUBLIC_URL + source;\r\n            img.onload = () => {\r\n                let normalizedX = typeof sx === 'number' ? sx : sx(img);\r\n                let normalizedY = typeof sy === 'number' ? sy : sy(img);\r\n                ctx.drawImage(img, normalizedX, normalizedY);\r\n                imageCacheMap[source].ready = true;\r\n                resolve(true);\r\n            };\r\n            img.onerror = () => {\r\n                resolve(false);\r\n            };\r\n            imageCacheMap[source] = {\r\n                image: img,\r\n                ready: false,\r\n            };\r\n        }\r\n    });\r\n};\r\n\r\nexport const drawFromSourceWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number),\r\n    sy: number | ((image: HTMLImageElement) => number),\r\n    dw: number, dh: number,\r\n) => {\r\n    if (!ctx) return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const img = imageCacheMap[source].image;\r\n            let normalizedX = typeof sx === 'number' ? sx : sx(img);\r\n            let normalizedY = typeof sy === 'number' ? sy : sy(img);\r\n            ctx.drawImage(img, normalizedX, normalizedY, dw, dh);\r\n            resolve(true);\r\n        } else {\r\n            const img = new Image();\r\n            img.src = process.env.PUBLIC_URL + source;\r\n            img.onload = () => {\r\n                let normalizedX = typeof sx === 'number' ? sx : sx(img);\r\n                let normalizedY = typeof sy === 'number' ? sy : sy(img);\r\n                ctx.drawImage(img, normalizedX, normalizedY, dw, dh);\r\n                imageCacheMap[source].ready = true;\r\n                resolve(true);\r\n            };\r\n            img.onerror = () => {\r\n                resolve(false);\r\n            };\r\n            imageCacheMap[source] = {\r\n                image: img,\r\n                ready: false,\r\n            };\r\n        }\r\n    });\r\n};","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport './app.scss';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n    Card,\r\n    defaultCard,\r\n    defaultTextStyle,\r\n    foilStyleMap,\r\n    iconList,\r\n} from './model';\r\nimport {\r\n    cardDataCondenser,\r\n    checkLink,\r\n    checkMonster,\r\n    checkNormal,\r\n    checkXyz,\r\n    getCardFrame,\r\n    insertUrlParam,\r\n    reverseCardDataCondenser,\r\n} from './util';\r\nimport { AppHeader, CardInputPanel, taintedCanvasWarning } from './page';\r\nimport {\r\n    arrowPositionList,\r\n    foilPosition,\r\n    pendulumFontList,\r\n    pendulumSizeList,\r\n    stFontList,\r\n    stSizeList,\r\n    typeSizeMap,\r\n} from './const';\r\nimport {\r\n    draw1stEdition,\r\n    drawAD,\r\n    drawBracketSpaceTemplate,\r\n    drawBracketTemplate,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawIconSpaceTemplate,\r\n    drawName,\r\n    drawScale,\r\n    drawTextTemplate,\r\n    fillTextLeftWithSpacing,\r\n    fillTextRightWithSpacing,\r\n    drawFromSource,\r\n    drawFromSourceWithSize,\r\n} from './draw';\r\nimport WebFont from 'webfontloader';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nfunction App() {\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [currentCard, setCard] = useState<Card>(defaultCard);\r\n    const [sourceType, setSourceType] = useState<'internal' | 'external'>('external');\r\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const drawCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const artCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const specialFrameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const subFamilyCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const attributeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const ADCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdRef = useRef<HTMLCanvasElement>(null);\r\n    const passcodeRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerRef = useRef<HTMLCanvasElement>(null);\r\n\r\n    const {\r\n        frame, foil,\r\n        name, nameStyleType, nameStyle,\r\n        pictureCrop,\r\n        effect,\r\n        type_ability,\r\n        isPendulum, pendulum_effect, blue_scale, red_scale,\r\n        atk, def, link_map,\r\n        attribute,\r\n        subFamily,\r\n        star,\r\n        set_id,\r\n        passcode, isFirstEdition, creator, sticker,\r\n    } = currentCard;\r\n    const isNormal = checkNormal(currentCard);\r\n    const isXyz = checkXyz(currentCard);\r\n    const isLink = checkLink(currentCard);\r\n    const isMonster = checkMonster(currentCard);\r\n    const pendulumSize = 'medium';\r\n\r\n    const drawingPipeline = useRef<Record<string, () => Promise<any>>>({\r\n        frame: () => Promise.resolve(),\r\n        star: () => Promise.resolve(),\r\n        attribute: () => Promise.resolve(),\r\n        specialFrame: () => Promise.resolve(),\r\n        sticker: () => Promise.resolve(),\r\n    });\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const ctx = frameCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.frame = async () => {\r\n            ctx?.clearRect(0, 0, 549, 800);\r\n            const cardType = getCardFrame(frame);\r\n            const hasFoil = foil !== 'normal';\r\n\r\n            await drawFromSource(ctx, `/asset/image/frame/frame-${cardType}.png`, 0, 0);\r\n            if (hasFoil) {\r\n                const { art } = foilPosition[foil];\r\n\r\n                await drawFromSource(ctx, `/asset/image/frame/frame-art-${foil}.png`, art.left, 120);\r\n                await drawFromSource(ctx, `/asset/image/frame/frame-effect-${foil}.png`, 0, 580);\r\n            }\r\n        };\r\n    }, [foil, frame]);\r\n\r\n    useEffect(() => {\r\n        const ctx = artCanvasRef.current?.getContext('2d');\r\n        const previewCtx = previewCanvasRef.current;\r\n        if (previewCtx && ctx) {\r\n            ctx.clearRect(0, 0, 548, 650);\r\n            if (isPendulum) {\r\n                ctx.drawImage(previewCtx, 38, 144, 474, 470);\r\n            } else {\r\n                ctx.drawImage(previewCtx, 67, 147, 416, 416);\r\n            }\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isPendulum, imageChangeCount]);\r\n\r\n    useEffect(() => {\r\n        const ctx = specialFrameCanvasRef.current?.getContext('2d');\r\n        \r\n        drawingPipeline.current.specialFrame = async () => {\r\n            ctx?.clearRect(0, 0, 549, 800);\r\n            const hasFoil = foil !== 'normal';\r\n\r\n            const cardType = getCardFrame(frame);\r\n            if (isPendulum && !isLink) {\r\n                if (!isXyz) await drawFromSource(ctx, `/asset/image/pendulum/overlay-pendulum-${cardType}.png`, 0, 0);\r\n                await drawFromSource(ctx, `/asset/image/frame/frame-pendulum-${pendulumSize}.png`, 0, 0);\r\n                if (hasFoil) await drawFromSource(ctx, `/asset/image/frame/frame-pendulum-${pendulumSize}-${foil}.png`, 0, 0);\r\n            }\r\n\r\n            const foiledBorder = !hasFoil ? '/asset/image/frame/frame-border.png' : `/asset/image/frame/frame-border-${foil}.png`;\r\n            await drawFromSource(ctx, foiledBorder, 0, 0);\r\n            if (!isPendulum && isLink) {\r\n                if (hasFoil) await drawFromSource(ctx, `./asset/image/link/link-overlay-${foil}.png`, 0, 110);\r\n                else await drawFromSource(ctx, '/asset/image/link/link-overlay.png', 66, 146);\r\n                if (hasFoil) await drawFromSource(ctx, `/asset/image/link/link-overlay-arrow-${foil}.png`, 0, 110);\r\n\r\n                await Promise.all(link_map\r\n                    .map(entry => {\r\n                        const { left, top, height, width } = arrowPositionList[parseInt(entry) - 1];\r\n                        if (hasFoil) return drawFromSourceWithSize(ctx, `/asset/image/link/link-arrow-${entry}-${foil}.png`, left, top, width, height);\r\n                        else return drawFromSourceWithSize(ctx, `/asset/image/link/link-arrow-${entry}.png`, left, top, width, height);\r\n                    })\r\n                );\r\n                if (ctx) {\r\n                    ctx.textAlign = 'right';\r\n                    ctx.scale(1.2, 1);\r\n                    ctx.font = 'bold 24px Yugioh Rush Duel Numbers V4';\r\n                    ctx.fillText(`${link_map.length}`, 505 / 1.2, 746);\r\n                    ctx.scale(1 / 1.2, 1);\r\n                    ctx.textAlign = 'left';\r\n                }\r\n            }\r\n        };\r\n    }, [foil, frame, isLink, isPendulum, isXyz, link_map]);\r\n\r\n    useEffect(() => {\r\n        const ctx = attributeCanvasRef.current?.getContext('2d');\r\n        drawingPipeline.current.attribute = () => {\r\n            ctx?.clearRect(0, 0, 549, 100);\r\n\r\n            return drawFromSource(ctx, `/asset/image/attribute/attr-${attribute.toLowerCase()}.png`, 458, 37);\r\n        };\r\n    }, [attribute]);\r\n\r\n    useEffect(() => {\r\n        const ctx = subFamilyCanvasRef.current?.getContext('2d');\r\n        drawingPipeline.current.star = () => {\r\n            ctx?.clearRect(0, 0, 549, 150);\r\n            if (isMonster && !isLink) {\r\n                let counter = Math.min(13, star ?? 0);\r\n                let type = isXyz ? 'rank' : 'level';\r\n                let offset = 0 - (34 + 2.3636);\r\n                let totalWidth = 34 * counter + 2.3636 * (counter - 1);\r\n                let edge = counter <= 12\r\n                    ? isXyz\r\n                        ? 57 - 34\r\n                        : 492\r\n                    : isXyz\r\n                        ? (549 - totalWidth) / 2 - 34\r\n                        : (549 - totalWidth) / 2 + totalWidth;\r\n    \r\n                return Promise.all([...Array(counter)]\r\n                    .map(() => {\r\n                        offset += (34 + 2.3636);\r\n                        return drawFromSource(\r\n                            ctx,\r\n                            `/asset/image/sub-family/subfamily-${type}.png`,\r\n                            edge + (34 + offset) * (isXyz ? 1 : -1),\r\n                            99,\r\n                        );\r\n                    })\r\n                );\r\n            } else if (!isMonster) {\r\n                const normalizedSubFamily = subFamily.toUpperCase();\r\n                const hasSTIcon = normalizedSubFamily !== 'NO ICON'\r\n                        && iconList.includes(normalizedSubFamily);\r\n    \r\n                return hasSTIcon\r\n                    ? drawFromSourceWithSize(ctx, `/asset/image/sub-family/subfamily-${normalizedSubFamily.toLowerCase()}.png`,\r\n                        (image) => 491 - image.naturalWidth - 7,\r\n                        103,\r\n                        29, 29)\r\n                    : new Promise(resolve => resolve(true));\r\n            };\r\n            return new Promise(resolve => resolve(true));\r\n        };\r\n    }, [isLink, isMonster, isXyz, star, subFamily]);\r\n\r\n    useEffect(() => {\r\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 600);\r\n        if (ctx && isPendulum) {\r\n            let fontSize = 43;\r\n            let top = 532 + fontSize;\r\n\r\n            ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n            ctx.textAlign = 'left';\r\n\r\n            drawScale(ctx, blue_scale ?? 0, 57, top);\r\n            drawScale(ctx, red_scale ?? 0, 493, top);\r\n        }\r\n    }, [isInitializing, blue_scale, isPendulum, red_scale]);\r\n\r\n    useEffect(() => {\r\n        const ctx = nameCanvasRef.current?.getContext('2d');\r\n        if (ctx) {\r\n            ctx.clearRect(0, 0, 549, 100);\r\n            ctx.textAlign = 'left';\r\n            const style = nameStyleType === 'auto'\r\n                ? foil !== 'normal'\r\n                    ? foilStyleMap[foil] ?? defaultTextStyle\r\n                    : { ...defaultTextStyle, fillStyle: isXyz ? '#ffffff' : '#000000' }\r\n                : nameStyle;\r\n\r\n            drawName(ctx, name, 40.52, 78, 409, style);\r\n        }\r\n    }, [foil, isInitializing, isXyz, name, nameStyle, nameStyleType]);\r\n\r\n    useEffect(() => {\r\n        const ctx = ADCanvasRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 800);\r\n        if (isMonster) {\r\n            drawAD(ctx, atk, 343.51, 747);\r\n            if (!isLink) {\r\n                drawAD(ctx, def, 454.93, 747);\r\n            }\r\n        }\r\n    }, [isInitializing, atk, def, isLink, isMonster]);\r\n\r\n    useEffect(() => {\r\n        const ctx = setIdRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 800);\r\n        if (ctx) {\r\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\r\n            else ctx.fillStyle = '#000';\r\n            ctx.font = '15px stone-serif-regular';\r\n\r\n            if (isPendulum) {\r\n                fillTextLeftWithSpacing(ctx, set_id, -0.1, 45, 746);\r\n            } else if (isLink) {\r\n                fillTextRightWithSpacing(ctx, set_id, -0.1, 450, 590);\r\n            } else fillTextRightWithSpacing(ctx, set_id, -0.1, 492, 589);\r\n        }\r\n    }, [isInitializing, isLink, isPendulum, isXyz, set_id]);\r\n\r\n    useEffect(() => {\r\n        const ctx = passcodeRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 800);\r\n        if (ctx) {\r\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\r\n            else ctx.fillStyle = '#000';\r\n            ctx.font = '15px stone-serif-regular';\r\n\r\n            const endOfPasscode = fillTextLeftWithSpacing(ctx, passcode, 0.1, 25, 777);\r\n            if (isFirstEdition) {\r\n                if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\r\n                else ctx.fillStyle = '#000';\r\n\r\n                draw1stEdition(ctx, endOfPasscode + 10);\r\n            }\r\n        }\r\n    }, [isFirstEdition, isInitializing, isLink, isPendulum, isXyz, passcode]);\r\n\r\n    useEffect(() => {\r\n        const ctx = creatorRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 800);\r\n        if (ctx) {\r\n            if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\r\n            else ctx.fillStyle = '#000';\r\n            \r\n            drawCreatorText(ctx, creator);\r\n        }\r\n    }, [isInitializing, isLink, isPendulum, isXyz, creator]);\r\n\r\n    useEffect(() => {\r\n        const ctx = stickerRef.current?.getContext('2d');\r\n        drawingPipeline.current.sticker = () => {\r\n            ctx?.clearRect(0, 0, 549, 800);\r\n\r\n            if (sticker === 'no-sticker') return Promise.resolve();\r\n            return drawFromSource(ctx, `/asset/image/sticker/sticker-${sticker.toLowerCase()}.png`, 499, 750);\r\n        };\r\n    }, [sticker]);\r\n\r\n    const drawTypeAbility  = useCallback((\r\n        ctx: CanvasRenderingContext2D | null | undefined,\r\n        textSize: 'small' | 'medium' | 'large',\r\n        alignment: 'left' | 'right' = 'left',\r\n    ) => {\r\n        if (ctx) {\r\n            ctx?.clearRect(0, 0, 549, 700);\r\n            const size = typeSizeMap[textSize] ?? typeSizeMap['medium'];\r\n            const { left } = size;\r\n            const normalizedSubFamily = subFamily.toUpperCase();\r\n            const instructionList = [\r\n                drawBracketTemplate(ctx, '[', size, alignment),\r\n                drawBracketSpaceTemplate(ctx, ' ', size, alignment),\r\n                ...type_ability.map((entry, index) => drawTextTemplate(\r\n                    ctx,\r\n                    entry,\r\n                    index === type_ability.length - 1,\r\n                    size, alignment)),\r\n                textSize === 'large'\r\n                    ? normalizedSubFamily === 'NO ICON'\r\n                        ? (edge: number) => edge + 4 * (alignment === 'left' ? 1 : -1)\r\n                        : drawIconSpaceTemplate(ctx, size, alignment)\r\n                    : (edge: number) => edge + 2,\r\n                drawBracketTemplate(ctx, ']', size, alignment),\r\n            ];\r\n            const totalLeft = (alignment === 'left'\r\n                ? instructionList\r\n                : instructionList.reverse()).reduce((prev, curr) => {\r\n                return curr(prev);\r\n            }, left);\r\n            ctx.textAlign = 'left';\r\n            if (totalLeft > 508 && textSize === 'medium') drawTypeAbility(ctx, 'small', alignment);\r\n        }\r\n    }, [subFamily, type_ability]);\r\n    useEffect(() => {\r\n        const ctx = effectCanvasRef.current?.getContext('2d');\r\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 750);\r\n        if (isMonster) {\r\n            const effectIndexSize = drawEffect(ctx, effect, false, isNormal);\r\n            drawTypeAbility(typeCtx, effectIndexSize === 0\r\n                ? 'medium'\r\n                : 'small');\r\n        } else {\r\n            drawEffect(\r\n                ctx,\r\n                effect,\r\n                false,\r\n                false,\r\n                stFontList,\r\n                stSizeList,\r\n            );\r\n            drawTypeAbility(typeCtx, 'large', 'right');\r\n        }\r\n    }, [isInitializing, drawTypeAbility, effect, isMonster, isNormal]);\r\n    useEffect(() => {\r\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\r\n        ctx?.clearRect(0, 0, 549, 600);\r\n        if (isMonster && isPendulum) {\r\n            drawEffect(\r\n                ctx,\r\n                pendulum_effect,\r\n                true,\r\n                false,\r\n                pendulumFontList,\r\n                pendulumSizeList,\r\n            );\r\n        }\r\n    }, [isInitializing, isMonster, isPendulum, pendulum_effect]);\r\n\r\n    // const drawRefrenceImage = useCallback(async (ctx: CanvasRenderingContext2D | null | undefined) => {\r\n    //     let leftOffset = -5;\r\n    //     let topOffset = 150;\r\n    // let leftOffset = -4;\r\n    // let topOffset = 300;\r\n    // let leftOffset = -300;\r\n    // let topOffset = -7;\r\n    // let leftOffset = -1;\r\n    // let topOffset = 100;\r\n    // await drawFromSourceWithSize(ctx, '/asset/image/MP19-EN-C-1E.png', -leftOffset, -topOffset, 541, 800 * (541 / 549));\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        const ctx = drawCanvasRef.current?.getContext('2d');\r\n        if (ctx) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            ctx.clearRect(0, 0, 549, 800);\r\n        }\r\n        \r\n        // let fontLoaded = false;\r\n        WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'stone-serif-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'MatrixBook',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixRegularSmallCaps',\r\n                    'Yugioh Rush Duel Numbers V4',\r\n                ],\r\n                urls: ['asset/font.css']\r\n            },\r\n            active: () => {\r\n                try {\r\n                    const localCardVersion = window.localStorage.getItem('card-version');\r\n                    const localCardData = window.localStorage.getItem('card-data');\r\n\r\n                    const urlParam = (new URLSearchParams(window.location.search)).get('data');\r\n                    if (urlParam) {\r\n                        setCard(reverseCardDataCondenser(urlParam) as any);\r\n                    } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n                        setCard(JSON.parse(localCardData));\r\n                    }\r\n                } catch (e) {\r\n                    setCard(defaultCard);\r\n                }\r\n                setInitializing(false);\r\n            },\r\n            inactive: () => {\r\n                setError('Font could not be loaded');\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, []);\r\n\r\n    const pendingSave = useRef(false);\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        queuedPipeline: false,\r\n    });\r\n\r\n    const download = useCallback(() => {\r\n        const canvasRef = drawCanvasRef.current;\r\n        if (canvasRef) try {\r\n            var link = document.createElement('a');\r\n            link.download = `${name}.png`;\r\n            link.href = canvasRef.toDataURL('image/png');\r\n            link.click();\r\n        } catch (e) {\r\n            setTainted(true);\r\n            alert('Could not save card, please manually save it by right click the card → Choose \"Save image as...\"');\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n    }, [name]);\r\n    const [isTainted, setTainted] = useState(false);\r\n    const onSave = () => {\r\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\r\n        if (exportRef.current.queuedPipeline === false) {\r\n            download();\r\n        } else pendingSave.current = true;\r\n    };\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        if (isInitializing === false) {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n\r\n            /**\r\n             * Run export pipeline\r\n             * - While it is running, every effect just mark pipeline as queued, then wait the current pipeline\r\n             * - If the pipeline is complete and there is no effect, run another pipeline and remove the queue\r\n             */\r\n            (async () => {\r\n                const canvasRef = drawCanvasRef.current;\r\n                if (canvasRef) {\r\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\r\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\r\n                    document.getElementById('save-button-ready')?.setAttribute('style', 'display: none');\r\n\r\n                    exportRef.current.queuedPipeline = true;\r\n                    await exportRef.current.currentPipeline;\r\n\r\n                    if (relevant) {\r\n                        exportRef.current.currentPipeline = onExport({ isPendulum });\r\n                        exportRef.current.queuedPipeline = false;\r\n\r\n                        await exportRef.current.currentPipeline;\r\n                        if (relevant) {\r\n                            const condensedCard = cardDataCondenser(currentCard);\r\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\r\n\r\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-ready')?.setAttribute('style', 'display: block');\r\n\r\n                            if (pendingSave.current) {\r\n                                pendingSave.current = false;\r\n                                download();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    const onExport = useRef(async (exportProps: {\r\n        isPendulum: boolean,\r\n    }) => {\r\n        const {\r\n            isPendulum = false\r\n        } = exportProps;\r\n        const canvasRef = drawCanvasRef.current;\r\n        const exportCtx = canvasRef?.getContext('2d');\r\n        const generateLayer = (canvasLayer: React.RefObject<HTMLCanvasElement>, ctx: CanvasRenderingContext2D | null | undefined) => {\r\n            return new Promise<boolean>(resolve => {\r\n                if (canvasLayer.current && ctx) {\r\n                    const layerData = canvasLayer.current.toDataURL('image/png');\r\n\r\n                    if (layerData) {\r\n                        var layer = new Image();\r\n                        layer.src = layerData;\r\n                        layer.onload = () => {\r\n                            ctx.drawImage(layer, 0, 0);\r\n                            resolve(true);\r\n                        };\r\n                        layer.onerror = () => resolve(false);\r\n                    } else resolve(false);\r\n                } else resolve(false);\r\n            });\r\n        };\r\n\r\n        if (canvasRef && exportCtx) {\r\n            exportCtx.clearRect(0, 0, 549, 800);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .map(callDraw => {\r\n                    return callDraw();\r\n                }));\r\n            await generateLayer(frameCanvasRef, exportCtx);\r\n            const previewCtx = previewCanvasRef.current;\r\n            if (previewCtx && exportCtx) {\r\n                if (isPendulum) {\r\n                    exportCtx.drawImage(previewCtx, 38, 144, 474, 470);\r\n                } else {\r\n                    exportCtx.drawImage(previewCtx, 67, 147, 416, 416);\r\n                }\r\n            }\r\n            await generateLayer(specialFrameCanvasRef, exportCtx);\r\n            const layerList = [\r\n                nameCanvasRef,\r\n                attributeCanvasRef,\r\n                subFamilyCanvasRef,\r\n                pendulumScaleCanvasRef,\r\n                pendulumEffectCanvasRef,\r\n                typeCanvasRef,\r\n                effectCanvasRef,\r\n                ADCanvasRef,\r\n                setIdRef,\r\n                passcodeRef,\r\n                creatorRef,\r\n                stickerRef,\r\n            ];\r\n            await Promise.all([\r\n                layerList.map(currentlayer => generateLayer(currentlayer, exportCtx)),\r\n            ]);\r\n            // await drawRefrenceImage(exportCtx);\r\n        }\r\n    }).current;\r\n\r\n    return (\r\n        <div id=\"app\"\r\n            onDrop={() => {}}\r\n            style={{\r\n                backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\r\n            }}\r\n        >\r\n            <div className={'app-container'}>\r\n                {isInitializing && <div className=\"full-loading\">\r\n                    {error.length > 0 ? <span style={{ color: '#e04040' }}>\r\n                        {error}\r\n                    </span> : 'Loading fonts and scripts...'}\r\n                </div>}\r\n                {/* <div className=\"card-filter-panel\">\r\n                </div> */}\r\n                <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\r\n                    <div className=\"export-button\">\r\n                        {!isTainted\r\n                            ? <>Canvas is safe<br />\r\n                                <button id=\"save-button-waiting\" disabled>Generating...</button>\r\n                                <button id=\"save-button-ready\" onClick={() => onSave()}>Save</button></>\r\n                            : <><div>Canvas is tainted {taintedCanvasWarning}</div>\r\n                        Manually save by right click the card → \"Save image as...\"</>}\r\n                        <div className=\"imexport\">\r\n                            <button onClick={() => {\r\n                                if (sourceType === 'internal') window.alert('Cannot export card data if you use offline image');\r\n\r\n                                window.prompt('Save card data for later use', `${cardDataCondenser(currentCard)}`);\r\n                            }}>Export Card Data</button>\r\n                            <button onClick={() => {\r\n                                const cardData = window.prompt('Paste your card data');\r\n\r\n                                if (cardData) setCard(reverseCardDataCondenser(cardData) as any);\r\n                            }}>Import Card Data</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-canvas-group\">\r\n                        <canvas id=\"export-canvas\" ref={drawCanvasRef} width={549} height={800} />\r\n                        <div id=\"export-canvas-guard\">\r\n                            <div className=\"canvas-guard-alert\">Generating...</div>\r\n                            <LoadingOutlined />\r\n                        </div>\r\n                        <canvas id=\"frameCanvas\" ref={frameCanvasRef} width={549} height={800} />\r\n                        <canvas id=\"artCanvas\" ref={artCanvasRef} width={549} height={650} />\r\n                        <canvas id=\"specialFrameCanvas\" ref={specialFrameCanvasRef} width={549} height={800} />\r\n                        <canvas id=\"nameCanvas\" ref={nameCanvasRef} width={549} height={100} />\r\n                        <canvas id=\"attributeCanvas\" ref={attributeCanvasRef} width={549} height={100} />\r\n                        <canvas id=\"subFamilyCanvas\" ref={subFamilyCanvasRef} width={549} height={150} />\r\n                        <canvas id=\"pendulumScaleCanvas\" ref={pendulumScaleCanvasRef} width={549} height={600} />\r\n                        <canvas id=\"pendulumEffectCanvas\" ref={pendulumEffectCanvasRef} width={549} height={600} />\r\n                        <canvas id=\"typeCanvas\" ref={typeCanvasRef} width={549} height={700} />\r\n                        <canvas id=\"effectCanvas\" ref={effectCanvasRef} width={549} height={750} />\r\n                        <canvas id=\"ADCanvas\" ref={ADCanvasRef} width={549} height={800} />\r\n                        <canvas id=\"setId\" ref={setIdRef} width={549} height={800} />\r\n                        <canvas id=\"passcode\" ref={passcodeRef} width={549} height={800} />\r\n                        <canvas id=\"creator\" ref={creatorRef} width={549} height={800} />\r\n                        <canvas id=\"sticker\" ref={stickerRef} width={549} height={800} />\r\n                        <canvas className=\"crop-canvas\" ref={previewCanvasRef} />\r\n                    </div>\r\n                </div>\r\n                {isInitializing === false && <CardInputPanel\r\n                    receivingCanvasRef={previewCanvasRef.current}\r\n                    currentCard={currentCard}\r\n                    onCardChange={setCard}\r\n                    defaultCropInfo={pictureCrop}\r\n                    onImageChange={(cropInfo, sourceType) => {\r\n                        setImageChangeCount(cnt => cnt + 1);\r\n                        setSourceType(sourceType);\r\n                        if (cropInfo) setCard(curr => ({\r\n                            ...curr,\r\n                            pictureCrop: cropInfo,\r\n                        }));\r\n                    }}\r\n                    onTainted={() => setTainted(true)}\r\n                >\r\n                    <AppHeader /><br />\r\n                </CardInputPanel>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}